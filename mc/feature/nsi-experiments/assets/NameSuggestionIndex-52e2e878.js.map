{"version":3,"file":"NameSuggestionIndex-52e2e878.js","sources":["../../node_modules/@turf/invariant/dist/es/index.js","../../node_modules/@turf/boolean-point-in-polygon/dist/es/index.js","../../node_modules/quickselect/quickselect.js","../../node_modules/rbush/index.js","../../node_modules/wgs84/index.js","../../src/Logic/Tags/TagsFilter.ts","../../src/Logic/Tags/RegexTag.ts","../../src/Logic/Tags/Tag.ts","../../node_modules/lineclip/index.js","../../node_modules/which-polygon/index.js","../../node_modules/@rapideditor/country-coder/dist/country-coder.mjs","../../node_modules/polyclip-ts/dist/constant.js","../../node_modules/polyclip-ts/dist/compare.js","../../node_modules/polyclip-ts/dist/orient.js","../../node_modules/bignumber.js/bignumber.mjs","../../node_modules/splaytree-ts/dist/index.js","../../node_modules/polyclip-ts/dist/identity.js","../../node_modules/polyclip-ts/dist/snap.js","../../node_modules/polyclip-ts/dist/precision.js","../../node_modules/polyclip-ts/dist/bbox.js","../../node_modules/polyclip-ts/dist/vector.js","../../node_modules/polyclip-ts/dist/sweep-event.js","../../node_modules/polyclip-ts/dist/segment.js","../../node_modules/polyclip-ts/dist/geom-in.js","../../node_modules/polyclip-ts/dist/geom-out.js","../../node_modules/polyclip-ts/dist/sweep-line.js","../../node_modules/polyclip-ts/dist/operation.js","../../node_modules/polyclip-ts/dist/index.js","../../node_modules/@mapbox/geojson-area/index.js","../../node_modules/circle-to-polygon/input-validation/validateCenter.js","../../node_modules/circle-to-polygon/input-validation/validateRadius.js","../../node_modules/circle-to-polygon/input-validation/validateNumberOfEdges.js","../../node_modules/circle-to-polygon/input-validation/validateEarthRadius.js","../../node_modules/circle-to-polygon/input-validation/validateBearing.js","../../node_modules/circle-to-polygon/input-validation/index.js","../../node_modules/circle-to-polygon/index.js","../../node_modules/geojson-precision/index.js","../../node_modules/@aitodotai/json-stringify-pretty-compact/index.js","../../node_modules/@rapideditor/location-conflation/index.mjs","../../src/Logic/Web/NameSuggestionIndex.ts"],"sourcesContent":["import { isNumber, } from \"@turf/helpers\";\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nexport function getCoord(coord) {\n    if (!coord) {\n        throw new Error(\"coord is required\");\n    }\n    if (!Array.isArray(coord)) {\n        if (coord.type === \"Feature\" &&\n            coord.geometry !== null &&\n            coord.geometry.type === \"Point\") {\n            return coord.geometry.coordinates;\n        }\n        if (coord.type === \"Point\") {\n            return coord.coordinates;\n        }\n    }\n    if (Array.isArray(coord) &&\n        coord.length >= 2 &&\n        !Array.isArray(coord[0]) &&\n        !Array.isArray(coord[1])) {\n        return coord;\n    }\n    throw new Error(\"coord must be GeoJSON Point or an Array of numbers\");\n}\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nexport function getCoords(coords) {\n    if (Array.isArray(coords)) {\n        return coords;\n    }\n    // Feature\n    if (coords.type === \"Feature\") {\n        if (coords.geometry !== null) {\n            return coords.geometry.coordinates;\n        }\n    }\n    else {\n        // Geometry\n        if (coords.coordinates) {\n            return coords.coordinates;\n        }\n    }\n    throw new Error(\"coords must be GeoJSON Feature, Geometry Object or an Array\");\n}\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nexport function containsNumber(coordinates) {\n    if (coordinates.length > 1 &&\n        isNumber(coordinates[0]) &&\n        isNumber(coordinates[1])) {\n        return true;\n    }\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error(\"coordinates must only contain numbers\");\n}\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function geojsonType(value, type, name) {\n    if (!type || !name) {\n        throw new Error(\"type and name required\");\n    }\n    if (!value || value.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            value.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nexport function featureOf(feature, type, name) {\n    if (!feature) {\n        throw new Error(\"No feature passed\");\n    }\n    if (!name) {\n        throw new Error(\".featureOf() requires a name\");\n    }\n    if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n        throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error(\"Invalid input to \" +\n            name +\n            \": must be a \" +\n            type +\n            \", given \" +\n            feature.geometry.type);\n    }\n}\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nexport function collectionOf(featureCollection, type, name) {\n    if (!featureCollection) {\n        throw new Error(\"No featureCollection passed\");\n    }\n    if (!name) {\n        throw new Error(\".collectionOf() requires a name\");\n    }\n    if (!featureCollection || featureCollection.type !== \"FeatureCollection\") {\n        throw new Error(\"Invalid input to \" + name + \", FeatureCollection required\");\n    }\n    for (var _i = 0, _a = featureCollection.features; _i < _a.length; _i++) {\n        var feature = _a[_i];\n        if (!feature || feature.type !== \"Feature\" || !feature.geometry) {\n            throw new Error(\"Invalid input to \" + name + \", Feature with geometry required\");\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error(\"Invalid input to \" +\n                name +\n                \": must be a \" +\n                type +\n                \", given \" +\n                feature.geometry.type);\n        }\n    }\n}\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nexport function getGeom(geojson) {\n    if (geojson.type === \"Feature\") {\n        return geojson.geometry;\n    }\n    return geojson;\n}\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message (unused)\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nexport function getType(geojson, _name) {\n    if (geojson.type === \"FeatureCollection\") {\n        return \"FeatureCollection\";\n    }\n    if (geojson.type === \"GeometryCollection\") {\n        return \"GeometryCollection\";\n    }\n    if (geojson.type === \"Feature\" && geojson.geometry !== null) {\n        return geojson.geometry.type;\n    }\n    return geojson.type;\n}\n","import { getCoord, getGeom } from \"@turf/invariant\";\n// http://en.wikipedia.org/wiki/Even%E2%80%93odd_rule\n// modified from: https://github.com/substack/point-in-polygon/blob/master/index.js\n// which was modified from http://www.ecse.rpi.edu/Homepages/wrf/Research/Short_Notes/pnpoly.html\n/**\n * Takes a {@link Point} and a {@link Polygon} or {@link MultiPolygon} and determines if the point\n * resides inside the polygon. The polygon can be convex or concave. The function accounts for holes.\n *\n * @name booleanPointInPolygon\n * @param {Coord} point input point\n * @param {Feature<Polygon|MultiPolygon>} polygon input polygon or multipolygon\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.ignoreBoundary=false] True if polygon boundary should be ignored when determining if\n * the point is inside the polygon otherwise false.\n * @returns {boolean} `true` if the Point is inside the Polygon; `false` if the Point is not inside the Polygon\n * @example\n * var pt = turf.point([-77, 44]);\n * var poly = turf.polygon([[\n *   [-81, 41],\n *   [-81, 47],\n *   [-72, 47],\n *   [-72, 41],\n *   [-81, 41]\n * ]]);\n *\n * turf.booleanPointInPolygon(pt, poly);\n * //= true\n */\nexport default function booleanPointInPolygon(point, polygon, options) {\n    if (options === void 0) { options = {}; }\n    // validation\n    if (!point) {\n        throw new Error(\"point is required\");\n    }\n    if (!polygon) {\n        throw new Error(\"polygon is required\");\n    }\n    var pt = getCoord(point);\n    var geom = getGeom(polygon);\n    var type = geom.type;\n    var bbox = polygon.bbox;\n    var polys = geom.coordinates;\n    // Quick elimination if point is not inside bbox\n    if (bbox && inBBox(pt, bbox) === false) {\n        return false;\n    }\n    // normalize to multipolygon\n    if (type === \"Polygon\") {\n        polys = [polys];\n    }\n    var insidePoly = false;\n    for (var i = 0; i < polys.length && !insidePoly; i++) {\n        // check if it is in the outer ring first\n        if (inRing(pt, polys[i][0], options.ignoreBoundary)) {\n            var inHole = false;\n            var k = 1;\n            // check for the point in any of the holes\n            while (k < polys[i].length && !inHole) {\n                if (inRing(pt, polys[i][k], !options.ignoreBoundary)) {\n                    inHole = true;\n                }\n                k++;\n            }\n            if (!inHole) {\n                insidePoly = true;\n            }\n        }\n    }\n    return insidePoly;\n}\n/**\n * inRing\n *\n * @private\n * @param {Array<number>} pt [x,y]\n * @param {Array<Array<number>>} ring [[x,y], [x,y],..]\n * @param {boolean} ignoreBoundary ignoreBoundary\n * @returns {boolean} inRing\n */\nfunction inRing(pt, ring, ignoreBoundary) {\n    var isInside = false;\n    if (ring[0][0] === ring[ring.length - 1][0] &&\n        ring[0][1] === ring[ring.length - 1][1]) {\n        ring = ring.slice(0, ring.length - 1);\n    }\n    for (var i = 0, j = ring.length - 1; i < ring.length; j = i++) {\n        var xi = ring[i][0];\n        var yi = ring[i][1];\n        var xj = ring[j][0];\n        var yj = ring[j][1];\n        var onBoundary = pt[1] * (xi - xj) + yi * (xj - pt[0]) + yj * (pt[0] - xi) === 0 &&\n            (xi - pt[0]) * (xj - pt[0]) <= 0 &&\n            (yi - pt[1]) * (yj - pt[1]) <= 0;\n        if (onBoundary) {\n            return !ignoreBoundary;\n        }\n        var intersect = yi > pt[1] !== yj > pt[1] &&\n            pt[0] < ((xj - xi) * (pt[1] - yi)) / (yj - yi) + xi;\n        if (intersect) {\n            isInside = !isInside;\n        }\n    }\n    return isInside;\n}\n/**\n * inBBox\n *\n * @private\n * @param {Position} pt point [x,y]\n * @param {BBox} bbox BBox [west, south, east, north]\n * @returns {boolean} true/false if point is inside BBox\n */\nfunction inBBox(pt, bbox) {\n    return (bbox[0] <= pt[0] && bbox[1] <= pt[1] && bbox[2] >= pt[0] && bbox[3] >= pt[1]);\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","module.exports.RADIUS = 6378137;\nmodule.exports.FLATTENING = 1/298.257223563;\nmodule.exports.POLAR_RADIUS = 6356752.3142;\n","import { TagConfigJson } from \"../../Models/ThemeConfig/Json/TagConfigJson\"\nimport { ExpressionSpecification } from \"maplibre-gl\"\n\nexport abstract class TagsFilter {\n    abstract asOverpass(): string[]\n\n    abstract isUsableAsAnswer(): boolean\n\n    /**\n     * Indicates some form of equivalency:\n     * if `this.shadows(t)`, then `this.matches(properties)` implies that `t.matches(properties)` for all possible properties\n     */\n    abstract shadows(other: TagsFilter): boolean\n\n    abstract matchesProperties(properties: Record<string, string>): boolean\n\n    abstract asHumanString(\n        linkToWiki?: boolean,\n        shorten?: boolean,\n        properties?: Record<string, string>\n    ): string\n\n    abstract asJson(): TagConfigJson\n\n    abstract usedKeys(): string[]\n\n    /**\n     * Returns all normal key/value pairs\n     * Regex tags, substitutions, comparisons, ... are exempt\n     */\n    abstract usedTags(): { key: string; value: string }[]\n\n    /**\n     * Converts the tagsFilter into a list of key-values that should be uploaded to OSM.\n     * Throws an error if not applicable.\n     *\n     * @param properties are the already existing tags-object. It is only used in the substituting tag and will not be changed\n     */\n    abstract asChange(properties: Readonly<Record<string, string>>): { k: string; v: string }[]\n\n    public applyOn(properties: Readonly<Record<string, string>>): Record<string, string> {\n        const copy = { ...properties }\n        const changes = this.asChange(properties)\n        for (const { k, v } of changes) {\n            copy[k] = v\n        }\n        return copy\n    }\n\n    /**\n     * Returns an optimized version (or self) of this tagsFilter\n     */\n    abstract optimize(): TagsFilter | boolean\n\n    /**\n     * Returns 'true' if the tagsfilter might select all features (i.e. the filter will return everything from OSM, except a few entries).\n     *\n     * A typical negative tagsfilter is 'key!=value'\n     *\n     * import {RegexTag} from \"./RegexTag\";\n     * import {Tag} from \"./Tag\";\n     * import {And} from \"./And\";\n     * import {Or} from \"./Or\";\n     *\n     * new Tag(\"key\",\"value\").isNegative() // => false\n     * new And([new RegexTag(\"key\",\"value\", true)]).isNegative() // => true\n     * new Or([new RegexTag(\"key\",\"value\", true), new Tag(\"x\",\"y\")]).isNegative() // => true\n     * new And([new RegexTag(\"key\",\"value\", true), new Tag(\"x\",\"y\")]).isNegative() // => false\n     */\n    abstract isNegative(): boolean\n\n    /**\n     * Walks the entire tree, every tagsFilter will be passed into the function once\n     */\n    abstract visit(f: (tagsFilter: TagsFilter) => void)\n\n    abstract asMapboxExpression(): ExpressionSpecification\n}\n","import { Tag } from \"./Tag\"\nimport { TagsFilter } from \"./TagsFilter\"\nimport { TagConfigJson } from \"../../Models/ThemeConfig/Json/TagConfigJson\"\nimport { ExpressionSpecification } from \"maplibre-gl\"\n\nexport class RegexTag extends TagsFilter {\n    public readonly key: RegExp | string\n    public readonly value: RegExp | string\n    public readonly invert: boolean\n    public readonly matchesEmpty: boolean\n\n    constructor(key: string | RegExp, value: RegExp | string, invert: boolean = false) {\n        super()\n        this.key = key\n        this.value = value\n        if (this.value instanceof RegExp && (\"\" + this.value).startsWith(\"^(^(\")) {\n            throw \"Detected a duplicate start marker ^(^( in a regextag:\" + this.value\n        }\n        this.invert = invert\n        this.matchesEmpty = RegexTag.doesMatch(\"\", this.value)\n    }\n\n    /**\n     *\n     * Checks that the value provided by the object properties (`fromTag`) match the specified regex `possibleRegex\n     *\n     * RegexTag.doesMatch(\"abc\", /abc/) // => true\n     * RegexTag.doesMatch(\"ab\", /abc/) // => false\n     * RegexTag.doesMatch(\"\", /.+/) // => false\n     * RegexTag.doesMatch(\"\", new RegExp(\".*\")) // => true\n     *\n     * @param fromTag\n     * @param possibleRegex\n     * @private\n     */\n    private static doesMatch(fromTag: string | number, possibleRegex: string | RegExp): boolean {\n        if (fromTag === undefined) {\n            return\n        }\n        if (typeof fromTag === \"number\") {\n            fromTag = \"\" + fromTag\n        }\n        if (typeof possibleRegex === \"string\") {\n            return fromTag === possibleRegex\n        }\n        return possibleRegex.test(fromTag)\n    }\n\n    private static source(r: string | RegExp, includeStartMarker: boolean = true) {\n        if (typeof r === \"string\") {\n            return r\n        }\n        if (r === undefined) {\n            return undefined\n        }\n        const src = r.source\n        if (includeStartMarker) {\n            return src\n        }\n        if (src.startsWith(\"^(\") && src.endsWith(\")$\")) {\n            return src.substring(2, src.length - 2)\n        }\n        return src\n    }\n\n    /**\n     * new RegexTag(\"a\", /^[xyz]$/).asOverpass() // => [ `[\"a\"~\"^[xyz]$\"]` ]\n     *\n     * // A wildcard regextag should only give the key\n     * new RegexTag(\"a\", /^..*$/).asOverpass() // => [ `[\"a\"]` ]\n     * new RegexTag(\"a\", /.+/).asOverpass() // => [ `[\"a\"]` ]\n     *\n     * // A regextag with a regex key should give correct output\n     * new RegexTag(/a.*x/, /^..*$/).asOverpass() // => [ `[~\"a.*x\"~\\\"^..*$\\\"]` ]\n     *\n     * // A regextag with a case invariant flag should signal this to overpass\n     * new RegexTag(\"key\", /^.*value.*$/i).asOverpass() // => [ `[\"key\"~\\\"^.*value.*$\\\",i]` ]\n     */\n    asOverpass(): string[] {\n        const inv = this.invert ? \"!\" : \"\"\n        if (typeof this.key !== \"string\") {\n            // The key is a regex too\n            return [`[~\"${this.key.source}\"${inv}~\"${RegexTag.source(this.value)}\"]`]\n        }\n\n        if (this.value instanceof RegExp) {\n            const src = this.value.source\n            if (src === \"^..*$\" || src === \".+\") {\n                // anything goes\n                return [`[${inv}\"${this.key}\"]`]\n            }\n            const modifier = this.value.ignoreCase ? \",i\" : \"\"\n            return [`[\"${this.key}\"${inv}~\"${src}\"${modifier}]`]\n        } else {\n            // Normal key and normal value\n            return [`[\"${this.key}\"${inv}=\"${this.value}\"]`]\n        }\n    }\n\n    /**\n     * import { TagUtils } from \"./TagUtils\";\n     *\n     * const t = TagUtils.Tag(\"a~b\")\n     * t.asJson() // => \"a~b\"\n     *\n     * const t = TagUtils.Tag(\"a=\")\n     * t.asJson() // => \"a=\"\n     */\n    asJson(): TagConfigJson {\n        const v = RegexTag.source(this.value, false)\n        if (typeof this.key === \"string\") {\n            const oper = typeof this.value === \"string\" ? \"=\" : \"~\"\n            return `${this.key}${this.invert ? \"!\" : \"\"}${oper}${v}`\n        }\n        return `${this.key.source}${this.invert ? \"!\" : \"\"}~~${v}`\n    }\n\n    isUsableAsAnswer(): boolean {\n        return false\n    }\n\n    /**\n     * Checks if this tag matches the given properties\n     *\n     * const isNotEmpty = new RegexTag(\"key\",/^$/, true);\n     * isNotEmpty.matchesProperties({\"key\": \"value\"}) // => true\n     * isNotEmpty.matchesProperties({\"key\": \"other_value\"}) // => true\n     * isNotEmpty.matchesProperties({\"key\": \"\"}) // => false\n     * isNotEmpty.matchesProperties({\"other_key\": \"\"}) // => false\n     * isNotEmpty.matchesProperties({\"other_key\": \"value\"}) // => false\n     *\n     * const isNotEmpty = new RegexTag(\"key\",/^..*$/, true);\n     * isNotEmpty.matchesProperties({\"key\": \"value\"}) // => false\n     * isNotEmpty.matchesProperties({\"key\": \"other_value\"}) // => false\n     * isNotEmpty.matchesProperties({\"key\": \"\"}) // => true\n     * isNotEmpty.matchesProperties({\"other_key\": \"\"}) // => true\n     * isNotEmpty.matchesProperties({\"other_key\": \"value\"}) // => true\n     *\n     * const notRegex = new RegexTag(\"x\", /^y$/, true)\n     * notRegex.matchesProperties({\"x\": \"y\"}) // => false\n     * notRegex.matchesProperties({\"x\": \"z\"}) // => true\n     * notRegex.matchesProperties({\"x\": \"\"}) // => true\n     * notRegex.matchesProperties({}) // => true\n     *\n     * const bicycleTubeRegex = new RegexTag(\"vending\", /^.*bicycle_tube.*$/)\n     * bicycleTubeRegex.matchesProperties({\"vending\": \"bicycle_tube\"}) // => true\n     * bicycleTubeRegex.matchesProperties({\"vending\": \"something;bicycle_tube\"}) // => true\n     * bicycleTubeRegex.matchesProperties({\"vending\": \"bicycle_tube;something\"}) // => true\n     * bicycleTubeRegex.matchesProperties({\"vending\": \"xyz;bicycle_tube;something\"}) // => true\n     *\n     * const nameStartsWith = new RegexTag(\"name\", /^[sS]peelbox.*$/)\n     * nameStartsWith.matchesProperties({\"name\": \"Speelbos Sint-Anna\"} => true\n     * nameStartsWith.matchesProperties({\"name\": \"speelbos Sint-Anna\"} => true\n     * nameStartsWith.matchesProperties({\"name\": \"Sint-Anna\"} => false\n     * nameStartsWith.matchesProperties({\"name\": \"\"} => false\n     *\n     * const notEmptyList = new RegexTag(\"xyz\", /^\\[\\]$/, true)\n     * notEmptyList.matchesProperties({\"xyz\": undefined}) // => true\n     * notEmptyList.matchesProperties({\"xyz\": \"[]\"}) // => false\n     * notEmptyList.matchesProperties({\"xyz\": \"[\\\"abc\\\"]\"}) // => true\n     *\n     * const importMatch = new RegexTag(\"tags\", /(^|.*;)amenity=public_bookcase($|;.*)/)\n     * importMatch.matchesProperties({\"tags\": \"amenity=public_bookcase;name=test\"}) // =>true\n     * importMatch.matchesProperties({\"tags\": \"amenity=public_bookcase\"}) // =>true\n     * importMatch.matchesProperties({\"tags\": \"name=test;amenity=public_bookcase\"}) // =>true\n     * importMatch.matchesProperties({\"tags\": \"amenity=bench\"}) // =>false\n     *\n     * new RegexTag(\"key\",\"value\").matchesProperties({\"otherkey\":\"value\"}) // => false\n     * new RegexTag(\"key\",\"value\",true).matchesProperties({\"otherkey\":\"something\"}) // => true\n     *\n     * const v: string = <any> {someJson: \"\"}\n     * new RegexTag(\"key\", new RegExp(\".*\")).matchesProperties({\"key\": v}) // => true\n     * new RegexTag(\"key\", new RegExp(\".*\")).matchesProperties({\"key\": \"\"}) // => true\n     * new RegexTag(\"key\", new RegExp(\".*\")).matchesProperties({\"key\": null}) // => true\n     * new RegexTag(\"key\", new RegExp(\".*\")).matchesProperties({\"key\": undefined}) // => true\n     *\n     * const v: string = <any> {someJson: \"\"}\n     * new RegexTag(\"key\", new RegExp(\".+\")).matchesProperties({\"key\": null}) // => false\n     * new RegexTag(\"key\", new RegExp(\".+\")).matchesProperties({\"key\": undefined}) // => false\n     * new RegexTag(\"key\", new RegExp(\".+\")).matchesProperties({\"key\": v}) // => true\n     * new RegexTag(\"key\", new RegExp(\".+\")).matchesProperties({\"key\": \"\"}) // => false\n     *\n     * // Show work with non-string objects\n     * new RegexTag(\"key\", \"true\").matchesProperties({\"key\": true}) // => true\n     * new RegexTag(\"key\", \"true\", true).matchesProperties({\"key\": true}) // => false\n     */\n    matchesProperties(tags: Record<string, string | number | boolean>): boolean {\n        if (typeof this.key === \"string\") {\n            let value = tags[this.key]\n            if (!value || value === \"\") {\n                // No tag is known, so we assume the empty string\n                // If this regexTag matches the empty string, we return true, otherwise false\n                // (Note: if inverted, we must reverse this)\n                return this.invert !== this.matchesEmpty\n            }\n\n            if (typeof value === \"string\") {\n                return RegexTag.doesMatch(value, this.value) != this.invert\n            }\n\n            // The value under test is _not_ a string; it can be a culculated tag, thus be e.g. a number or a boolean\n            // It might also be an object\n\n            if (typeof this.value !== \"string\") {\n                const regExp = this.value\n                if (regExp.source === \".*\") {\n                    // We match anything, and we do have some value\n                    return !this.invert\n                }\n            }\n            if (typeof value !== \"string\") {\n                value = JSON.stringify(value)\n            }\n            return RegexTag.doesMatch(value, this.value) != this.invert\n        }\n\n        for (const key in tags) {\n            if (key === undefined) {\n                continue\n            }\n            if (RegexTag.doesMatch(key, this.key)) {\n                let value = tags[key] ?? \"\"\n                if (typeof value !== \"string\") {\n                    value = JSON.stringify(value)\n                }\n                return RegexTag.doesMatch(value, this.value) != this.invert\n            }\n        }\n        if (this.matchesEmpty) {\n            // The value is 'empty'\n            return !this.invert\n        }\n        // The matching key was not found\n        return this.invert\n    }\n\n    asHumanString() {\n        if (typeof this.key === \"string\") {\n            const oper = typeof this.value === \"string\" ? \"=\" : \"~\"\n            return `${this.key}${this.invert ? \"!\" : \"\"}${oper}${RegexTag.source(this.value)}`\n        }\n        return `${this.key.source}${this.invert ? \"!\" : \"\"}~~${RegexTag.source(this.value)}`\n    }\n\n    /**\n     *\n     * new RegexTag(\"key\",\"value\").shadows(new Tag(\"key\",\"value\")) // => true\n     * new RegexTag(\"key\",/value/).shadows(new RegexTag(\"key\",\"value\")) // => true\n     * new RegexTag(\"key\",/^..*$/).shadows(new Tag(\"key\",\"value\")) // => false\n     * new RegexTag(\"key\",/^..*$/).shadows(new Tag(\"other_key\",\"value\")) // => false\n     * new RegexTag(\"key\", /^a+$/).shadows(new Tag(\"key\", \"a\")) // => false\n     *\n     *\n     * // should not shadow too eagerly: the first tag might match 'key=abc', the second won't\n     *  new RegexTag(\"key\", /^..*$/).shadows(new Tag(\"key\", \"some_value\")) // => false\n     *\n     * // should handle 'invert'\n     * new RegexTag(\"key\",/^..*$/, true).shadows(new Tag(\"key\",\"value\")) // => false\n     * new RegexTag(\"key\",/^..*$/, true).shadows(new Tag(\"key\",\"\")) // => true\n     * new RegexTag(\"key\",\"value\", true).shadows(new Tag(\"key\",\"value\")) // => false\n     * new RegexTag(\"key\",\"value\", true).shadows(new Tag(\"key\",\"some_other_value\")) // => false\n     * new RegexTag(\"key\",\"value\", true).shadows(new Tag(\"key\",\"some_other_value\", true)) // => false\n     *\n     * const route = TagUtils.Tag(\"climbing!~route\")\n     * const routeBottom = TagUtils.Tag(\"climbing!~route_bottom\")\n     * route.shadows(routeBottom) // => false\n     * routeBottom.shadows(route) // => false\n     *\n     */\n    shadows(other: TagsFilter): boolean {\n        if (other instanceof RegexTag) {\n            if ((other.key[\"source\"] ?? other.key) !== (this.key[\"source\"] ?? this.key)) {\n                // Keys don't match, never shadowing\n                return false\n            }\n            if (\n                (other.value[\"source\"] ?? other.value) === (this.value[\"source\"] ?? this.value) &&\n                this.invert == other.invert\n            ) {\n                // Values (and inverts) match\n                return true\n            }\n            if (typeof other.value === \"string\") {\n                const valuesMatch = RegexTag.doesMatch(other.value, this.value)\n                if (!this.invert && !other.invert) {\n                    // this: key~value, other: key=value\n                    return valuesMatch\n                }\n                if (this.invert && !other.invert) {\n                    // this: key!~value, other: key=value\n                    return !valuesMatch\n                }\n                if (!this.invert && other.invert) {\n                    // this: key~value, other: key!=value\n                    return !valuesMatch\n                }\n                if (!this.invert && !other.invert) {\n                    // this: key!~value, other: key!=value\n                    return valuesMatch\n                }\n            }\n            return false\n        }\n        if (other instanceof Tag) {\n            if (!RegexTag.doesMatch(other.key, this.key)) {\n                // Keys don't match\n                return false\n            }\n\n            if (this.value[\"source\"] === \"^..*$\") {\n                if (this.invert) {\n                    return other.value === \"\"\n                }\n                return false\n            }\n\n            if (this.invert) {\n                /*\n                 * this: \"a!=b\"\n                 * other: \"a=c\"\n                 * actual property: a=x\n                 * In other words: shadowing will never occur here\n                 */\n                return false\n            }\n            // Unless the values are the same, it is pretty hard to figure out if they are shadowing. This is future work\n            return (this.value[\"source\"] ?? this.value) === other.value\n        }\n        return false\n    }\n\n    usedKeys(): string[] {\n        if (typeof this.key === \"string\") {\n            return [this.key]\n        }\n        return []\n    }\n\n    usedTags(): { key: string; value: string }[] {\n        return []\n    }\n\n    asChange(): { k: string; v: string }[] {\n        if (this.invert) {\n            return []\n        }\n        if (typeof this.key === \"string\") {\n            if (typeof this.value === \"string\") {\n                return [{ k: this.key, v: this.value }]\n            }\n            return [{ k: this.key, v: undefined }]\n        }\n        console.error(\"Cannot export regex tag to asChange; \", this.key, this.value)\n        return []\n    }\n\n    optimize(): TagsFilter | boolean {\n        return this\n    }\n\n    isNegative(): boolean {\n        return this.invert\n    }\n\n    visit(f: (TagsFilter) => void) {\n        f(this)\n    }\n\n    asMapboxExpression(): ExpressionSpecification {\n        if (typeof this.key === \"string\" && typeof this.value === \"string\") {\n            return [this.invert ? \"!=\" : \"==\", [\"get\", this.key], this.value]\n        }\n        throw \"TODO\"\n    }\n}\n","import { Utils } from \"../../Utils\"\nimport { TagsFilter } from \"./TagsFilter\"\nimport { TagConfigJson } from \"../../Models/ThemeConfig/Json/TagConfigJson\"\nimport { ExpressionSpecification } from \"maplibre-gl\"\nimport { RegexTag } from \"./RegexTag\"\n\nexport class Tag extends TagsFilter {\n    public key: string\n    public value: string\n\n    constructor(key: string, value: string) {\n        super()\n        this.key = key\n        this.value = value\n        if (key === undefined || key === \"\") {\n            throw \"Invalid key: undefined or empty\"\n        }\n        if (value === undefined) {\n            throw `Invalid value while constructing a Tag with key '${key}': value is undefined`\n        }\n        if (value === \"*\") {\n            console.warn(`Got suspicious tag ${key}=*   ; did you mean ${key}~* ?`)\n        }\n    }\n\n    /**\n     *\n     * const tag = new Tag(\"key\",\"value\")\n     * tag.matchesProperties({\"key\": \"value\"}) // =>  true\n     * tag.matchesProperties({\"key\": \"z\"}) // =>  false\n     * tag.matchesProperties({\"key\": \"\"}) // => false\n     * tag.matchesProperties({\"other_key\": \"\"}) // => false\n     * tag.matchesProperties({\"other_key\": \"value\"}) // =>  false\n     *\n     * const isEmpty = new Tag(\"key\",\"\")\n     * isEmpty.matchesProperties({\"key\": \"value\"}) // => false\n     * isEmpty.matchesProperties({\"key\": \"\"}) // => true\n     * isEmpty.matchesProperties({\"other_key\": \"\"}) // => true\n     * isEmpty.matchesProperties({\"other_key\": \"value\"}) // => true\n     * isEmpty.matchesProperties({\"key\": undefined}) // => true\n     *\n     * const isTrue = new Tag(\"key\": \"true\")\n     * isTrue.matchesProperties({\"key\":\"true\"}) // => true\n     * isTrue.matchesProperties({\"key\": true}) // => true\n     */\n    matchesProperties(properties: Record<string, string>): boolean {\n        let foundValue = properties[this.key]\n\n        if (foundValue === undefined && (this.value === \"\" || this.value === undefined)) {\n            // The tag was not found\n            // and it shouldn't be found!\n            return true\n        }\n        if (typeof foundValue !== \"string\") {\n            if (foundValue === true && (this.value === \"true\" || this.value === \"yes\")) {\n                return true\n            }\n            if (foundValue === false && (this.value === \"false\" || this.value === \"no\")) {\n                return true\n            }\n            foundValue = \"\" + foundValue\n        }\n        return foundValue === this.value\n    }\n\n    asOverpass(): string[] {\n        if (this.value === \"\") {\n            // NOT having this key\n            return ['[!\"' + this.key + '\"]']\n        }\n        return [`[\"${this.key}\"=\"${this.value}\"]`]\n    }\n\n    asJson(): TagConfigJson {\n        return this.key + \"=\" + this.value\n    }\n\n    /**\n\n     const t = new Tag(\"key\", \"value\")\n     t.asHumanString() // => \"key=value\"\n     t.asHumanString(true) // => \"<a href='https://wiki.openstreetmap.org/wiki/Key:key' target='_blank'>key</a>=<a href='https://wiki.openstreetmap.org/wiki/Tag:key%3Dvalue' target='_blank'>value</a>\"\n     */\n    asHumanString(\n        linkToWiki?: boolean,\n        shorten?: boolean,\n        currentProperties?: Record<string, string>\n    ) {\n        let v = this.value\n        if (typeof v !== \"string\") {\n            v = JSON.stringify(v)\n        }\n        if (shorten) {\n            v = Utils.EllipsesAfter(v, 25)\n        }\n        if ((v === \"\" || v === undefined) && currentProperties !== undefined) {\n            if (!currentProperties || Object.keys(currentProperties).length === 0) {\n                // We are probably generating documentation\n                return this.key + \"=\"\n            }\n\n            // This tag will be removed if in the properties, so we indicate this with special rendering\n            if ((currentProperties[this.key] ?? \"\") === \"\") {\n                // This tag is not present in the current properties, so this tag doesn't change anything\n                return \"\"\n            }\n            return \"<span class='line-through'>\" + this.key + \"</span>\"\n        }\n        if (linkToWiki) {\n            return (\n                `<a href='https://wiki.openstreetmap.org/wiki/Key:${this.key}' target='_blank'>${this.key}</a>` +\n                `=` +\n                `<a href='https://wiki.openstreetmap.org/wiki/Tag:${this.key}%3D${this.value}' target='_blank'>${v}</a>`\n            )\n        }\n        return this.key + \"=\" + v\n    }\n\n    isUsableAsAnswer(): boolean {\n        return true\n    }\n\n    /**\n     *\n     * import {RegexTag} from \"./RegexTag\";\n     * import {And} from \"./And\";\n     *\n     * // should handle advanced regexes\n     * new Tag(\"key\", \"aaa\").shadows(new RegexTag(\"key\", /a+/)) // => true\n     * new Tag(\"key\",\"value\").shadows(new RegexTag(\"key\", /^..*$/, true)) // => false\n     * new Tag(\"key\",\"value\").shadows(new Tag(\"key\",\"value\")) // => true\n     * new Tag(\"key\",\"some_other_value\").shadows(new RegexTag(\"key\", \"value\", true)) // => true\n     * new Tag(\"key\",\"value\").shadows(new RegexTag(\"key\", \"value\", true)) // => false\n     * new Tag(\"key\",\"value\").shadows(new RegexTag(\"otherkey\", \"value\", true)) // => false\n     * new Tag(\"key\",\"value\").shadows(new RegexTag(\"otherkey\", \"value\", false)) // => false\n     * new Tag(\"key\",\"value\").shadows(new And([new Tag(\"x\",\"y\"), new RegexTag(\"a\",\"b\", true)]) // => false\n     */\n    shadows(other: TagsFilter): boolean {\n        if ((other[\"key\"] !== this.key)) {\n            return false\n        }\n        if(other instanceof Tag){\n            // Other.key === this.key\n            return other.value === this.value\n        }\n        if(other instanceof RegexTag){\n            return other.matchesProperties({[this.key]: this.value})\n        }\n        return false\n    }\n\n    usedKeys(): string[] {\n        return [this.key]\n    }\n\n    usedTags(): { key: string; value: string }[] {\n        if (this.value == \"\") {\n            return []\n        }\n        return [this]\n    }\n\n    asChange(): { k: string; v: string }[] {\n        return [{ k: this.key, v: this.value }]\n    }\n\n    optimize(): TagsFilter | boolean {\n        return this\n    }\n\n    isNegative(): boolean {\n        return false\n    }\n\n    visit(f: (tagsFilter: TagsFilter) => void) {\n        f(this)\n    }\n\n    asMapboxExpression(): ExpressionSpecification {\n        if (this.value === \"\") {\n            return [\"any\", [\"!\", [\"has\", this.key]], [\"==\", [\"get\", this.key], \"\"]]\n        }\n        return [\"==\", [\"get\", this.key], this.value]\n    }\n}\n","'use strict';\n\nmodule.exports = lineclip;\n\nlineclip.polyline = lineclip;\nlineclip.polygon = polygonclip;\n\n\n// Cohen-Sutherland line clippign algorithm, adapted to efficiently\n// handle polylines rather than just segments\n\nfunction lineclip(points, bbox, result) {\n\n    var len = points.length,\n        codeA = bitCode(points[0], bbox),\n        part = [],\n        i, a, b, codeB, lastCode;\n\n    if (!result) result = [];\n\n    for (i = 1; i < len; i++) {\n        a = points[i - 1];\n        b = points[i];\n        codeB = lastCode = bitCode(b, bbox);\n\n        while (true) {\n\n            if (!(codeA | codeB)) { // accept\n                part.push(a);\n\n                if (codeB !== lastCode) { // segment went outside\n                    part.push(b);\n\n                    if (i < len - 1) { // start a new line\n                        result.push(part);\n                        part = [];\n                    }\n                } else if (i === len - 1) {\n                    part.push(b);\n                }\n                break;\n\n            } else if (codeA & codeB) { // trivial reject\n                break;\n\n            } else if (codeA) { // a outside, intersect with clip edge\n                a = intersect(a, b, codeA, bbox);\n                codeA = bitCode(a, bbox);\n\n            } else { // b outside\n                b = intersect(a, b, codeB, bbox);\n                codeB = bitCode(b, bbox);\n            }\n        }\n\n        codeA = lastCode;\n    }\n\n    if (part.length) result.push(part);\n\n    return result;\n}\n\n// Sutherland-Hodgeman polygon clipping algorithm\n\nfunction polygonclip(points, bbox) {\n\n    var result, edge, prev, prevInside, i, p, inside;\n\n    // clip against each side of the clip rectangle\n    for (edge = 1; edge <= 8; edge *= 2) {\n        result = [];\n        prev = points[points.length - 1];\n        prevInside = !(bitCode(prev, bbox) & edge);\n\n        for (i = 0; i < points.length; i++) {\n            p = points[i];\n            inside = !(bitCode(p, bbox) & edge);\n\n            // if segment goes through the clip window, add an intersection\n            if (inside !== prevInside) result.push(intersect(prev, p, edge, bbox));\n\n            if (inside) result.push(p); // add a point if it's inside\n\n            prev = p;\n            prevInside = inside;\n        }\n\n        points = result;\n\n        if (!points.length) break;\n    }\n\n    return result;\n}\n\n// intersect a segment against one of the 4 lines that make up the bbox\n\nfunction intersect(a, b, edge, bbox) {\n    return edge & 8 ? [a[0] + (b[0] - a[0]) * (bbox[3] - a[1]) / (b[1] - a[1]), bbox[3]] : // top\n           edge & 4 ? [a[0] + (b[0] - a[0]) * (bbox[1] - a[1]) / (b[1] - a[1]), bbox[1]] : // bottom\n           edge & 2 ? [bbox[2], a[1] + (b[1] - a[1]) * (bbox[2] - a[0]) / (b[0] - a[0])] : // right\n           edge & 1 ? [bbox[0], a[1] + (b[1] - a[1]) * (bbox[0] - a[0]) / (b[0] - a[0])] : // left\n           null;\n}\n\n// bit code reflects the point position relative to the bbox:\n\n//         left  mid  right\n//    top  1001  1000  1010\n//    mid  0001  0000  0010\n// bottom  0101  0100  0110\n\nfunction bitCode(p, bbox) {\n    var code = 0;\n\n    if (p[0] < bbox[0]) code |= 1; // left\n    else if (p[0] > bbox[2]) code |= 2; // right\n\n    if (p[1] < bbox[1]) code |= 4; // bottom\n    else if (p[1] > bbox[3]) code |= 8; // top\n\n    return code;\n}\n","'use strict';\n\nvar rbush = require('rbush');\nvar lineclip = require('lineclip');\n\nmodule.exports = whichPolygon;\n\nfunction whichPolygon(data) {\n    var bboxes = [];\n    for (var i = 0; i < data.features.length; i++) {\n        var feature = data.features[i];\n\n        // unlocated GeoJSON features can have null `geometry`\n        if (!feature.geometry) continue;\n\n        var coords = feature.geometry.coordinates;\n\n        if (feature.geometry.type === 'Polygon') {\n            bboxes.push(treeItem(coords, feature.properties));\n\n        } else if (feature.geometry.type === 'MultiPolygon') {\n            for (var j = 0; j < coords.length; j++) {\n                bboxes.push(treeItem(coords[j], feature.properties));\n            }\n        }\n    }\n\n    var tree = rbush().load(bboxes);\n\n    function query(p, multi) {\n        var output = [],\n            result = tree.search({\n                minX: p[0],\n                minY: p[1],\n                maxX: p[0],\n                maxY: p[1]\n            });\n        for (var i = 0; i < result.length; i++) {\n            if (insidePolygon(result[i].coords, p)) {\n                if (multi)\n                    output.push(result[i].props);\n                else\n                    return result[i].props;\n            }\n        }\n        return multi && output.length ? output : null;\n    }\n\n    query.tree = tree;\n    query.bbox = function queryBBox(bbox) {\n        var output = [];\n        var result = tree.search({\n            minX: bbox[0],\n            minY: bbox[1],\n            maxX: bbox[2],\n            maxY: bbox[3]\n        });\n        for (var i = 0; i < result.length; i++) {\n            if (polygonIntersectsBBox(result[i].coords, bbox)) {\n                output.push(result[i].props);\n            }\n        }\n        return output;\n    };\n\n    return query;\n}\n\nfunction polygonIntersectsBBox(polygon, bbox) {\n    var bboxCenter = [\n        (bbox[0] + bbox[2]) / 2,\n        (bbox[1] + bbox[3]) / 2\n    ];\n    if (insidePolygon(polygon, bboxCenter)) return true;\n    for (var i = 0; i < polygon.length; i++) {\n        if (lineclip(polygon[i], bbox).length > 0) return true;\n    }\n    return false;\n}\n\n// ray casting algorithm for detecting if point is in polygon\nfunction insidePolygon(rings, p) {\n    var inside = false;\n    for (var i = 0, len = rings.length; i < len; i++) {\n        var ring = rings[i];\n        for (var j = 0, len2 = ring.length, k = len2 - 1; j < len2; k = j++) {\n            if (rayIntersect(p, ring[j], ring[k])) inside = !inside;\n        }\n    }\n    return inside;\n}\n\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\n\nfunction treeItem(coords, props) {\n    var item = {\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity,\n        coords: coords,\n        props: props\n    };\n\n    for (var i = 0; i < coords[0].length; i++) {\n        var p = coords[0][i];\n        item.minX = Math.min(item.minX, p[0]);\n        item.minY = Math.min(item.minY, p[1]);\n        item.maxX = Math.max(item.maxX, p[0]);\n        item.maxY = Math.max(item.maxY, p[1]);\n    }\n    return item;\n}\n","// src/country-coder.ts\nimport whichPolygon from \"which-polygon\";\n\n// src/data/borders.json\nvar borders_default = { type: \"FeatureCollection\", features: [\n  { type: \"Feature\", properties: { wikidata: \"Q21\", nameEn: \"England\", aliases: [\"GB-ENG\"], country: \"GB\", groups: [\"Q23666\", \"Q3336843\", \"154\", \"150\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"44\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-6.03913, 51.13217], [-7.74976, 48.64773], [1.17405, 50.74239], [2.18458, 51.52087], [2.56575, 51.85301], [0.792, 57.56437], [-2.30613, 55.62698], [-2.17058, 55.45916], [-2.6095, 55.28488], [-2.63532, 55.19452], [-3.02906, 55.04606], [-3.09361, 54.94924], [-3.38407, 54.94278], [-4.1819, 54.57861], [-3.5082, 53.54318], [-3.08228, 53.25526], [-3.03675, 53.25092], [-2.92329, 53.19383], [-2.92022, 53.17685], [-2.98598, 53.15589], [-2.90649, 53.10964], [-2.87469, 53.12337], [-2.89131, 53.09374], [-2.83133, 52.99184], [-2.7251, 52.98389], [-2.72221, 52.92969], [-2.80549, 52.89428], [-2.85897, 52.94487], [-2.92401, 52.93836], [-2.97243, 52.9651], [-3.13576, 52.895], [-3.15744, 52.84947], [-3.16105, 52.79599], [-3.08734, 52.77504], [-3.01001, 52.76636], [-2.95581, 52.71794], [-3.01724, 52.72083], [-3.04398, 52.65435], [-3.13648, 52.58208], [-3.12926, 52.5286], [-3.09746, 52.53077], [-3.08662, 52.54811], [-3.00929, 52.57774], [-2.99701, 52.551], [-3.03603, 52.49969], [-3.13359, 52.49174], [-3.22971, 52.45344], [-3.22754, 52.42526], [-3.04687, 52.34504], [-2.95364, 52.3501], [-2.99701, 52.323], [-3.00785, 52.2753], [-3.09289, 52.20546], [-3.12638, 52.08114], [-2.97111, 51.90456], [-2.8818, 51.93196], [-2.78742, 51.88833], [-2.74277, 51.84367], [-2.66234, 51.83555], [-2.66336, 51.59504], [-3.20563, 51.31615], [-6.03913, 51.13217]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q22\", nameEn: \"Scotland\", aliases: [\"GB-SCT\"], country: \"GB\", groups: [\"Q23666\", \"Q3336843\", \"154\", \"150\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"44\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[0.792, 57.56437], [-0.3751, 61.32236], [-14.78497, 57.60709], [-6.82333, 55.83103], [-4.69044, 54.3629], [-3.38407, 54.94278], [-3.09361, 54.94924], [-3.02906, 55.04606], [-2.63532, 55.19452], [-2.6095, 55.28488], [-2.17058, 55.45916], [-2.30613, 55.62698], [0.792, 57.56437]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q25\", nameEn: \"Wales\", aliases: [\"GB-WLS\"], country: \"GB\", groups: [\"Q23666\", \"Q3336843\", \"154\", \"150\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"44\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-3.5082, 53.54318], [-5.37267, 53.63269], [-6.03913, 51.13217], [-3.20563, 51.31615], [-2.66336, 51.59504], [-2.66234, 51.83555], [-2.74277, 51.84367], [-2.78742, 51.88833], [-2.8818, 51.93196], [-2.97111, 51.90456], [-3.12638, 52.08114], [-3.09289, 52.20546], [-3.00785, 52.2753], [-2.99701, 52.323], [-2.95364, 52.3501], [-3.04687, 52.34504], [-3.22754, 52.42526], [-3.22971, 52.45344], [-3.13359, 52.49174], [-3.03603, 52.49969], [-2.99701, 52.551], [-3.00929, 52.57774], [-3.08662, 52.54811], [-3.09746, 52.53077], [-3.12926, 52.5286], [-3.13648, 52.58208], [-3.04398, 52.65435], [-3.01724, 52.72083], [-2.95581, 52.71794], [-3.01001, 52.76636], [-3.08734, 52.77504], [-3.16105, 52.79599], [-3.15744, 52.84947], [-3.13576, 52.895], [-2.97243, 52.9651], [-2.92401, 52.93836], [-2.85897, 52.94487], [-2.80549, 52.89428], [-2.72221, 52.92969], [-2.7251, 52.98389], [-2.83133, 52.99184], [-2.89131, 53.09374], [-2.87469, 53.12337], [-2.90649, 53.10964], [-2.98598, 53.15589], [-2.92022, 53.17685], [-2.92329, 53.19383], [-3.03675, 53.25092], [-3.08228, 53.25526], [-3.5082, 53.54318]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q26\", nameEn: \"Northern Ireland\", aliases: [\"GB-NIR\"], country: \"GB\", groups: [\"Q22890\", \"Q3336843\", \"154\", \"150\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"44\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-6.34755, 55.49206], [-7.2471, 55.06933], [-7.34464, 55.04688], [-7.4033, 55.00391], [-7.40004, 54.94498], [-7.44404, 54.9403], [-7.4473, 54.87003], [-7.47626, 54.83084], [-7.54508, 54.79401], [-7.54671, 54.74606], [-7.64449, 54.75265], [-7.75041, 54.7103], [-7.83352, 54.73854], [-7.93293, 54.66603], [-7.70315, 54.62077], [-7.8596, 54.53671], [-7.99812, 54.54427], [-8.04538, 54.48941], [-8.179, 54.46763], [-8.04555, 54.36292], [-7.87101, 54.29299], [-7.8596, 54.21779], [-7.81397, 54.20159], [-7.69501, 54.20731], [-7.55812, 54.12239], [-7.4799, 54.12239], [-7.44567, 54.1539], [-7.32834, 54.11475], [-7.30553, 54.11869], [-7.34005, 54.14698], [-7.29157, 54.17191], [-7.28017, 54.16714], [-7.29687, 54.1354], [-7.29493, 54.12013], [-7.26316, 54.13863], [-7.25012, 54.20063], [-7.14908, 54.22732], [-7.19145, 54.31296], [-7.02034, 54.4212], [-6.87775, 54.34682], [-6.85179, 54.29176], [-6.81583, 54.22791], [-6.74575, 54.18788], [-6.70175, 54.20218], [-6.6382, 54.17071], [-6.66264, 54.0666], [-6.62842, 54.03503], [-6.47849, 54.06947], [-6.36605, 54.07234], [-6.36279, 54.11248], [-6.32694, 54.09337], [-6.29003, 54.11278], [-6.26218, 54.09785], [-5.83481, 53.87749], [-4.69044, 54.3629], [-6.34755, 55.49206]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q35\", nameEn: \"Denmark\", country: \"DK\", groups: [\"EU\", \"154\", \"150\", \"UN\"], callingCodes: [\"45\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[12.16597, 56.60205], [10.40861, 58.38489], [7.28637, 57.35913], [8.02459, 55.09613], [8.45719, 55.06747], [8.55769, 54.91837], [8.63979, 54.91069], [8.76387, 54.8948], [8.81178, 54.90518], [8.92795, 54.90452], [9.04629, 54.87249], [9.14275, 54.87421], [9.20571, 54.85841], [9.24631, 54.84726], [9.23445, 54.83432], [9.2474, 54.8112], [9.32771, 54.80602], [9.33849, 54.80233], [9.36496, 54.81749], [9.38532, 54.83968], [9.41213, 54.84254], [9.43155, 54.82586], [9.4659, 54.83131], [9.58937, 54.88785], [9.62734, 54.88057], [9.61187, 54.85548], [9.73563, 54.8247], [9.89314, 54.84171], [10.16755, 54.73883], [10.31111, 54.65968], [11.00303, 54.63689], [11.90309, 54.38543], [12.85844, 54.82438], [13.93395, 54.84044], [15.36991, 54.73263], [15.79951, 55.54655], [14.89259, 55.5623], [14.28399, 55.1553], [12.84405, 55.13257], [12.60345, 55.42675], [12.88472, 55.63369], [12.6372, 55.91371], [12.65312, 56.04345], [12.07466, 56.29488], [12.16597, 56.60205]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q55\", nameEn: \"Netherlands\", country: \"NL\", groups: [\"EU\", \"155\", \"150\", \"UN\"], callingCodes: [\"31\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[5.45168, 54.20039], [2.56575, 51.85301], [3.36263, 51.37112], [3.38696, 51.33436], [3.35847, 51.31572], [3.38289, 51.27331], [3.41704, 51.25933], [3.43488, 51.24135], [3.52698, 51.2458], [3.51502, 51.28697], [3.58939, 51.30064], [3.78999, 51.25766], [3.78783, 51.2151], [3.90125, 51.20371], [3.97889, 51.22537], [4.01957, 51.24504], [4.05165, 51.24171], [4.16721, 51.29348], [4.24024, 51.35371], [4.21923, 51.37443], [4.33265, 51.37687], [4.34086, 51.35738], [4.39292, 51.35547], [4.43777, 51.36989], [4.38064, 51.41965], [4.39747, 51.43316], [4.38122, 51.44905], [4.47736, 51.4778], [4.5388, 51.48184], [4.54675, 51.47265], [4.52846, 51.45002], [4.53521, 51.4243], [4.57489, 51.4324], [4.65442, 51.42352], [4.72935, 51.48424], [4.74578, 51.48937], [4.77321, 51.50529], [4.78803, 51.50284], [4.84139, 51.4799], [4.82409, 51.44736], [4.82946, 51.4213], [4.78314, 51.43319], [4.76577, 51.43046], [4.77229, 51.41337], [4.78941, 51.41102], [4.84988, 51.41502], [4.90016, 51.41404], [4.92152, 51.39487], [5.00393, 51.44406], [5.0106, 51.47167], [5.03281, 51.48679], [5.04774, 51.47022], [5.07891, 51.4715], [5.10456, 51.43163], [5.07102, 51.39469], [5.13105, 51.34791], [5.13377, 51.31592], [5.16222, 51.31035], [5.2002, 51.32243], [5.24244, 51.30495], [5.22542, 51.26888], [5.23814, 51.26064], [5.26461, 51.26693], [5.29716, 51.26104], [5.33886, 51.26314], [5.347, 51.27502], [5.41672, 51.26248], [5.4407, 51.28169], [5.46519, 51.2849], [5.48476, 51.30053], [5.515, 51.29462], [5.5569, 51.26544], [5.5603, 51.22249], [5.65145, 51.19788], [5.65528, 51.18736], [5.70344, 51.1829], [5.74617, 51.18928], [5.77735, 51.17845], [5.77697, 51.1522], [5.82564, 51.16753], [5.85508, 51.14445], [5.80798, 51.11661], [5.8109, 51.10861], [5.83226, 51.10585], [5.82921, 51.09328], [5.79903, 51.09371], [5.79835, 51.05834], [5.77258, 51.06196], [5.75961, 51.03113], [5.77688, 51.02483], [5.76242, 50.99703], [5.71864, 50.96092], [5.72875, 50.95428], [5.74752, 50.96202], [5.75927, 50.95601], [5.74644, 50.94723], [5.72545, 50.92312], [5.72644, 50.91167], [5.71626, 50.90796], [5.69858, 50.91046], [5.67886, 50.88142], [5.64504, 50.87107], [5.64009, 50.84742], [5.65259, 50.82309], [5.70118, 50.80764], [5.68995, 50.79641], [5.70107, 50.7827], [5.68091, 50.75804], [5.69469, 50.75529], [5.72216, 50.76398], [5.73904, 50.75674], [5.74356, 50.7691], [5.76533, 50.78159], [5.77513, 50.78308], [5.80673, 50.7558], [5.84548, 50.76542], [5.84888, 50.75448], [5.88734, 50.77092], [5.89129, 50.75125], [5.89132, 50.75124], [5.95942, 50.7622], [5.97545, 50.75441], [6.01976, 50.75398], [6.02624, 50.77453], [5.97497, 50.79992], [5.98404, 50.80988], [6.00462, 50.80065], [6.02328, 50.81694], [6.01921, 50.84435], [6.05623, 50.8572], [6.05702, 50.85179], [6.07431, 50.84674], [6.07693, 50.86025], [6.08805, 50.87223], [6.07486, 50.89307], [6.09297, 50.92066], [6.01615, 50.93367], [6.02697, 50.98303], [5.95282, 50.98728], [5.90296, 50.97356], [5.90493, 51.00198], [5.87849, 51.01969], [5.86735, 51.05182], [5.9134, 51.06736], [5.9541, 51.03496], [5.98292, 51.07469], [6.16706, 51.15677], [6.17384, 51.19589], [6.07889, 51.17038], [6.07889, 51.24432], [6.16977, 51.33169], [6.22674, 51.36135], [6.22641, 51.39948], [6.20654, 51.40049], [6.21724, 51.48568], [6.18017, 51.54096], [6.09055, 51.60564], [6.11759, 51.65609], [6.02767, 51.6742], [6.04091, 51.71821], [5.95003, 51.7493], [5.98665, 51.76944], [5.94568, 51.82786], [5.99848, 51.83195], [6.06705, 51.86136], [6.10337, 51.84829], [6.16902, 51.84094], [6.11551, 51.89769], [6.15349, 51.90439], [6.21443, 51.86801], [6.29872, 51.86801], [6.30593, 51.84998], [6.40704, 51.82771], [6.38815, 51.87257], [6.47179, 51.85395], [6.50231, 51.86313], [6.58556, 51.89386], [6.68386, 51.91861], [6.72319, 51.89518], [6.82357, 51.96711], [6.83035, 51.9905], [6.68128, 52.05052], [6.76117, 52.11895], [6.83984, 52.11728], [6.97189, 52.20329], [6.9897, 52.2271], [7.03729, 52.22695], [7.06365, 52.23789], [7.02703, 52.27941], [7.07044, 52.37805], [7.03417, 52.40237], [6.99041, 52.47235], [6.94293, 52.43597], [6.69507, 52.488], [6.71641, 52.62905], [6.77307, 52.65375], [7.04557, 52.63318], [7.07253, 52.81083], [7.21694, 53.00742], [7.17898, 53.13817], [7.22681, 53.18165], [7.21679, 53.20058], [7.19052, 53.31866], [7.00198, 53.32672], [6.91025, 53.44221], [5.45168, 54.20039]], [[4.93295, 51.44945], [4.95244, 51.45207], [4.9524, 51.45014], [4.93909, 51.44632], [4.93295, 51.44945]], [[4.91493, 51.4353], [4.91935, 51.43634], [4.92227, 51.44252], [4.91811, 51.44621], [4.92287, 51.44741], [4.92811, 51.4437], [4.92566, 51.44273], [4.92815, 51.43856], [4.92879, 51.44161], [4.93544, 51.44634], [4.94025, 51.44193], [4.93416, 51.44185], [4.93471, 51.43861], [4.94265, 51.44003], [4.93986, 51.43064], [4.92952, 51.42984], [4.92652, 51.43329], [4.91493, 51.4353]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q782\", nameEn: \"Hawaii\", aliases: [\"US-HI\"], country: \"US\", groups: [\"Q35657\", \"061\", \"009\", \"UN\"], roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-177.8563, 29.18961], [-179.49839, 27.86265], [-151.6784, 9.55515], [-154.05867, 45.51124], [-177.5224, 27.7635], [-177.8563, 29.18961]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q797\", nameEn: \"Alaska\", aliases: [\"US-AK\"], country: \"US\", groups: [\"Q35657\", \"021\", \"003\", \"019\", \"UN\"], roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[169.34848, 52.47228], [180, 51.0171], [179.84401, 55.10087], [169.34848, 52.47228]]], [[[-168.95635, 65.98512], [-169.03888, 65.48473], [-172.76104, 63.77445], [-179.55295, 57.62081], [-179.55295, 50.81807], [-133.92876, 54.62289], [-130.61931, 54.70835], [-130.64499, 54.76912], [-130.44184, 54.85377], [-130.27203, 54.97174], [-130.18765, 55.07744], [-130.08035, 55.21556], [-129.97513, 55.28029], [-130.15373, 55.74895], [-130.00857, 55.91344], [-130.00093, 56.00325], [-130.10173, 56.12178], [-130.33965, 56.10849], [-130.77769, 56.36185], [-131.8271, 56.62247], [-133.38523, 58.42773], [-133.84645, 58.73543], [-134.27175, 58.8634], [-134.48059, 59.13231], [-134.55699, 59.1297], [-134.7047, 59.2458], [-135.00267, 59.28745], [-135.03069, 59.56208], [-135.48007, 59.79937], [-136.31566, 59.59083], [-136.22381, 59.55526], [-136.33727, 59.44466], [-136.47323, 59.46617], [-136.52365, 59.16752], [-136.82619, 59.16198], [-137.4925, 58.89415], [-137.60623, 59.24465], [-138.62145, 59.76431], [-138.71149, 59.90728], [-139.05365, 59.99655], [-139.20603, 60.08896], [-139.05831, 60.35205], [-139.68991, 60.33693], [-139.98024, 60.18027], [-140.45648, 60.30919], [-140.5227, 60.22077], [-141.00116, 60.30648], [-140.97446, 84.39275], [-168.25765, 71.99091], [-168.95635, 65.98512]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q3492\", nameEn: \"Sumatra\", aliases: [\"ID-SM\"], country: \"ID\", groups: [\"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"62\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[109.82788, 2.86812], [110.90339, 7.52694], [105.01437, 3.24936], [104.56723, 1.44271], [104.34728, 1.33529], [104.12282, 1.27714], [104.03085, 1.26954], [103.74084, 1.12902], [103.66049, 1.18825], [103.56591, 1.19719], [103.03657, 1.30383], [96.11174, 6.69841], [74.28481, -3.17525], [102.92489, -8.17146], [106.32259, -5.50116], [106.38511, -5.16715], [109.17017, -4.07401], [109.3962, -2.07276], [108.50935, -2.01066], [107.94791, 1.06924], [109.82788, 2.86812]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q3757\", nameEn: \"Java\", aliases: [\"ID-JW\"], country: \"ID\", groups: [\"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"62\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[109.17017, -4.07401], [106.38511, -5.16715], [106.32259, -5.50116], [102.92489, -8.17146], [116.22542, -10.49172], [114.39575, -8.2889], [114.42235, -8.09762], [114.92859, -7.49253], [116.33992, -7.56171], [116.58433, -5.30385], [109.17017, -4.07401]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q3795\", nameEn: \"Kalimantan\", aliases: [\"ID-KA\"], country: \"ID\", groups: [\"Q36117\", \"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"62\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[120.02464, 2.83703], [118.06469, 4.16638], [117.67641, 4.16535], [117.47313, 4.18857], [117.25801, 4.35108], [115.90217, 4.37708], [115.58276, 3.93499], [115.53713, 3.14776], [115.11343, 2.82879], [115.1721, 2.49671], [114.80706, 2.21665], [114.80706, 1.92351], [114.57892, 1.5], [114.03788, 1.44787], [113.64677, 1.23933], [113.01448, 1.42832], [113.021, 1.57819], [112.48648, 1.56516], [112.2127, 1.44135], [112.15679, 1.17004], [111.94553, 1.12016], [111.82846, 0.99349], [111.55434, 0.97864], [111.22979, 1.08326], [110.62374, 0.873], [110.49182, 0.88088], [110.35354, 0.98869], [109.66397, 1.60425], [109.66397, 1.79972], [109.57923, 1.80624], [109.53794, 1.91771], [109.62558, 1.99182], [109.82788, 2.86812], [107.94791, 1.06924], [108.50935, -2.01066], [109.3962, -2.07276], [109.17017, -4.07401], [116.58433, -5.30385], [120.02464, 2.83703]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q3803\", nameEn: \"Lesser Sunda Islands\", aliases: [\"ID-NU\"], country: \"ID\", groups: [\"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"62\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[116.96967, -8.01483], [114.92859, -7.49253], [114.42235, -8.09762], [114.39575, -8.2889], [116.22542, -10.49172], [122.14954, -11.52517], [125.68138, -9.85176], [125.09025, -9.46406], [124.97892, -9.19281], [125.04044, -9.17093], [125.09434, -9.19669], [125.18907, -9.16434], [125.18632, -9.03142], [125.11764, -8.96359], [124.97742, -9.08128], [124.94011, -8.85617], [124.46701, -9.13002], [124.45971, -9.30263], [124.38554, -9.3582], [124.35258, -9.43002], [124.3535, -9.48493], [124.28115, -9.50453], [124.28115, -9.42189], [124.21247, -9.36904], [124.14517, -9.42324], [124.10539, -9.41206], [124.04286, -9.34243], [124.04628, -9.22671], [124.33472, -9.11416], [124.92337, -8.75859], [125.87688, -7.49892], [116.96967, -8.01483]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q3812\", nameEn: \"Sulawesi\", aliases: [\"ID-SL\"], country: \"ID\", groups: [\"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"62\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[128.34321, 3.90322], [126.69413, 6.02692], [119.56457, 0.90759], [116.58433, -5.30385], [116.33992, -7.56171], [116.96967, -8.01483], [125.87688, -7.49892], [123.78965, -0.86805], [128.34321, 3.90322]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q3827\", nameEn: \"Maluku Islands\", aliases: [\"ID-ML\"], country: \"ID\", groups: [\"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"62\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[129.63187, 2.21409], [128.34321, 3.90322], [123.78965, -0.86805], [125.87688, -7.49892], [125.58506, -7.95311], [125.87691, -8.31789], [127.42116, -8.22471], [127.55165, -9.05052], [135.49042, -9.2276], [135.35517, -5.01442], [132.8312, -4.70282], [130.8468, -2.61103], [128.40647, -2.30349], [129.71519, -0.24692], [129.63187, 2.21409]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q3845\", nameEn: \"Western New Guinea\", aliases: [\"ID-PP\"], country: \"ID\", groups: [\"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"62\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[135.49042, -9.2276], [141.01842, -9.35091], [141.01763, -6.90181], [140.90448, -6.85033], [140.85295, -6.72996], [140.99813, -6.3233], [141.02352, 0.08993], [129.63187, 2.21409], [129.71519, -0.24692], [128.40647, -2.30349], [130.8468, -2.61103], [132.8312, -4.70282], [135.35517, -5.01442], [135.49042, -9.2276]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q5765\", nameEn: \"Balearic Islands\", aliases: [\"ES-IB\"], country: \"ES\", groups: [\"EU\", \"039\", \"150\", \"UN\"], callingCodes: [\"34 971\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-2.27707, 35.35051], [5.10072, 39.89531], [3.75438, 42.33445], [-2.27707, 35.35051]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q5823\", nameEn: \"Ceuta\", aliases: [\"ES-CE\"], country: \"ES\", groups: [\"EA\", \"EU\", \"015\", \"002\", \"UN\"], level: \"subterritory\", callingCodes: [\"34\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-5.38491, 35.92591], [-5.37338, 35.88417], [-5.35844, 35.87375], [-5.34379, 35.8711], [-5.21179, 35.90091], [-5.38491, 35.92591]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q5831\", nameEn: \"Melilla\", aliases: [\"ES-ML\"], country: \"ES\", groups: [\"EA\", \"EU\", \"015\", \"002\", \"UN\"], level: \"subterritory\", callingCodes: [\"34\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-2.91909, 35.33927], [-2.96038, 35.31609], [-2.96648, 35.30475], [-2.96978, 35.29459], [-2.97035, 35.28852], [-2.96507, 35.28801], [-2.96826, 35.28296], [-2.96516, 35.27967], [-2.95431, 35.2728], [-2.95065, 35.26576], [-2.93893, 35.26737], [-2.92272, 35.27509], [-2.91909, 35.33927]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q7835\", nameEn: \"Crimea\", country: \"RU\", groups: [\"151\", \"150\", \"UN\"], level: \"subterritory\", callingCodes: [\"7\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[33.5, 44], [36.4883, 45.0488], [36.475, 45.2411], [36.5049, 45.3136], [36.6545, 45.3417], [36.6645, 45.4514], [35.0498, 45.7683], [34.9601, 45.7563], [34.7991, 45.8101], [34.8015, 45.9005], [34.7548, 45.907], [34.6668, 45.9714], [34.6086, 45.9935], [34.5589, 45.9935], [34.5201, 45.951], [34.4873, 45.9427], [34.4415, 45.9599], [34.4122, 46.0025], [34.3391, 46.0611], [34.2511, 46.0532], [34.181, 46.068], [34.1293, 46.1049], [34.0731, 46.1177], [34.0527, 46.1084], [33.9155, 46.1594], [33.8523, 46.1986], [33.7972, 46.2048], [33.7405, 46.1855], [33.646, 46.2303], [33.6152, 46.2261], [33.6385, 46.1415], [33.6147, 46.1356], [33.5732, 46.1032], [33.5909, 46.0601], [33.5597, 46.0307], [31.5, 45.5], [33.5, 44]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q12837\", nameEn: \"Iberia\", level: \"sharedLandform\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q14056\", nameEn: \"Jan Mayen\", aliases: [\"NO-22\"], country: \"NO\", groups: [\"SJ\", \"154\", \"150\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-9.18243, 72.23144], [-10.71459, 70.09565], [-5.93364, 70.76368], [-9.18243, 72.23144]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q19188\", nameEn: \"Mainland China\", country: \"CN\", groups: [\"030\", \"142\", \"UN\"], callingCodes: [\"86\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[125.6131, 53.07229], [125.17522, 53.20225], [124.46078, 53.21881], [123.86158, 53.49391], [123.26989, 53.54843], [122.85966, 53.47395], [122.35063, 53.49565], [121.39213, 53.31888], [120.85633, 53.28499], [120.0451, 52.7359], [120.04049, 52.58773], [120.46454, 52.63811], [120.71673, 52.54099], [120.61346, 52.32447], [120.77337, 52.20805], [120.65907, 51.93544], [120.10963, 51.671], [119.13553, 50.37412], [119.38598, 50.35162], [119.27996, 50.13348], [119.11003, 50.00276], [118.61623, 49.93809], [117.82343, 49.52696], [117.48208, 49.62324], [117.27597, 49.62544], [116.71193, 49.83813], [116.03781, 48.87014], [116.06565, 48.81716], [115.78876, 48.51781], [115.811, 48.25699], [115.52082, 48.15367], [115.57128, 47.91988], [115.94296, 47.67741], [116.21879, 47.88505], [116.4465, 47.83662], [116.67405, 47.89039], [116.9723, 47.87285], [117.37875, 47.63627], [117.50181, 47.77216], [117.80196, 48.01661], [118.03676, 48.00982], [118.11009, 48.04], [118.22677, 48.03853], [118.29654, 48.00246], [118.55766, 47.99277], [118.7564, 47.76947], [119.12343, 47.66458], [119.13995, 47.53997], [119.35892, 47.48104], [119.31964, 47.42617], [119.54918, 47.29505], [119.56019, 47.24874], [119.62403, 47.24575], [119.71209, 47.19192], [119.85518, 46.92196], [119.91242, 46.90091], [119.89261, 46.66423], [119.80455, 46.67631], [119.77373, 46.62947], [119.68127, 46.59015], [119.65265, 46.62342], [119.42827, 46.63783], [119.32827, 46.61433], [119.24978, 46.64761], [119.10448, 46.65516], [119.00541, 46.74273], [118.92616, 46.72765], [118.89974, 46.77139], [118.8337, 46.77742], [118.78747, 46.68689], [118.30534, 46.73519], [117.69554, 46.50991], [117.60748, 46.59771], [117.41782, 46.57862], [117.36609, 46.36335], [116.83166, 46.38637], [116.75551, 46.33083], [116.58612, 46.30211], [116.26678, 45.96479], [116.24012, 45.8778], [116.27366, 45.78637], [116.16989, 45.68603], [115.60329, 45.44717], [114.94546, 45.37377], [114.74612, 45.43585], [114.54801, 45.38337], [114.5166, 45.27189], [113.70918, 44.72891], [112.74662, 44.86297], [112.4164, 45.06858], [111.98695, 45.09074], [111.76275, 44.98032], [111.40498, 44.3461], [111.96289, 43.81596], [111.93776, 43.68709], [111.79758, 43.6637], [111.59087, 43.51207], [111.0149, 43.3289], [110.4327, 42.78293], [110.08401, 42.6411], [109.89402, 42.63111], [109.452, 42.44842], [109.00679, 42.45302], [108.84489, 42.40246], [107.57258, 42.40898], [107.49681, 42.46221], [107.29755, 42.41395], [107.24774, 42.36107], [106.76517, 42.28741], [105.0123, 41.63188], [104.51667, 41.66113], [104.52258, 41.8706], [103.92804, 41.78246], [102.72403, 42.14675], [102.07645, 42.22519], [101.80515, 42.50074], [100.84979, 42.67087], [100.33297, 42.68231], [99.50671, 42.56535], [97.1777, 42.7964], [96.37926, 42.72055], [96.35658, 42.90363], [95.89543, 43.2528], [95.52594, 43.99353], [95.32891, 44.02407], [95.39772, 44.2805], [95.01191, 44.25274], [94.71959, 44.35284], [94.10003, 44.71016], [93.51161, 44.95964], [91.64048, 45.07408], [90.89169, 45.19667], [90.65114, 45.49314], [90.70907, 45.73437], [91.03026, 46.04194], [90.99672, 46.14207], [90.89639, 46.30711], [91.07696, 46.57315], [91.0147, 46.58171], [91.03649, 46.72916], [90.84035, 46.99525], [90.76108, 46.99399], [90.48542, 47.30438], [90.48854, 47.41826], [90.33598, 47.68303], [90.10871, 47.7375], [90.06512, 47.88177], [89.76624, 47.82745], [89.55453, 48.0423], [89.0711, 47.98528], [88.93186, 48.10263], [88.8011, 48.11302], [88.58316, 48.21893], [88.58939, 48.34531], [87.96361, 48.58478], [88.0788, 48.71436], [87.73822, 48.89582], [87.88171, 48.95853], [87.81333, 49.17354], [87.48983, 49.13794], [87.478, 49.07403], [87.28386, 49.11626], [86.87238, 49.12432], [86.73568, 48.99918], [86.75343, 48.70331], [86.38069, 48.46064], [85.73581, 48.3939], [85.5169, 48.05493], [85.61067, 47.49753], [85.69696, 47.2898], [85.54294, 47.06171], [85.22443, 47.04816], [84.93995, 46.87399], [84.73077, 47.01394], [83.92184, 46.98912], [83.04622, 47.19053], [82.21792, 45.56619], [82.58474, 45.40027], [82.51374, 45.1755], [81.73278, 45.3504], [80.11169, 45.03352], [79.8987, 44.89957], [80.38384, 44.63073], [80.40229, 44.23319], [80.40031, 44.10986], [80.75156, 43.44948], [80.69718, 43.32589], [80.77771, 43.30065], [80.78817, 43.14235], [80.62913, 43.141], [80.3735, 43.01557], [80.58999, 42.9011], [80.38169, 42.83142], [80.26886, 42.8366], [80.16892, 42.61137], [80.26841, 42.23797], [80.17807, 42.21166], [80.17842, 42.03211], [79.92977, 42.04113], [78.3732, 41.39603], [78.15757, 41.38565], [78.12873, 41.23091], [77.81287, 41.14307], [77.76206, 41.01574], [77.52723, 41.00227], [77.3693, 41.0375], [77.28004, 41.0033], [76.99302, 41.0696], [76.75681, 40.95354], [76.5261, 40.46114], [76.33659, 40.3482], [75.96168, 40.38064], [75.91361, 40.2948], [75.69663, 40.28642], [75.5854, 40.66874], [75.22834, 40.45382], [75.08243, 40.43945], [74.82013, 40.52197], [74.78168, 40.44886], [74.85996, 40.32857], [74.69875, 40.34668], [74.35063, 40.09742], [74.25533, 40.13191], [73.97049, 40.04378], [73.83006, 39.76136], [73.9051, 39.75073], [73.92354, 39.69565], [73.94683, 39.60733], [73.87018, 39.47879], [73.59831, 39.46425], [73.59241, 39.40843], [73.5004, 39.38402], [73.55396, 39.3543], [73.54572, 39.27567], [73.60638, 39.24534], [73.75823, 39.023], [73.81728, 39.04007], [73.82964, 38.91517], [73.7445, 38.93867], [73.7033, 38.84782], [73.80656, 38.66449], [73.79806, 38.61106], [73.97933, 38.52945], [74.17022, 38.65504], [74.51217, 38.47034], [74.69619, 38.42947], [74.69894, 38.22155], [74.80331, 38.19889], [74.82665, 38.07359], [74.9063, 38.03033], [74.92416, 37.83428], [75.00935, 37.77486], [74.8912, 37.67576], [74.94338, 37.55501], [75.06011, 37.52779], [75.15899, 37.41443], [75.09719, 37.37297], [75.12328, 37.31839], [74.88887, 37.23275], [74.80605, 37.21565], [74.49981, 37.24518], [74.56453, 37.03023], [75.13839, 37.02622], [75.40481, 36.95382], [75.45562, 36.71971], [75.72737, 36.7529], [75.92391, 36.56986], [76.0324, 36.41198], [76.00906, 36.17511], [75.93028, 36.13136], [76.15325, 35.9264], [76.14913, 35.82848], [76.33453, 35.84296], [76.50961, 35.8908], [76.77323, 35.66062], [76.84539, 35.67356], [76.96624, 35.5932], [77.44277, 35.46132], [77.70232, 35.46244], [77.80532, 35.52058], [78.11664, 35.48022], [78.03466, 35.3785], [78.00033, 35.23954], [78.22692, 34.88771], [78.18435, 34.7998], [78.27781, 34.61484], [78.54964, 34.57283], [78.56475, 34.50835], [78.74465, 34.45174], [79.05364, 34.32482], [78.99802, 34.3027], [78.91769, 34.15452], [78.66225, 34.08858], [78.65657, 34.03195], [78.73367, 34.01121], [78.77349, 33.73871], [78.67599, 33.66445], [78.73636, 33.56521], [79.15252, 33.17156], [79.14016, 33.02545], [79.46562, 32.69668], [79.26768, 32.53277], [79.13174, 32.47766], [79.0979, 32.38051], [78.99322, 32.37948], [78.96713, 32.33655], [78.7831, 32.46873], [78.73916, 32.69438], [78.38897, 32.53938], [78.4645, 32.45367], [78.49609, 32.2762], [78.68754, 32.10256], [78.74404, 32.00384], [78.78036, 31.99478], [78.69933, 31.78723], [78.84516, 31.60631], [78.71032, 31.50197], [78.77898, 31.31209], [78.89344, 31.30481], [79.01931, 31.42817], [79.14016, 31.43403], [79.30694, 31.17357], [79.59884, 30.93943], [79.93255, 30.88288], [80.20721, 30.58541], [80.54504, 30.44936], [80.83343, 30.32023], [81.03953, 30.20059], [81.12842, 30.01395], [81.24362, 30.0126], [81.29032, 30.08806], [81.2623, 30.14596], [81.33355, 30.15303], [81.39928, 30.21862], [81.41018, 30.42153], [81.5459, 30.37688], [81.62033, 30.44703], [81.99082, 30.33423], [82.10135, 30.35439], [82.10757, 30.23745], [82.19475, 30.16884], [82.16984, 30.0692], [82.38622, 30.02608], [82.5341, 29.9735], [82.73024, 29.81695], [83.07116, 29.61957], [83.28131, 29.56813], [83.44787, 29.30513], [83.63156, 29.16249], [83.82303, 29.30513], [83.97559, 29.33091], [84.18107, 29.23451], [84.24801, 29.02783], [84.2231, 28.89571], [84.47528, 28.74023], [84.62317, 28.73887], [84.85511, 28.58041], [85.06059, 28.68562], [85.19135, 28.62825], [85.18668, 28.54076], [85.10729, 28.34092], [85.38127, 28.28336], [85.4233, 28.32996], [85.59765, 28.30529], [85.60854, 28.25045], [85.69105, 28.38475], [85.71907, 28.38064], [85.74864, 28.23126], [85.84672, 28.18187], [85.90743, 28.05144], [85.97813, 27.99023], [85.94946, 27.9401], [86.06309, 27.90021], [86.12069, 27.93047], [86.08333, 28.02121], [86.088, 28.09264], [86.18607, 28.17364], [86.22966, 27.9786], [86.42736, 27.91122], [86.51609, 27.96623], [86.56265, 28.09569], [86.74181, 28.10638], [86.75582, 28.04182], [87.03757, 27.94835], [87.11696, 27.84104], [87.56996, 27.84517], [87.72718, 27.80938], [87.82681, 27.95248], [88.13378, 27.88015], [88.1278, 27.95417], [88.25332, 27.9478], [88.54858, 28.06057], [88.63235, 28.12356], [88.83559, 28.01936], [88.88091, 27.85192], [88.77517, 27.45415], [88.82981, 27.38814], [88.91901, 27.32483], [88.93678, 27.33777], [88.96947, 27.30319], [89.00216, 27.32532], [88.95355, 27.4106], [88.97213, 27.51671], [89.0582, 27.60985], [89.12825, 27.62502], [89.59525, 28.16433], [89.79762, 28.23979], [90.13387, 28.19178], [90.58842, 28.02838], [90.69894, 28.07784], [91.20019, 27.98715], [91.25779, 28.07509], [91.46327, 28.0064], [91.48973, 27.93903], [91.5629, 27.84823], [91.6469, 27.76358], [91.84722, 27.76325], [91.87057, 27.7195], [92.27432, 27.89077], [92.32101, 27.79363], [92.42538, 27.80092], [92.7275, 27.98662], [92.73025, 28.05814], [92.65472, 28.07632], [92.67486, 28.15018], [92.93075, 28.25671], [93.14635, 28.37035], [93.18069, 28.50319], [93.44621, 28.67189], [93.72797, 28.68821], [94.35897, 29.01965], [94.2752, 29.11687], [94.69318, 29.31739], [94.81353, 29.17804], [95.0978, 29.14446], [95.11291, 29.09527], [95.2214, 29.10727], [95.26122, 29.07727], [95.3038, 29.13847], [95.41091, 29.13007], [95.50842, 29.13487], [95.72086, 29.20797], [95.75149, 29.32063], [95.84899, 29.31464], [96.05361, 29.38167], [96.31316, 29.18643], [96.18682, 29.11087], [96.20467, 29.02325], [96.3626, 29.10607], [96.61391, 28.72742], [96.40929, 28.51526], [96.48895, 28.42955], [96.6455, 28.61657], [96.85561, 28.4875], [96.88445, 28.39452], [96.98882, 28.32564], [97.1289, 28.3619], [97.34547, 28.21385], [97.41729, 28.29783], [97.47085, 28.2688], [97.50518, 28.49716], [97.56835, 28.55628], [97.70705, 28.5056], [97.79632, 28.33168], [97.90069, 28.3776], [98.15337, 28.12114], [98.13964, 27.9478], [98.32641, 27.51385], [98.42529, 27.55404], [98.43353, 27.67086], [98.69582, 27.56499], [98.7333, 26.85615], [98.77547, 26.61994], [98.72741, 26.36183], [98.67797, 26.24487], [98.7329, 26.17218], [98.66884, 26.09165], [98.63128, 26.15492], [98.57085, 26.11547], [98.60763, 26.01512], [98.70818, 25.86241], [98.63128, 25.79937], [98.54064, 25.85129], [98.40606, 25.61129], [98.31268, 25.55307], [98.25774, 25.6051], [98.16848, 25.62739], [98.18084, 25.56298], [98.12591, 25.50722], [98.14925, 25.41547], [97.92541, 25.20815], [97.83614, 25.2715], [97.77023, 25.11492], [97.72216, 25.08508], [97.72903, 24.91332], [97.79949, 24.85655], [97.76481, 24.8289], [97.73127, 24.83015], [97.70181, 24.84557], [97.64354, 24.79171], [97.56648, 24.76475], [97.56383, 24.75535], [97.5542, 24.74943], [97.54675, 24.74202], [97.56525, 24.72838], [97.56286, 24.54535], [97.52757, 24.43748], [97.60029, 24.4401], [97.66998, 24.45288], [97.7098, 24.35658], [97.65624, 24.33781], [97.66723, 24.30027], [97.71941, 24.29652], [97.76799, 24.26365], [97.72998, 24.2302], [97.72799, 24.18883], [97.75305, 24.16902], [97.72903, 24.12606], [97.62363, 24.00506], [97.5247, 23.94032], [97.64667, 23.84574], [97.72302, 23.89288], [97.79456, 23.94836], [97.79416, 23.95663], [97.84328, 23.97603], [97.86545, 23.97723], [97.88811, 23.97446], [97.8955, 23.97758], [97.89676, 23.97931], [97.89683, 23.98389], [97.88814, 23.98605], [97.88414, 23.99405], [97.88616, 24.00463], [97.90998, 24.02094], [97.93951, 24.01953], [97.98691, 24.03897], [97.99583, 24.04932], [98.04709, 24.07616], [98.05302, 24.07408], [98.05671, 24.07961], [98.0607, 24.07812], [98.06703, 24.08028], [98.07806, 24.07988], [98.20666, 24.11406], [98.54476, 24.13119], [98.59256, 24.08371], [98.85319, 24.13042], [98.87998, 24.15624], [98.89632, 24.10612], [98.67797, 23.9644], [98.68209, 23.80492], [98.79607, 23.77947], [98.82933, 23.72921], [98.81775, 23.694], [98.88396, 23.59555], [98.80294, 23.5345], [98.82877, 23.47908], [98.87683, 23.48995], [98.92104, 23.36946], [98.87573, 23.33038], [98.93958, 23.31414], [98.92515, 23.29535], [98.88597, 23.18656], [99.05975, 23.16382], [99.04601, 23.12215], [99.25741, 23.09025], [99.34127, 23.13099], [99.52214, 23.08218], [99.54218, 22.90014], [99.43537, 22.94086], [99.45654, 22.85726], [99.31243, 22.73893], [99.38247, 22.57544], [99.37972, 22.50188], [99.28771, 22.4105], [99.17318, 22.18025], [99.19176, 22.16983], [99.1552, 22.15874], [99.33166, 22.09656], [99.47585, 22.13345], [99.85351, 22.04183], [99.96612, 22.05965], [99.99084, 21.97053], [99.94003, 21.82782], [99.98654, 21.71064], [100.04956, 21.66843], [100.12679, 21.70539], [100.17486, 21.65306], [100.10757, 21.59945], [100.12542, 21.50365], [100.1625, 21.48704], [100.18447, 21.51898], [100.25863, 21.47043], [100.35201, 21.53176], [100.42892, 21.54325], [100.4811, 21.46148], [100.57861, 21.45637], [100.72143, 21.51898], [100.87265, 21.67396], [101.11744, 21.77659], [101.15156, 21.56129], [101.2124, 21.56422], [101.19349, 21.41959], [101.26912, 21.36482], [101.2229, 21.23271], [101.29326, 21.17254], [101.54563, 21.25668], [101.6068, 21.23329], [101.59491, 21.18621], [101.60886, 21.17947], [101.66977, 21.20004], [101.70548, 21.14911], [101.7622, 21.14813], [101.79266, 21.19025], [101.76745, 21.21571], [101.83887, 21.20983], [101.84412, 21.25291], [101.74014, 21.30967], [101.74224, 21.48276], [101.7727, 21.51794], [101.7475, 21.5873], [101.80001, 21.57461], [101.83257, 21.61562], [101.74555, 21.72852], [101.7791, 21.83019], [101.62566, 21.96574], [101.57525, 22.13026], [101.60675, 22.13513], [101.53638, 22.24794], [101.56789, 22.28876], [101.61306, 22.27515], [101.68973, 22.46843], [101.7685, 22.50337], [101.86828, 22.38397], [101.90714, 22.38688], [101.91344, 22.44417], [101.98487, 22.42766], [102.03633, 22.46164], [102.1245, 22.43372], [102.14099, 22.40092], [102.16621, 22.43336], [102.26428, 22.41321], [102.25339, 22.4607], [102.41061, 22.64184], [102.38415, 22.67919], [102.42618, 22.69212], [102.46665, 22.77108], [102.51802, 22.77969], [102.57095, 22.7036], [102.60675, 22.73376], [102.8636, 22.60735], [102.9321, 22.48659], [103.0722, 22.44775], [103.07843, 22.50097], [103.17961, 22.55705], [103.15782, 22.59873], [103.18895, 22.64471], [103.28079, 22.68063], [103.32282, 22.8127], [103.43179, 22.75816], [103.43646, 22.70648], [103.52675, 22.59155], [103.57812, 22.65764], [103.56255, 22.69499], [103.64506, 22.79979], [103.87904, 22.56683], [103.93286, 22.52703], [103.94513, 22.52553], [103.95191, 22.5134], [103.96352, 22.50584], [103.96783, 22.51173], [103.97384, 22.50634], [103.99247, 22.51958], [104.01088, 22.51823], [104.03734, 22.72945], [104.11384, 22.80363], [104.27084, 22.8457], [104.25683, 22.76534], [104.35593, 22.69353], [104.47225, 22.75813], [104.58122, 22.85571], [104.60457, 22.81841], [104.65283, 22.83419], [104.72755, 22.81984], [104.77114, 22.90017], [104.84942, 22.93631], [104.86765, 22.95178], [104.8334, 23.01484], [104.79478, 23.12934], [104.87382, 23.12854], [104.87992, 23.17141], [104.91435, 23.18666], [104.9486, 23.17235], [104.96532, 23.20463], [104.98712, 23.19176], [105.07002, 23.26248], [105.11672, 23.25247], [105.17276, 23.28679], [105.22569, 23.27249], [105.32376, 23.39684], [105.40782, 23.28107], [105.42805, 23.30824], [105.49966, 23.20669], [105.56037, 23.16806], [105.57594, 23.075], [105.72382, 23.06641], [105.8726, 22.92756], [105.90119, 22.94168], [105.99568, 22.94178], [106.00179, 22.99049], [106.19705, 22.98475], [106.27022, 22.87722], [106.34961, 22.86718], [106.49749, 22.91164], [106.51306, 22.94891], [106.55976, 22.92311], [106.60179, 22.92884], [106.6516, 22.86862], [106.6734, 22.89587], [106.71387, 22.88296], [106.71128, 22.85982], [106.78422, 22.81532], [106.81271, 22.8226], [106.83685, 22.8098], [106.82404, 22.7881], [106.76293, 22.73491], [106.72321, 22.63606], [106.71698, 22.58432], [106.65316, 22.5757], [106.61269, 22.60301], [106.58395, 22.474], [106.55665, 22.46498], [106.57221, 22.37], [106.55976, 22.34841], [106.6516, 22.33977], [106.69986, 22.22309], [106.67495, 22.1885], [106.6983, 22.15102], [106.70142, 22.02409], [106.68274, 21.99811], [106.69276, 21.96013], [106.72551, 21.97923], [106.74345, 22.00965], [106.81038, 21.97934], [106.9178, 21.97357], [106.92714, 21.93459], [106.97228, 21.92592], [106.99252, 21.95191], [107.05634, 21.92303], [107.06101, 21.88982], [107.00964, 21.85948], [107.02615, 21.81981], [107.10771, 21.79879], [107.20734, 21.71493], [107.24625, 21.7077], [107.29296, 21.74674], [107.35834, 21.6672], [107.35989, 21.60063], [107.38636, 21.59774], [107.41593, 21.64839], [107.47197, 21.6672], [107.49532, 21.62958], [107.49065, 21.59774], [107.54047, 21.5934], [107.56537, 21.61945], [107.66967, 21.60787], [107.80355, 21.66141], [107.86114, 21.65128], [107.90006, 21.5905], [107.92652, 21.58906], [107.95232, 21.5388], [107.96774, 21.53601], [107.97074, 21.54072], [107.97383, 21.53961], [107.97932, 21.54503], [108.02926, 21.54997], [108.0569, 21.53604], [108.10003, 21.47338], [108.00365, 17.98159], [111.60491, 13.57105], [118.41371, 24.06775], [118.11703, 24.39734], [118.28244, 24.51231], [118.35291, 24.51645], [118.42453, 24.54644], [118.6333, 24.46259], [119.42295, 25.0886], [119.98511, 25.37624], [119.78816, 26.2348], [120.0693, 26.3959], [120.5128, 26.536], [121.03532, 26.8787], [123.5458, 31.01942], [122.29378, 31.76513], [122.80525, 33.30571], [123.85601, 37.49093], [123.90497, 38.79949], [124.17532, 39.8232], [124.23201, 39.9248], [124.35029, 39.95639], [124.37089, 40.03004], [124.3322, 40.05573], [124.38556, 40.11047], [124.40719, 40.13655], [124.86913, 40.45387], [125.71172, 40.85223], [125.76869, 40.87908], [126.00335, 40.92835], [126.242, 41.15454], [126.53189, 41.35206], [126.60631, 41.65565], [126.90729, 41.79955], [127.17841, 41.59714], [127.29712, 41.49473], [127.92943, 41.44291], [128.02633, 41.42103], [128.03311, 41.39232], [128.12967, 41.37931], [128.18546, 41.41279], [128.20061, 41.40895], [128.30716, 41.60322], [128.15119, 41.74568], [128.04487, 42.01769], [128.94007, 42.03537], [128.96068, 42.06657], [129.15178, 42.17224], [129.22285, 42.26491], [129.22423, 42.3553], [129.28541, 42.41574], [129.42882, 42.44702], [129.54701, 42.37254], [129.60482, 42.44461], [129.72541, 42.43739], [129.75294, 42.59409], [129.77183, 42.69435], [129.7835, 42.76521], [129.80719, 42.79218], [129.83277, 42.86746], [129.85261, 42.96494], [129.8865, 43.00395], [129.95082, 43.01051], [129.96409, 42.97306], [130.12957, 42.98361], [130.09764, 42.91425], [130.26095, 42.9027], [130.23068, 42.80125], [130.2385, 42.71127], [130.41826, 42.6011], [130.44361, 42.54849], [130.50123, 42.61636], [130.55143, 42.52158], [130.62107, 42.58413], [130.56576, 42.68925], [130.40213, 42.70788], [130.44361, 42.76205], [130.66524, 42.84753], [131.02438, 42.86518], [131.02668, 42.91246], [131.135, 42.94114], [131.10274, 43.04734], [131.20414, 43.13654], [131.19031, 43.21385], [131.30324, 43.39498], [131.29402, 43.46695], [131.19492, 43.53047], [131.21105, 43.82383], [131.26176, 43.94011], [131.23583, 43.96085], [131.25484, 44.03131], [131.30365, 44.04262], [131.1108, 44.70266], [130.95639, 44.85154], [131.48415, 44.99513], [131.68466, 45.12374], [131.66852, 45.2196], [131.76532, 45.22609], [131.86903, 45.33636], [131.99417, 45.2567], [132.83978, 45.05916], [132.96373, 45.0212], [133.12293, 45.1332], [133.09279, 45.25693], [133.19419, 45.51913], [133.41083, 45.57723], [133.48457, 45.86203], [133.60442, 45.90053], [133.67569, 45.9759], [133.72695, 46.05576], [133.68047, 46.14697], [133.88097, 46.25066], [133.91496, 46.4274], [133.84104, 46.46681], [134.03538, 46.75668], [134.20016, 47.33458], [134.50898, 47.4812], [134.7671, 47.72051], [134.55508, 47.98651], [134.67098, 48.1564], [134.75328, 48.36763], [134.49516, 48.42884], [132.66989, 47.96491], [132.57309, 47.71741], [131.90448, 47.68011], [131.2635, 47.73325], [131.09871, 47.6852], [130.95985, 47.6957], [130.90915, 47.90623], [130.65103, 48.10052], [130.84462, 48.30942], [130.52147, 48.61745], [130.66946, 48.88251], [130.43232, 48.90844], [130.2355, 48.86741], [129.85416, 49.11067], [129.67598, 49.29596], [129.50685, 49.42398], [129.40398, 49.44194], [129.35317, 49.3481], [129.23232, 49.40353], [129.11153, 49.36813], [128.72896, 49.58676], [127.83476, 49.5748], [127.53516, 49.84306], [127.49299, 50.01251], [127.60515, 50.23503], [127.37384, 50.28393], [127.36009, 50.43787], [127.28765, 50.46585], [127.36335, 50.58306], [127.28165, 50.72075], [127.14586, 50.91152], [126.93135, 51.0841], [126.90369, 51.3238], [126.68349, 51.70607], [126.44606, 51.98254], [126.558, 52.13738], [125.6131, 53.07229]], [[113.56865, 22.20973], [113.57123, 22.20416], [113.60504, 22.20464], [113.63011, 22.10782], [113.57191, 22.07696], [113.54839, 22.10909], [113.54942, 22.14519], [113.54093, 22.15497], [113.52659, 22.18271], [113.53552, 22.20607], [113.53301, 22.21235], [113.53591, 22.21369], [113.54093, 22.21314], [113.54333, 22.21688], [113.5508, 22.21672], [113.56865, 22.20973]], [[114.50148, 22.15017], [113.92195, 22.13873], [113.83338, 22.1826], [113.81621, 22.2163], [113.86771, 22.42972], [114.03113, 22.5065], [114.05438, 22.5026], [114.05729, 22.51104], [114.06272, 22.51617], [114.07267, 22.51855], [114.07817, 22.52997], [114.08606, 22.53276], [114.09048, 22.53716], [114.09692, 22.53435], [114.1034, 22.5352], [114.11181, 22.52878], [114.11656, 22.53415], [114.12665, 22.54003], [114.13823, 22.54319], [114.1482, 22.54091], [114.15123, 22.55163], [114.1597, 22.56041], [114.17247, 22.55944], [114.18338, 22.55444], [114.20655, 22.55706], [114.22185, 22.55343], [114.22888, 22.5436], [114.25154, 22.55977], [114.44998, 22.55977], [114.50148, 22.15017]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q22890\", nameEn: \"Ireland\", level: \"sharedLandform\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q23666\", nameEn: \"Great Britain\", country: \"GB\", level: \"sharedLandform\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q23681\", nameEn: \"Northern Cyprus\", groups: [\"Q644636\", \"145\", \"142\"], driveSide: \"left\", callingCodes: [\"90 392\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[33.67678, 35.03866], [33.67742, 35.05963], [33.68474, 35.06602], [33.69095, 35.06237], [33.70861, 35.07644], [33.7161, 35.07279], [33.70209, 35.04882], [33.71482, 35.03722], [33.73824, 35.05321], [33.76106, 35.04253], [33.78581, 35.05104], [33.82067, 35.07826], [33.84168, 35.06823], [33.8541, 35.07201], [33.87479, 35.08881], [33.87097, 35.09389], [33.87622, 35.10457], [33.87224, 35.12293], [33.88561, 35.12449], [33.88943, 35.12007], [33.88737, 35.11408], [33.89853, 35.11377], [33.91789, 35.08688], [33.91299, 35.07579], [33.90247, 35.07686], [33.89485, 35.06873], [33.88367, 35.07877], [33.85261, 35.0574], [33.8355, 35.05777], [33.82051, 35.0667], [33.8012, 35.04786], [33.81524, 35.04192], [33.83055, 35.02865], [33.82875, 35.01685], [33.84045, 35.00616], [33.85216, 35.00579], [33.85891, 35.001], [33.85621, 34.98956], [33.83505, 34.98108], [33.84811, 34.97075], [33.86432, 34.97592], [33.90075, 34.96623], [33.98684, 34.76642], [35.48515, 34.70851], [35.51152, 36.10954], [32.82353, 35.70297], [32.46489, 35.48584], [32.60361, 35.16647], [32.64864, 35.19967], [32.70947, 35.18328], [32.70779, 35.14127], [32.85733, 35.07742], [32.86406, 35.1043], [32.94471, 35.09422], [33.01192, 35.15639], [33.08249, 35.17319], [33.11105, 35.15639], [33.15138, 35.19504], [33.27068, 35.16815], [33.3072, 35.16816], [33.31955, 35.18096], [33.35056, 35.18328], [33.34964, 35.17803], [33.35596, 35.17942], [33.35612, 35.17402], [33.36569, 35.17479], [33.3717, 35.1788], [33.37248, 35.18698], [33.38575, 35.2018], [33.4076, 35.20062], [33.41675, 35.16325], [33.46813, 35.10564], [33.48136, 35.0636], [33.47825, 35.04103], [33.45178, 35.02078], [33.45256, 35.00288], [33.47666, 35.00701], [33.48915, 35.06594], [33.53975, 35.08151], [33.57478, 35.06049], [33.567, 35.04803], [33.59658, 35.03635], [33.61215, 35.0527], [33.63765, 35.03869], [33.67678, 35.03866]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q25231\", nameEn: \"Svalbard\", aliases: [\"NO-21\"], country: \"NO\", groups: [\"SJ\", \"154\", \"150\", \"UN\"], level: \"subterritory\", callingCodes: [\"47 79\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-7.49892, 77.24208], [32.07813, 72.01005], [36.85549, 84.09565], [-7.49892, 77.24208]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q25263\", nameEn: \"Azores\", aliases: [\"PT-20\"], country: \"PT\", groups: [\"Q3320166\", \"Q2914565\", \"Q105472\", \"EU\", \"039\", \"150\", \"UN\"], callingCodes: [\"351\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-23.12984, 40.26428], [-36.43765, 41.39418], [-22.54767, 33.34416], [-23.12984, 40.26428]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q25359\", nameEn: \"Navassa Island\", aliases: [\"UM-76\"], country: \"US\", groups: [\"UM\", \"Q1352230\", \"029\", \"003\", \"419\", \"019\", \"UN\"], level: \"subterritory\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-74.7289, 18.71009], [-75.71816, 18.46438], [-74.76465, 18.06252], [-74.7289, 18.71009]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q25396\", nameEn: \"Bonaire\", aliases: [\"BQ-BO\", \"NL-BQ1\"], country: \"NL\", groups: [\"Q1451600\", \"BQ\", \"029\", \"003\", \"419\", \"019\", \"UN\"], level: \"subterritory\", callingCodes: [\"599 7\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-67.89186, 12.4116], [-68.90012, 12.62309], [-68.33524, 11.78151], [-68.01417, 11.77722], [-67.89186, 12.4116]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q25528\", nameEn: \"Saba\", aliases: [\"BQ-SA\", \"NL-BQ2\"], country: \"NL\", groups: [\"Q1451600\", \"BQ\", \"029\", \"003\", \"419\", \"019\", \"UN\"], level: \"subterritory\", callingCodes: [\"599 4\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-63.07669, 17.79659], [-63.81314, 17.95045], [-63.22932, 17.32592], [-63.07669, 17.79659]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q26180\", nameEn: \"Sint Eustatius\", aliases: [\"BQ-SE\", \"NL-BQ3\"], country: \"NL\", groups: [\"Q1451600\", \"BQ\", \"029\", \"003\", \"419\", \"019\", \"UN\"], level: \"subterritory\", callingCodes: [\"599 3\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-63.07669, 17.79659], [-63.34999, 16.94218], [-62.76692, 17.64353], [-63.07669, 17.79659]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q26253\", nameEn: \"Madeira\", aliases: [\"PT-30\"], country: \"PT\", groups: [\"Q3320166\", \"Q2914565\", \"Q105472\", \"EU\", \"039\", \"150\", \"UN\"], callingCodes: [\"351\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-19.30302, 33.65304], [-16.04789, 29.65076], [-11.68307, 33.12333], [-19.30302, 33.65304]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q26927\", nameEn: \"Lakshadweep\", aliases: [\"IN-LD\"], country: \"IN\", groups: [\"034\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"91\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[67.64074, 11.57295], [76.59015, 5.591], [72.67494, 13.58102], [67.64074, 11.57295]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q27329\", nameEn: \"Asian Russia\", country: \"RU\", groups: [\"142\", \"UN\"], callingCodes: [\"7\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-179.99933, 64.74703], [-172.76104, 63.77445], [-169.03888, 65.48473], [-168.95635, 65.98512], [-168.25765, 71.99091], [-179.9843, 71.90735], [-179.99933, 64.74703]]], [[[59.99809, 51.98263], [60.19925, 51.99173], [60.48915, 52.15175], [60.72581, 52.15538], [60.78201, 52.22067], [61.05417, 52.35096], [60.98021, 52.50068], [60.84709, 52.52228], [60.84118, 52.63912], [60.71693, 52.66245], [60.71989, 52.75923], [61.05842, 52.92217], [61.23462, 53.03227], [62.0422, 52.96105], [62.12799, 52.99133], [62.14574, 53.09626], [61.19024, 53.30536], [61.14291, 53.41481], [61.29082, 53.50992], [61.37957, 53.45887], [61.57185, 53.50112], [61.55706, 53.57144], [60.90626, 53.62937], [61.22574, 53.80268], [61.14283, 53.90063], [60.99796, 53.93699], [61.26863, 53.92797], [61.3706, 54.08464], [61.47603, 54.08048], [61.56941, 53.95703], [61.65318, 54.02445], [62.03913, 53.94768], [62.00966, 54.04134], [62.38535, 54.03961], [62.45931, 53.90737], [62.56876, 53.94047], [62.58651, 54.05871], [63.80604, 54.27079], [63.91224, 54.20013], [64.02715, 54.22679], [63.97686, 54.29763], [64.97216, 54.4212], [65.11033, 54.33028], [65.24663, 54.35721], [65.20174, 54.55216], [68.21308, 54.98645], [68.26661, 55.09226], [68.19206, 55.18823], [68.90865, 55.38148], [69.34224, 55.36344], [69.74917, 55.35545], [70.19179, 55.1476], [70.76493, 55.3027], [70.96009, 55.10558], [71.08288, 54.71253], [71.24185, 54.64965], [71.08706, 54.33376], [71.10379, 54.13326], [71.96141, 54.17736], [72.17477, 54.36303], [72.43415, 53.92685], [72.71026, 54.1161], [73.37963, 53.96132], [73.74778, 54.07194], [73.68921, 53.86522], [73.25412, 53.61532], [73.39218, 53.44623], [75.07405, 53.80831], [75.43398, 53.98652], [75.3668, 54.07439], [76.91052, 54.4677], [76.82266, 54.1798], [76.44076, 54.16017], [76.54243, 53.99329], [77.90383, 53.29807], [79.11255, 52.01171], [80.08138, 50.77658], [80.4127, 50.95581], [80.44819, 51.20855], [80.80318, 51.28262], [81.16999, 51.15662], [81.06091, 50.94833], [81.41248, 50.97524], [81.46581, 50.77658], [81.94999, 50.79307], [82.55443, 50.75412], [83.14607, 51.00796], [83.8442, 50.87375], [84.29385, 50.27257], [84.99198, 50.06793], [85.24047, 49.60239], [86.18709, 49.50259], [86.63674, 49.80136], [86.79056, 49.74787], [86.61307, 49.60239], [86.82606, 49.51796], [87.03071, 49.25142], [87.31465, 49.23603], [87.28386, 49.11626], [87.478, 49.07403], [87.48983, 49.13794], [87.81333, 49.17354], [87.98977, 49.18147], [88.15543, 49.30314], [88.17223, 49.46934], [88.42449, 49.48821], [88.82499, 49.44808], [89.70687, 49.72535], [89.59711, 49.90851], [91.86048, 50.73734], [92.07173, 50.69585], [92.44714, 50.78762], [93.01109, 50.79001], [92.99595, 50.63183], [94.30823, 50.57498], [94.39258, 50.22193], [94.49477, 50.17832], [94.6121, 50.04239], [94.97166, 50.04725], [95.02465, 49.96941], [95.74757, 49.97915], [95.80056, 50.04239], [96.97388, 49.88413], [97.24639, 49.74737], [97.56811, 49.84265], [97.56432, 49.92801], [97.76871, 49.99861], [97.85197, 49.91339], [98.29481, 50.33561], [98.31373, 50.4996], [98.06393, 50.61262], [97.9693, 50.78044], [98.01472, 50.86652], [97.83305, 51.00248], [98.05257, 51.46696], [98.22053, 51.46579], [98.33222, 51.71832], [98.74142, 51.8637], [98.87768, 52.14563], [99.27888, 51.96876], [99.75578, 51.90108], [99.89203, 51.74903], [100.61116, 51.73028], [101.39085, 51.45753], [101.5044, 51.50467], [102.14032, 51.35566], [102.32194, 50.67982], [102.71178, 50.38873], [103.70343, 50.13952], [105.32528, 50.4648], [106.05562, 50.40582], [106.07865, 50.33474], [106.47156, 50.31909], [106.49628, 50.32436], [106.51122, 50.34408], [106.58373, 50.34044], [106.80326, 50.30177], [107.00007, 50.1977], [107.1174, 50.04239], [107.36407, 49.97612], [107.96116, 49.93191], [107.95387, 49.66659], [108.27937, 49.53167], [108.53969, 49.32325], [109.18017, 49.34709], [109.51325, 49.22859], [110.24373, 49.16676], [110.39891, 49.25083], [110.64493, 49.1816], [113.02647, 49.60772], [113.20216, 49.83356], [114.325, 50.28098], [114.9703, 50.19254], [115.26068, 49.97367], [115.73602, 49.87688], [116.22402, 50.04477], [116.62502, 49.92919], [116.71193, 49.83813], [117.27597, 49.62544], [117.48208, 49.62324], [117.82343, 49.52696], [118.61623, 49.93809], [119.11003, 50.00276], [119.27996, 50.13348], [119.38598, 50.35162], [119.13553, 50.37412], [120.10963, 51.671], [120.65907, 51.93544], [120.77337, 52.20805], [120.61346, 52.32447], [120.71673, 52.54099], [120.46454, 52.63811], [120.04049, 52.58773], [120.0451, 52.7359], [120.85633, 53.28499], [121.39213, 53.31888], [122.35063, 53.49565], [122.85966, 53.47395], [123.26989, 53.54843], [123.86158, 53.49391], [124.46078, 53.21881], [125.17522, 53.20225], [125.6131, 53.07229], [126.558, 52.13738], [126.44606, 51.98254], [126.68349, 51.70607], [126.90369, 51.3238], [126.93135, 51.0841], [127.14586, 50.91152], [127.28165, 50.72075], [127.36335, 50.58306], [127.28765, 50.46585], [127.36009, 50.43787], [127.37384, 50.28393], [127.60515, 50.23503], [127.49299, 50.01251], [127.53516, 49.84306], [127.83476, 49.5748], [128.72896, 49.58676], [129.11153, 49.36813], [129.23232, 49.40353], [129.35317, 49.3481], [129.40398, 49.44194], [129.50685, 49.42398], [129.67598, 49.29596], [129.85416, 49.11067], [130.2355, 48.86741], [130.43232, 48.90844], [130.66946, 48.88251], [130.52147, 48.61745], [130.84462, 48.30942], [130.65103, 48.10052], [130.90915, 47.90623], [130.95985, 47.6957], [131.09871, 47.6852], [131.2635, 47.73325], [131.90448, 47.68011], [132.57309, 47.71741], [132.66989, 47.96491], [134.49516, 48.42884], [134.75328, 48.36763], [134.67098, 48.1564], [134.55508, 47.98651], [134.7671, 47.72051], [134.50898, 47.4812], [134.20016, 47.33458], [134.03538, 46.75668], [133.84104, 46.46681], [133.91496, 46.4274], [133.88097, 46.25066], [133.68047, 46.14697], [133.72695, 46.05576], [133.67569, 45.9759], [133.60442, 45.90053], [133.48457, 45.86203], [133.41083, 45.57723], [133.19419, 45.51913], [133.09279, 45.25693], [133.12293, 45.1332], [132.96373, 45.0212], [132.83978, 45.05916], [131.99417, 45.2567], [131.86903, 45.33636], [131.76532, 45.22609], [131.66852, 45.2196], [131.68466, 45.12374], [131.48415, 44.99513], [130.95639, 44.85154], [131.1108, 44.70266], [131.30365, 44.04262], [131.25484, 44.03131], [131.23583, 43.96085], [131.26176, 43.94011], [131.21105, 43.82383], [131.19492, 43.53047], [131.29402, 43.46695], [131.30324, 43.39498], [131.19031, 43.21385], [131.20414, 43.13654], [131.10274, 43.04734], [131.135, 42.94114], [131.02668, 42.91246], [131.02438, 42.86518], [130.66524, 42.84753], [130.44361, 42.76205], [130.40213, 42.70788], [130.56576, 42.68925], [130.62107, 42.58413], [130.55143, 42.52158], [130.56835, 42.43281], [130.60805, 42.4317], [130.64181, 42.41422], [130.66367, 42.38024], [130.65022, 42.32281], [131.95041, 41.5445], [140.9182, 45.92937], [145.82343, 44.571], [145.23667, 43.76813], [153.94307, 38.42848], [180, 62.52334], [180, 71.53642], [155.31937, 81.93282], [76.13964, 83.37843], [64.18965, 69.94255], [66.1708, 67.61252], [61.98014, 65.72191], [60.74386, 64.95767], [59.63945, 64.78384], [59.80579, 64.13948], [59.24834, 63.01859], [59.61398, 62.44915], [59.36223, 61.3882], [59.50685, 60.91162], [58.3853, 59.487], [59.15636, 59.14682], [59.40376, 58.45822], [58.71104, 58.07475], [58.81412, 57.71602], [58.13789, 57.68097], [58.07604, 57.08308], [57.28024, 56.87898], [57.51527, 56.08729], [59.28419, 56.15739], [59.49035, 55.60486], [58.81825, 55.03378], [57.25137, 55.26262], [57.14829, 54.84204], [57.95234, 54.39672], [59.95217, 54.85853], [59.70487, 54.14846], [58.94336, 53.953], [58.79644, 52.43392], [59.22409, 52.28437], [59.25033, 52.46803], [60.17516, 52.39457], [60.17253, 52.25814], [59.91279, 52.06924], [59.99809, 51.98263]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q34366\", nameEn: \"Tasmania\", aliases: [\"AU-TAS\"], country: \"AU\", groups: [\"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"61\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[123.64533, -39.13605], [159.69067, -56.28945], [159.74028, -39.1978], [123.64533, -39.13605]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q34497\", nameEn: \"Saint Helena\", aliases: [\"SH-HL\"], country: \"GB\", groups: [\"SH\", \"BOTS\", \"011\", \"202\", \"002\", \"UN\"], level: \"subterritory\", driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"290\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-8.3824, -13.9131], [-6.17428, -19.07236], [-3.29308, -15.22647], [-8.3824, -13.9131]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q35657\", nameEn: \"US States\", country: \"US\", level: \"subcountryGroup\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q36117\", nameEn: \"Borneo\", level: \"sharedLandform\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q36678\", nameEn: \"West Bank\", country: \"PS\", groups: [\"145\", \"142\"], callingCodes: [\"970\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[35.47672, 31.49578], [35.55941, 31.76535], [35.52758, 31.9131], [35.54375, 31.96587], [35.52012, 32.04076], [35.57111, 32.21877], [35.55807, 32.38674], [35.42078, 32.41562], [35.41048, 32.43706], [35.41598, 32.45593], [35.42034, 32.46009], [35.40224, 32.50136], [35.35212, 32.52047], [35.30685, 32.51024], [35.29306, 32.50947], [35.25049, 32.52453], [35.2244, 32.55289], [35.15937, 32.50466], [35.10882, 32.4757], [35.10024, 32.47856], [35.09236, 32.47614], [35.08564, 32.46948], [35.07059, 32.4585], [35.05423, 32.41754], [35.05311, 32.4024], [35.0421, 32.38242], [35.05142, 32.3667], [35.04243, 32.35008], [35.01772, 32.33863], [35.01119, 32.28684], [35.02939, 32.2671], [35.01841, 32.23981], [34.98885, 32.20758], [34.95703, 32.19522], [34.96009, 32.17503], [34.99039, 32.14626], [34.98507, 32.12606], [34.99437, 32.10962], [34.9863, 32.09551], [35.00261, 32.027], [34.98682, 31.96935], [35.00124, 31.93264], [35.03489, 31.92448], [35.03978, 31.89276], [35.03489, 31.85919], [34.99712, 31.85569], [34.9724, 31.83352], [35.01978, 31.82944], [35.05617, 31.85685], [35.07677, 31.85627], [35.14174, 31.81325], [35.18603, 31.80901], [35.18169, 31.82542], [35.19461, 31.82687], [35.21469, 31.81835], [35.216, 31.83894], [35.21128, 31.863], [35.20381, 31.86716], [35.20673, 31.88151], [35.20791, 31.8821], [35.20945, 31.8815], [35.21016, 31.88237], [35.21276, 31.88153], [35.2136, 31.88241], [35.22014, 31.88264], [35.22294, 31.87889], [35.22567, 31.86745], [35.22817, 31.8638], [35.2249, 31.85433], [35.2304, 31.84222], [35.24816, 31.8458], [35.25753, 31.8387], [35.251, 31.83085], [35.26404, 31.82567], [35.25573, 31.81362], [35.26058, 31.79064], [35.25225, 31.7678], [35.26319, 31.74846], [35.25182, 31.73945], [35.24981, 31.72543], [35.2438, 31.7201], [35.24315, 31.71244], [35.23972, 31.70896], [35.22392, 31.71899], [35.21937, 31.71578], [35.20538, 31.72388], [35.18023, 31.72067], [35.16478, 31.73242], [35.15474, 31.73352], [35.15119, 31.73634], [35.13931, 31.73012], [35.12933, 31.7325], [35.11895, 31.71454], [35.10782, 31.71594], [35.08226, 31.69107], [35.00879, 31.65426], [34.95249, 31.59813], [34.9415, 31.55601], [34.94356, 31.50743], [34.93258, 31.47816], [34.89756, 31.43891], [34.87833, 31.39321], [34.88932, 31.37093], [34.92571, 31.34337], [35.02459, 31.35979], [35.13033, 31.3551], [35.22921, 31.37445], [35.39675, 31.49572], [35.47672, 31.49578]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q37362\", nameEn: \"Akrotiri and Dhekelia\", aliases: [\"SBA\"], country: \"GB\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q38095\", nameEn: \"Gal\\xE1pagos Islands\", aliases: [\"EC-W\"], country: \"EC\", groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"593\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-93.12365, 2.64343], [-92.46744, -2.52874], [-87.07749, -0.8849], [-93.12365, 2.64343]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q39760\", nameEn: \"Gaza Strip\", country: \"PS\", groups: [\"145\", \"142\"], callingCodes: [\"970\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[34.052, 31.46619], [34.21853, 31.32363], [34.23572, 31.2966], [34.24012, 31.29591], [34.26742, 31.21998], [34.29417, 31.24194], [34.36523, 31.28963], [34.37381, 31.30598], [34.36505, 31.36404], [34.40077, 31.40926], [34.48892, 31.48365], [34.56797, 31.54197], [34.48681, 31.59711], [34.29262, 31.70393], [34.052, 31.46619]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q40888\", nameEn: \"Andaman and Nicobar Islands\", aliases: [\"IN-AN\"], country: \"IN\", groups: [\"034\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"91\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[94.42132, 5.96581], [94.6371, 13.81803], [86.7822, 13.41052], [94.42132, 5.96581]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q41684\", nameEn: \"Stewart Island\", country: \"NZ\", groups: [\"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"64\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[166.59185, -47.61313], [169.70504, -47.56021], [167.52103, -46.41337], [166.59185, -47.61313]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q43296\", nameEn: \"Wake Island\", aliases: [\"WK\", \"WAK\", \"WKUM\", \"872\", \"UM-79\"], country: \"US\", groups: [\"UM\", \"Q1352230\", \"057\", \"009\", \"UN\"], level: \"subterritory\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[167.34779, 18.97692], [166.67967, 20.14834], [165.82549, 18.97692], [167.34779, 18.97692]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q46275\", nameEn: \"New Zealand Subantarctic Islands\", country: \"NZ\", groups: [\"Q851132\", \"053\", \"009\", \"UN\"], driveSide: \"left\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[164.30551, -47.88072], [161.96603, -56.07661], [179.49541, -50.04657], [179.49541, -47.2902], [169.91032, -47.66283], [164.30551, -47.88072]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q46395\", nameEn: \"British Overseas Territories\", aliases: [\"BOTS\", \"UKOTS\"], country: \"GB\", level: \"subcountryGroup\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q46772\", nameEn: \"Kerguelen Islands\", country: \"FR\", groups: [\"EU\", \"TF\", \"Q1451600\", \"014\", \"202\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[61.9216, -49.39746], [70.67507, -51.14192], [74.25129, -45.45074], [61.9216, -49.39746]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q46879\", nameEn: \"Baker Island\", aliases: [\"UM-81\"], country: \"US\", groups: [\"UM\", \"Q1352230\", \"061\", \"009\", \"UN\"], level: \"subterritory\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-175.33482, -1.40631], [-175.31323, 0.5442], [-177.91421, 0.39582], [-175.33482, -1.40631]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q47863\", nameEn: \"Midway Atoll\", aliases: [\"MI\", \"MID\", \"MIUM\", \"488\", \"UM-71\"], country: \"US\", groups: [\"UM\", \"Q1352230\", \"061\", \"009\", \"UN\"], level: \"subterritory\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-176.29741, 29.09786], [-177.77531, 29.29793], [-177.5224, 27.7635], [-176.29741, 29.09786]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q62218\", nameEn: \"Jarvis Island\", aliases: [\"UM-86\"], country: \"US\", groups: [\"UM\", \"Q1352230\", \"061\", \"009\", \"UN\"], level: \"subterritory\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-160.42921, -1.4364], [-159.12443, 0.19975], [-160.38779, 0.30331], [-160.42921, -1.4364]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q105472\", nameEn: \"Macaronesia\", level: \"sharedLandform\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q114935\", nameEn: \"Kermadec Islands\", country: \"NZ\", groups: [\"Q851132\", \"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"64\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-174.40891, -29.09438], [-180, -24.21376], [-179.96512, -35.00791], [-174.40891, -29.09438]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q115459\", nameEn: \"Chatham Islands\", aliases: [\"NZ-CIT\"], country: \"NZ\", groups: [\"Q851132\", \"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"64\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-179.93224, -45.18423], [-172.47015, -45.17912], [-176.30998, -41.38382], [-179.93224, -45.18423]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q118863\", nameEn: \"North Island\", country: \"NZ\", groups: [\"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"64\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[179.49541, -47.2902], [179.49541, -36.79303], [174.17679, -32.62487], [170.27492, -36.38133], [174.58663, -40.80446], [174.46634, -41.55028], [179.49541, -47.2902]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q120755\", nameEn: \"South Island\", country: \"NZ\", groups: [\"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"64\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[169.70504, -47.56021], [179.49541, -47.2902], [174.46634, -41.55028], [174.58663, -40.80446], [170.27492, -36.38133], [166.56976, -39.94841], [164.8365, -46.0205], [167.52103, -46.41337], [169.70504, -47.56021]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q123076\", nameEn: \"Palmyra Atoll\", aliases: [\"UM-95\"], country: \"US\", groups: [\"UM\", \"Q1352230\", \"061\", \"009\", \"UN\"], level: \"subterritory\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-161.06795, 5.2462], [-161.0731, 7.1291], [-163.24478, 5.24198], [-161.06795, 5.2462]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q130574\", nameEn: \"Chafarinas Islands\", country: \"ES\", groups: [\"EU\", \"Q191011\", \"015\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-2.40316, 35.16893], [-2.43262, 35.20652], [-2.45965, 35.16527], [-2.40316, 35.16893]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q130895\", nameEn: \"Kingman Reef\", aliases: [\"UM-89\"], country: \"US\", groups: [\"UM\", \"Q1352230\", \"061\", \"009\", \"UN\"], level: \"subterritory\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-161.0731, 7.1291], [-163.16627, 7.15036], [-163.24478, 5.24198], [-161.0731, 7.1291]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q131008\", nameEn: \"Johnston Atoll\", aliases: [\"JT\", \"JTN\", \"JTUM\", \"396\", \"UM-67\"], country: \"US\", groups: [\"UM\", \"Q1352230\", \"061\", \"009\", \"UN\"], level: \"subterritory\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-170.65691, 16.57199], [-168.87689, 16.01159], [-169.2329, 17.4933], [-170.65691, 16.57199]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q131305\", nameEn: \"Howland Island\", aliases: [\"UM-84\"], country: \"US\", groups: [\"UM\", \"Q1352230\", \"061\", \"009\", \"UN\"], level: \"subterritory\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-177.91421, 0.39582], [-175.31323, 0.5442], [-176.74464, 2.28109], [-177.91421, 0.39582]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q133888\", nameEn: \"Ashmore and Cartier Islands\", country: \"AU\", groups: [\"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"61\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[123.7463, -11.1783], [120.6877, -13.59408], [125.29076, -12.33139], [123.7463, -11.1783]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q153732\", nameEn: \"Mariana Islands\", level: \"sharedLandform\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q172216\", nameEn: \"Coral Sea Islands\", country: \"AU\", groups: [\"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"61\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[159.77159, -28.41151], [156.73836, -14.50464], [145.2855, -9.62524], [147.69992, -17.5933], [152.93188, -20.92631], [154.02855, -24.43238], [159.77159, -28.41151]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q179313\", nameEn: \"Alderney\", country: \"GB\", groups: [\"GG\", \"830\", \"Q185086\", \"154\", \"150\", \"UN\"], level: \"subterritory\", driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"44 01481\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-2.36485, 49.48223], [-2.09454, 49.46288], [-2.02963, 49.91866], [-2.49556, 49.79012], [-2.36485, 49.48223]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q185086\", nameEn: \"Crown Dependencies\", country: \"GB\", level: \"subcountryGroup\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q190571\", nameEn: \"Scattered Islands\", country: \"FR\", groups: [\"EU\", \"TF\", \"Q1451600\", \"014\", \"202\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[53.53458, -16.36909], [54.96649, -16.28353], [54.61476, -15.02273], [53.53458, -16.36909]]], [[[38.55969, -20.75596], [40.68027, -23.38889], [43.52893, -15.62903], [38.55969, -20.75596]]], [[[47.03092, -11.05648], [47.11593, -12.08552], [47.96702, -11.46447], [47.03092, -11.05648]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q191011\", nameEn: \"Plazas de soberan\\xEDa\", country: \"ES\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q191146\", nameEn: \"Pe\\xF1\\xF3n de V\\xE9lez de la Gomera\", country: \"ES\", groups: [\"EU\", \"Q191011\", \"015\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-4.30191, 35.17419], [-4.30112, 35.17058], [-4.29436, 35.17149], [-4.30191, 35.17419]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q201698\", nameEn: \"Crozet Islands\", country: \"FR\", groups: [\"EU\", \"TF\", \"Q1451600\", \"014\", \"202\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[55.03425, -43.65017], [46.31615, -46.28749], [54.5587, -47.93013], [55.03425, -43.65017]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q578170\", nameEn: \"Contiguous United States\", aliases: [\"CONUS\"], country: \"US\", groups: [\"Q35657\", \"021\", \"003\", \"019\", \"UN\"], roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-97.13927, 25.96583], [-96.92418, 25.97377], [-80.57035, 24.0565], [-78.91214, 27.76553], [-61.98255, 37.34815], [-67.16117, 44.20069], [-66.93432, 44.82597], [-66.96824, 44.83078], [-66.98249, 44.87071], [-66.96824, 44.90965], [-67.0216, 44.95333], [-67.11316, 45.11176], [-67.15965, 45.16179], [-67.19603, 45.16771], [-67.20349, 45.1722], [-67.22751, 45.16344], [-67.27039, 45.1934], [-67.29748, 45.18173], [-67.29754, 45.14865], [-67.34927, 45.122], [-67.48201, 45.27351], [-67.42394, 45.37969], [-67.50578, 45.48971], [-67.42144, 45.50584], [-67.43815, 45.59162], [-67.6049, 45.60725], [-67.80705, 45.69528], [-67.80653, 45.80022], [-67.75654, 45.82324], [-67.80961, 45.87531], [-67.75196, 45.91814], [-67.78111, 45.9392], [-67.78578, 47.06473], [-67.87993, 47.10377], [-67.94843, 47.1925], [-68.23244, 47.35712], [-68.37458, 47.35851], [-68.38332, 47.28723], [-68.57914, 47.28431], [-68.60575, 47.24659], [-68.70125, 47.24399], [-68.89222, 47.1807], [-69.05039, 47.2456], [-69.05073, 47.30076], [-69.05148, 47.42012], [-69.22119, 47.46461], [-69.99966, 46.69543], [-70.05812, 46.41768], [-70.18547, 46.35357], [-70.29078, 46.18832], [-70.23855, 46.1453], [-70.31025, 45.96424], [-70.24694, 45.95138], [-70.25976, 45.89675], [-70.41523, 45.79497], [-70.38934, 45.73215], [-70.54019, 45.67291], [-70.68516, 45.56964], [-70.72651, 45.49771], [-70.62518, 45.42286], [-70.65383, 45.37592], [-70.78372, 45.43269], [-70.82638, 45.39828], [-70.80236, 45.37444], [-70.84816, 45.22698], [-70.89864, 45.2398], [-70.91169, 45.29849], [-70.95193, 45.33895], [-71.0107, 45.34819], [-71.01866, 45.31573], [-71.08364, 45.30623], [-71.14568, 45.24128], [-71.19723, 45.25438], [-71.22338, 45.25184], [-71.29371, 45.29996], [-71.37133, 45.24624], [-71.44252, 45.2361], [-71.40364, 45.21382], [-71.42778, 45.12624], [-71.48735, 45.07784], [-71.50067, 45.01357], [-73.35025, 45.00942], [-74.32699, 44.99029], [-74.66689, 45.00646], [-74.8447, 45.00606], [-74.99101, 44.98051], [-75.01363, 44.95608], [-75.2193, 44.87821], [-75.41441, 44.76614], [-75.76813, 44.51537], [-75.8217, 44.43176], [-75.95947, 44.34463], [-76.00018, 44.34896], [-76.16285, 44.28262], [-76.1664, 44.23051], [-76.244, 44.19643], [-76.31222, 44.19894], [-76.35324, 44.13493], [-76.43859, 44.09393], [-76.79706, 43.63099], [-79.25796, 43.54052], [-79.06921, 43.26183], [-79.05512, 43.25375], [-79.05544, 43.21224], [-79.05002, 43.20133], [-79.05384, 43.17418], [-79.04652, 43.16396], [-79.0427, 43.13934], [-79.06881, 43.12029], [-79.05671, 43.10937], [-79.07486, 43.07845], [-79.01055, 43.06659], [-78.99941, 43.05612], [-79.02424, 43.01983], [-79.02074, 42.98444], [-78.98126, 42.97], [-78.96312, 42.95509], [-78.93224, 42.95229], [-78.90905, 42.93022], [-78.90712, 42.89733], [-78.93684, 42.82887], [-82.67862, 41.67615], [-83.11184, 41.95671], [-83.14962, 42.04089], [-83.12724, 42.2376], [-83.09837, 42.28877], [-83.07837, 42.30978], [-83.02253, 42.33045], [-82.82964, 42.37355], [-82.64242, 42.55594], [-82.58873, 42.54984], [-82.57583, 42.5718], [-82.51858, 42.611], [-82.51063, 42.66025], [-82.46613, 42.76615], [-82.4826, 42.8068], [-82.45331, 42.93139], [-82.4253, 42.95423], [-82.4146, 42.97626], [-82.42469, 42.992], [-82.48419, 45.30225], [-83.59589, 45.82131], [-83.43746, 45.99749], [-83.57017, 46.105], [-83.83329, 46.12169], [-83.90453, 46.05922], [-83.95399, 46.05634], [-84.1096, 46.23987], [-84.09756, 46.25512], [-84.11615, 46.2681], [-84.11254, 46.32329], [-84.13451, 46.39218], [-84.11196, 46.50248], [-84.12885, 46.53068], [-84.17723, 46.52753], [-84.1945, 46.54061], [-84.2264, 46.53337], [-84.26351, 46.49508], [-84.29893, 46.49127], [-84.34174, 46.50683], [-84.42101, 46.49853], [-84.4481, 46.48972], [-84.47607, 46.45225], [-84.55635, 46.45974], [-84.85871, 46.88881], [-88.37033, 48.30586], [-89.48837, 48.01412], [-89.57972, 48.00023], [-89.77248, 48.02607], [-89.89974, 47.98109], [-90.07418, 48.11043], [-90.56312, 48.09488], [-90.56444, 48.12184], [-90.75045, 48.09143], [-90.87588, 48.2484], [-91.08016, 48.18096], [-91.25025, 48.08522], [-91.43248, 48.04912], [-91.45829, 48.07454], [-91.58025, 48.04339], [-91.55649, 48.10611], [-91.70451, 48.11805], [-91.71231, 48.19875], [-91.86125, 48.21278], [-91.98929, 48.25409], [-92.05339, 48.35958], [-92.14732, 48.36578], [-92.202, 48.35252], [-92.26662, 48.35651], [-92.30939, 48.31251], [-92.27167, 48.25046], [-92.37185, 48.22259], [-92.48147, 48.36609], [-92.45588, 48.40624], [-92.50712, 48.44921], [-92.65606, 48.43471], [-92.71323, 48.46081], [-92.69927, 48.49573], [-92.62747, 48.50278], [-92.6342, 48.54133], [-92.7287, 48.54005], [-92.94973, 48.60866], [-93.25391, 48.64266], [-93.33946, 48.62787], [-93.3712, 48.60599], [-93.39758, 48.60364], [-93.40693, 48.60948], [-93.44472, 48.59147], [-93.47022, 48.54357], [-93.66382, 48.51845], [-93.79267, 48.51631], [-93.80939, 48.52439], [-93.80676, 48.58232], [-93.83288, 48.62745], [-93.85769, 48.63284], [-94.23215, 48.65202], [-94.25104, 48.65729], [-94.25172, 48.68404], [-94.27153, 48.70232], [-94.4174, 48.71049], [-94.44258, 48.69223], [-94.53826, 48.70216], [-94.54885, 48.71543], [-94.58903, 48.71803], [-94.69335, 48.77883], [-94.69669, 48.80918], [-94.70486, 48.82365], [-94.70087, 48.8339], [-94.687, 48.84077], [-94.75017, 49.09931], [-94.77355, 49.11998], [-94.82487, 49.29483], [-94.8159, 49.32299], [-94.85381, 49.32492], [-94.95681, 49.37035], [-94.99532, 49.36579], [-95.01419, 49.35647], [-95.05825, 49.35311], [-95.12903, 49.37056], [-95.15357, 49.384], [-95.15355, 48.9996], [-123.32163, 49.00419], [-123.0093, 48.83186], [-123.0093, 48.76586], [-123.26565, 48.6959], [-123.15614, 48.35395], [-123.50039, 48.21223], [-125.03842, 48.53282], [-133.98258, 38.06389], [-118.48109, 32.5991], [-117.1243, 32.53427], [-115.88053, 32.63624], [-114.71871, 32.71894], [-114.76736, 32.64094], [-114.80584, 32.62028], [-114.81141, 32.55543], [-114.79524, 32.55731], [-114.82011, 32.49609], [-111.07523, 31.33232], [-108.20979, 31.33316], [-108.20899, 31.78534], [-106.529, 31.784], [-106.52266, 31.77509], [-106.51251, 31.76922], [-106.50962, 31.76155], [-106.50111, 31.75714], [-106.48815, 31.74769], [-106.47298, 31.75054], [-106.46726, 31.75998], [-106.45244, 31.76523], [-106.43419, 31.75478], [-106.41773, 31.75196], [-106.38003, 31.73151], [-106.3718, 31.71165], [-106.34864, 31.69663], [-106.33419, 31.66303], [-106.30305, 31.62154], [-106.28084, 31.56173], [-106.24612, 31.54193], [-106.23711, 31.51262], [-106.20346, 31.46305], [-106.09025, 31.40569], [-106.00363, 31.39181], [-104.77674, 30.4236], [-104.5171, 29.64671], [-104.3969, 29.57105], [-104.39363, 29.55396], [-104.37752, 29.54255], [-103.15787, 28.93865], [-102.60596, 29.8192], [-101.47277, 29.7744], [-101.05686, 29.44738], [-101.01128, 29.36947], [-100.96725, 29.3477], [-100.94579, 29.34523], [-100.94056, 29.33371], [-100.87982, 29.296], [-100.79696, 29.24688], [-100.67294, 29.09744], [-100.63689, 28.90812], [-100.59809, 28.88197], [-100.52313, 28.75598], [-100.5075, 28.74066], [-100.51222, 28.70679], [-100.50029, 28.66117], [-99.55409, 27.61314], [-99.51478, 27.55836], [-99.52955, 27.49747], [-99.50208, 27.50021], [-99.48045, 27.49016], [-99.482, 27.47128], [-99.49744, 27.43746], [-99.53573, 27.30926], [-99.08477, 26.39849], [-99.03053, 26.41249], [-99.00546, 26.3925], [-98.35126, 26.15129], [-98.30491, 26.10475], [-98.27075, 26.09457], [-98.24603, 26.07191], [-97.97017, 26.05232], [-97.95155, 26.0625], [-97.66511, 26.01708], [-97.52025, 25.88518], [-97.49828, 25.89877], [-97.45669, 25.86874], [-97.42511, 25.83969], [-97.37332, 25.83854], [-97.35946, 25.92189], [-97.13927, 25.96583]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q620634\", nameEn: \"Bir Tawil\", groups: [\"015\", \"002\"], level: \"territory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[33.17563, 22.00405], [33.57251, 21.72406], [33.99686, 21.76784], [34.0765, 22.00501], [33.17563, 22.00405]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q639185\", nameEn: \"Peros Banhos\", country: \"GB\", groups: [\"IO\", \"BOTS\", \"014\", \"202\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[72.12587, -4.02588], [70.1848, -6.37445], [72.09518, -5.61768], [72.12587, -4.02588]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q644636\", nameEn: \"Cyprus\", level: \"sharedLandform\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q851132\", nameEn: \"New Zealand Outlying Islands\", country: \"NZ\", level: \"subcountryGroup\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q875134\", nameEn: \"European Russia\", country: \"RU\", groups: [\"151\", \"150\", \"UN\"], callingCodes: [\"7\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[18.57853, 55.25302], [19.64312, 54.45423], [19.8038, 54.44203], [20.63871, 54.3706], [21.41123, 54.32395], [22.79705, 54.36264], [22.7253, 54.41732], [22.70208, 54.45312], [22.67788, 54.532], [22.71293, 54.56454], [22.68021, 54.58486], [22.7522, 54.63525], [22.74225, 54.64339], [22.75467, 54.6483], [22.73397, 54.66604], [22.73631, 54.72952], [22.87317, 54.79492], [22.85083, 54.88711], [22.76422, 54.92521], [22.68723, 54.9811], [22.65451, 54.97037], [22.60075, 55.01863], [22.58907, 55.07085], [22.47688, 55.04408], [22.31562, 55.0655], [22.14267, 55.05345], [22.11697, 55.02131], [22.06087, 55.02935], [22.02582, 55.05078], [22.03984, 55.07888], [21.99543, 55.08691], [21.96505, 55.07353], [21.85521, 55.09493], [21.64954, 55.1791], [21.55605, 55.20311], [21.51095, 55.18507], [21.46766, 55.21115], [21.38446, 55.29348], [21.35465, 55.28427], [21.26425, 55.24456], [20.95181, 55.27994], [20.60454, 55.40986], [18.57853, 55.25302]]], [[[26.32936, 60.00121], [26.90044, 59.63819], [27.85643, 59.58538], [28.04187, 59.47017], [28.19061, 59.39962], [28.21137, 59.38058], [28.20537, 59.36491], [28.19284, 59.35791], [28.14215, 59.28934], [28.00689, 59.28351], [27.90911, 59.24353], [27.87978, 59.18097], [27.80482, 59.1116], [27.74429, 58.98351], [27.36366, 58.78381], [27.55489, 58.39525], [27.48541, 58.22615], [27.62393, 58.09462], [27.67282, 57.92627], [27.81841, 57.89244], [27.78526, 57.83963], [27.56689, 57.83356], [27.50171, 57.78842], [27.52615, 57.72843], [27.3746, 57.66834], [27.40393, 57.62125], [27.31919, 57.57672], [27.34698, 57.52242], [27.56832, 57.53728], [27.52453, 57.42826], [27.86101, 57.29402], [27.66511, 56.83921], [27.86101, 56.88204], [28.04768, 56.59004], [28.13526, 56.57989], [28.10069, 56.524], [28.19057, 56.44637], [28.16599, 56.37806], [28.23716, 56.27588], [28.15217, 56.16964], [28.30571, 56.06035], [28.36888, 56.05805], [28.37987, 56.11399], [28.43068, 56.09407], [28.5529, 56.11705], [28.68337, 56.10173], [28.63668, 56.07262], [28.73418, 55.97131], [29.08299, 56.03427], [29.21717, 55.98971], [29.44692, 55.95978], [29.3604, 55.75862], [29.51283, 55.70294], [29.61446, 55.77716], [29.80672, 55.79569], [29.97975, 55.87281], [30.12136, 55.8358], [30.27776, 55.86819], [30.30987, 55.83592], [30.48257, 55.81066], [30.51346, 55.78982], [30.51037, 55.76568], [30.63344, 55.73079], [30.67464, 55.64176], [30.72957, 55.66268], [30.7845, 55.58514], [30.86003, 55.63169], [30.93419, 55.6185], [30.95204, 55.50667], [30.90123, 55.46621], [30.93144, 55.3914], [30.8257, 55.3313], [30.81946, 55.27931], [30.87944, 55.28223], [30.97369, 55.17134], [31.02071, 55.06167], [31.00972, 55.02783], [30.94243, 55.03964], [30.9081, 55.02232], [30.95754, 54.98609], [30.93144, 54.9585], [30.81759, 54.94064], [30.8264, 54.90062], [30.75165, 54.80699], [30.95479, 54.74346], [30.97127, 54.71967], [31.0262, 54.70698], [30.98226, 54.68872], [30.99187, 54.67046], [31.19339, 54.66947], [31.21399, 54.63113], [31.08543, 54.50361], [31.22945, 54.46585], [31.3177, 54.34067], [31.30791, 54.25315], [31.57002, 54.14535], [31.89599, 54.0837], [31.88744, 54.03653], [31.85019, 53.91801], [31.77028, 53.80015], [31.89137, 53.78099], [32.12621, 53.81586], [32.36663, 53.7166], [32.45717, 53.74039], [32.50112, 53.68594], [32.40499, 53.6656], [32.47777, 53.5548], [32.74968, 53.45597], [32.73257, 53.33494], [32.51725, 53.28431], [32.40773, 53.18856], [32.15368, 53.07594], [31.82373, 53.10042], [31.787, 53.18033], [31.62496, 53.22886], [31.56316, 53.19432], [31.40523, 53.21406], [31.36403, 53.13504], [31.3915, 53.09712], [31.33519, 53.08805], [31.32283, 53.04101], [31.24147, 53.031], [31.35667, 52.97854], [31.592, 52.79011], [31.57277, 52.71613], [31.50406, 52.69707], [31.63869, 52.55361], [31.56316, 52.51518], [31.61397, 52.48843], [31.62084, 52.33849], [31.57971, 52.32146], [31.70735, 52.26711], [31.6895, 52.1973], [31.77877, 52.18636], [31.7822, 52.11406], [31.81722, 52.09955], [31.85018, 52.11305], [31.96141, 52.08015], [31.92159, 52.05144], [32.08813, 52.03319], [32.23331, 52.08085], [32.2777, 52.10266], [32.34044, 52.1434], [32.33083, 52.23685], [32.38988, 52.24946], [32.3528, 52.32842], [32.54781, 52.32423], [32.69475, 52.25535], [32.85405, 52.27888], [32.89937, 52.2461], [33.18913, 52.3754], [33.51323, 52.35779], [33.48027, 52.31499], [33.55718, 52.30324], [33.78789, 52.37204], [34.05239, 52.20132], [34.11199, 52.14087], [34.09413, 52.00835], [34.41136, 51.82793], [34.42922, 51.72852], [34.07765, 51.67065], [34.17599, 51.63253], [34.30562, 51.5205], [34.22048, 51.4187], [34.33446, 51.363], [34.23009, 51.26429], [34.31661, 51.23936], [34.38802, 51.2746], [34.6613, 51.25053], [34.6874, 51.18], [34.82472, 51.17483], [34.97304, 51.2342], [35.14058, 51.23162], [35.12685, 51.16191], [35.20375, 51.04723], [35.31774, 51.08434], [35.40837, 51.04119], [35.32598, 50.94524], [35.39307, 50.92145], [35.41367, 50.80227], [35.47704, 50.77274], [35.48116, 50.66405], [35.39464, 50.64751], [35.47463, 50.49247], [35.58003, 50.45117], [35.61711, 50.35707], [35.73659, 50.35489], [35.80388, 50.41356], [35.8926, 50.43829], [36.06893, 50.45205], [36.20763, 50.3943], [36.30101, 50.29088], [36.47817, 50.31457], [36.58371, 50.28563], [36.56655, 50.2413], [36.64571, 50.218], [36.69377, 50.26982], [36.91762, 50.34963], [37.08468, 50.34935], [37.48204, 50.46079], [37.47243, 50.36277], [37.62486, 50.29966], [37.62879, 50.24481], [37.61113, 50.21976], [37.75807, 50.07896], [37.79515, 50.08425], [37.90776, 50.04194], [38.02999, 49.94482], [38.02999, 49.90592], [38.21675, 49.98104], [38.18517, 50.08161], [38.32524, 50.08866], [38.35408, 50.00664], [38.65688, 49.97176], [38.68677, 50.00904], [38.73311, 49.90238], [38.90477, 49.86787], [38.9391, 49.79524], [39.1808, 49.88911], [39.27968, 49.75976], [39.44496, 49.76067], [39.59142, 49.73758], [39.65047, 49.61761], [39.84548, 49.56064], [40.13249, 49.61672], [40.16683, 49.56865], [40.03636, 49.52321], [40.03087, 49.45452], [40.1141, 49.38798], [40.14912, 49.37681], [40.18331, 49.34996], [40.22176, 49.25683], [40.01988, 49.1761], [39.93437, 49.05709], [39.6836, 49.05121], [39.6683, 48.99454], [39.71353, 48.98959], [39.72649, 48.9754], [39.74874, 48.98675], [39.78368, 48.91596], [39.98967, 48.86901], [40.03636, 48.91957], [40.08168, 48.87443], [39.97182, 48.79398], [39.79466, 48.83739], [39.73104, 48.7325], [39.71765, 48.68673], [39.67226, 48.59368], [39.79764, 48.58668], [39.84548, 48.57821], [39.86196, 48.46633], [39.88794, 48.44226], [39.94847, 48.35055], [39.84136, 48.33321], [39.84273, 48.30947], [39.90041, 48.3049], [39.91465, 48.26743], [39.95248, 48.29972], [39.9693, 48.29904], [39.97325, 48.31399], [39.99241, 48.31768], [40.00752, 48.22445], [39.94847, 48.22811], [39.83724, 48.06501], [39.88256, 48.04482], [39.77544, 48.04206], [39.82213, 47.96396], [39.73935, 47.82876], [38.87979, 47.87719], [38.79628, 47.81109], [38.76379, 47.69346], [38.35062, 47.61631], [38.28679, 47.53552], [38.28954, 47.39255], [38.22225, 47.30788], [38.33074, 47.30508], [38.32112, 47.2585], [38.23049, 47.2324], [38.22955, 47.12069], [38.3384, 46.98085], [38.12112, 46.86078], [37.62608, 46.82615], [35.23066, 45.79231], [35.04991, 45.76827], [36.6645, 45.4514], [36.6545, 45.3417], [36.5049, 45.3136], [36.475, 45.2411], [36.4883, 45.0488], [33.5943, 44.03313], [39.81147, 43.06294], [40.0078, 43.38551], [40.00853, 43.40578], [40.01552, 43.42025], [40.01007, 43.42411], [40.03312, 43.44262], [40.04445, 43.47776], [40.10657, 43.57344], [40.65957, 43.56212], [41.64935, 43.22331], [42.40563, 43.23226], [42.66667, 43.13917], [42.75889, 43.19651], [43.03322, 43.08883], [43.0419, 43.02413], [43.81453, 42.74297], [43.73119, 42.62043], [43.95517, 42.55396], [44.54202, 42.75699], [44.70002, 42.74679], [44.80941, 42.61277], [44.88754, 42.74934], [45.15318, 42.70598], [45.36501, 42.55268], [45.78692, 42.48358], [45.61676, 42.20768], [46.42738, 41.91323], [46.5332, 41.87389], [46.58924, 41.80547], [46.75269, 41.8623], [46.8134, 41.76252], [47.00955, 41.63583], [46.99554, 41.59743], [47.03757, 41.55434], [47.10762, 41.59044], [47.34579, 41.27884], [47.49004, 41.26366], [47.54504, 41.20275], [47.62288, 41.22969], [47.75831, 41.19455], [47.87973, 41.21798], [48.07587, 41.49957], [48.22064, 41.51472], [48.2878, 41.56221], [48.40277, 41.60441], [48.42301, 41.65444], [48.55078, 41.77917], [48.5867, 41.84306], [48.80971, 41.95365], [49.2134, 44.84989], [49.88945, 46.04554], [49.32259, 46.26944], [49.16518, 46.38542], [48.54988, 46.56267], [48.51142, 46.69268], [49.01136, 46.72716], [48.52326, 47.4102], [48.45173, 47.40818], [48.15348, 47.74545], [47.64973, 47.76559], [47.41689, 47.83687], [47.38731, 47.68176], [47.12107, 47.83687], [47.11516, 48.27188], [46.49011, 48.43019], [46.78392, 48.95352], [47.00857, 49.04921], [47.04658, 49.19834], [46.78398, 49.34026], [46.9078, 49.86707], [47.18319, 49.93721], [47.34589, 50.09308], [47.30448, 50.30894], [47.58551, 50.47867], [48.10044, 50.09242], [48.24519, 49.86099], [48.42564, 49.82283], [48.68352, 49.89546], [48.90782, 50.02281], [48.57946, 50.63278], [48.86936, 50.61589], [49.12673, 50.78639], [49.41959, 50.85927], [49.39001, 51.09396], [49.76866, 51.11067], [49.97277, 51.2405], [50.26859, 51.28677], [50.59695, 51.61859], [51.26254, 51.68466], [51.301, 51.48799], [51.77431, 51.49536], [51.8246, 51.67916], [52.36119, 51.74161], [52.54329, 51.48444], [53.46165, 51.49445], [53.69299, 51.23466], [54.12248, 51.11542], [54.46331, 50.85554], [54.41894, 50.61214], [54.55797, 50.52006], [54.71476, 50.61214], [54.56685, 51.01958], [54.72067, 51.03261], [55.67774, 50.54508], [56.11398, 50.7471], [56.17906, 50.93204], [57.17302, 51.11253], [57.44221, 50.88354], [57.74986, 50.93017], [57.75578, 51.13852], [58.3208, 51.15151], [58.87974, 50.70852], [59.48928, 50.64216], [59.51886, 50.49937], [59.81172, 50.54451], [60.01288, 50.8163], [60.17262, 50.83312], [60.31914, 50.67705], [60.81833, 50.6629], [61.4431, 50.80679], [61.56889, 51.23679], [61.6813, 51.25716], [61.55114, 51.32746], [61.50677, 51.40687], [60.95655, 51.48615], [60.92401, 51.61124], [60.5424, 51.61675], [60.36787, 51.66815], [60.50986, 51.7964], [60.09867, 51.87135], [59.99809, 51.98263], [59.91279, 52.06924], [60.17253, 52.25814], [60.17516, 52.39457], [59.25033, 52.46803], [59.22409, 52.28437], [58.79644, 52.43392], [58.94336, 53.953], [59.70487, 54.14846], [59.95217, 54.85853], [57.95234, 54.39672], [57.14829, 54.84204], [57.25137, 55.26262], [58.81825, 55.03378], [59.49035, 55.60486], [59.28419, 56.15739], [57.51527, 56.08729], [57.28024, 56.87898], [58.07604, 57.08308], [58.13789, 57.68097], [58.81412, 57.71602], [58.71104, 58.07475], [59.40376, 58.45822], [59.15636, 59.14682], [58.3853, 59.487], [59.50685, 60.91162], [59.36223, 61.3882], [59.61398, 62.44915], [59.24834, 63.01859], [59.80579, 64.13948], [59.63945, 64.78384], [60.74386, 64.95767], [61.98014, 65.72191], [66.1708, 67.61252], [64.18965, 69.94255], [76.13964, 83.37843], [36.85549, 84.09565], [32.07813, 72.01005], [31.59909, 70.16571], [30.84095, 69.80584], [30.95011, 69.54699], [30.52662, 69.54699], [30.16363, 69.65244], [29.97205, 69.41623], [29.27631, 69.2811], [29.26623, 69.13794], [29.0444, 69.0119], [28.91738, 69.04774], [28.45957, 68.91417], [28.78224, 68.86696], [28.43941, 68.53366], [28.62982, 68.19816], [29.34179, 68.06655], [29.66955, 67.79872], [30.02041, 67.67523], [29.91155, 67.51507], [28.9839, 66.94139], [29.91155, 66.13863], [30.16363, 65.66935], [29.97205, 65.70256], [29.74013, 65.64025], [29.84096, 65.56945], [29.68972, 65.31803], [29.61914, 65.23791], [29.8813, 65.22101], [29.84096, 65.1109], [29.61914, 65.05993], [29.68972, 64.80789], [30.05271, 64.79072], [30.12329, 64.64862], [30.01238, 64.57513], [30.06279, 64.35782], [30.4762, 64.25728], [30.55687, 64.09036], [30.25437, 63.83364], [29.98213, 63.75795], [30.49637, 63.46666], [31.23244, 63.22239], [31.29294, 63.09035], [31.58535, 62.91642], [31.38369, 62.66284], [31.10136, 62.43042], [29.01829, 61.17448], [28.82816, 61.1233], [28.47974, 60.93365], [27.77352, 60.52722], [27.71177, 60.3893], [27.44953, 60.22766], [26.32936, 60.00121]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q1083368\", nameEn: \"Mainland Finland\", country: \"FI\", groups: [\"EU\", \"154\", \"150\", \"UN\"], callingCodes: [\"358\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[29.12697, 69.69193], [28.36883, 69.81658], [28.32849, 69.88605], [27.97558, 69.99671], [27.95542, 70.0965], [27.57226, 70.06215], [27.05802, 69.92069], [26.64461, 69.96565], [26.40261, 69.91377], [25.96904, 69.68397], [25.69679, 69.27039], [25.75729, 68.99383], [25.61613, 68.89602], [25.42455, 68.90328], [25.12206, 68.78684], [25.10189, 68.63307], [24.93048, 68.61102], [24.90023, 68.55579], [24.74898, 68.65143], [24.18432, 68.73936], [24.02299, 68.81601], [23.781, 68.84514], [23.68017, 68.70276], [23.13064, 68.64684], [22.53321, 68.74393], [22.38367, 68.71561], [22.27276, 68.89514], [21.63833, 69.27485], [21.27827, 69.31281], [21.00732, 69.22755], [20.98641, 69.18809], [21.11099, 69.10291], [21.05775, 69.0356], [20.72171, 69.11874], [20.55258, 69.06069], [20.78802, 69.03087], [20.91658, 68.96764], [20.85104, 68.93142], [20.90649, 68.89696], [21.03001, 68.88969], [22.00429, 68.50692], [22.73028, 68.40881], [23.10336, 68.26551], [23.15377, 68.14759], [23.26469, 68.15134], [23.40081, 68.05545], [23.65793, 67.9497], [23.45627, 67.85297], [23.54701, 67.59306], [23.39577, 67.46974], [23.75372, 67.43688], [23.75372, 67.29914], [23.54701, 67.25435], [23.58735, 67.20752], [23.56214, 67.17038], [23.98563, 66.84149], [23.98059, 66.79585], [23.89488, 66.772], [23.85959, 66.56434], [23.63776, 66.43568], [23.67591, 66.3862], [23.64982, 66.30603], [23.71339, 66.21299], [23.90497, 66.15802], [24.15791, 65.85385], [24.14798, 65.83466], [24.15107, 65.81427], [24.14112, 65.39731], [20.15877, 63.06556], [19.23413, 60.61414], [20.96741, 60.71528], [21.15143, 60.54555], [21.08159, 60.20167], [21.02509, 60.12142], [21.35468, 59.67511], [20.5104, 59.15546], [26.32936, 60.00121], [27.44953, 60.22766], [27.71177, 60.3893], [27.77352, 60.52722], [28.47974, 60.93365], [28.82816, 61.1233], [29.01829, 61.17448], [31.10136, 62.43042], [31.38369, 62.66284], [31.58535, 62.91642], [31.29294, 63.09035], [31.23244, 63.22239], [30.49637, 63.46666], [29.98213, 63.75795], [30.25437, 63.83364], [30.55687, 64.09036], [30.4762, 64.25728], [30.06279, 64.35782], [30.01238, 64.57513], [30.12329, 64.64862], [30.05271, 64.79072], [29.68972, 64.80789], [29.61914, 65.05993], [29.84096, 65.1109], [29.8813, 65.22101], [29.61914, 65.23791], [29.68972, 65.31803], [29.84096, 65.56945], [29.74013, 65.64025], [29.97205, 65.70256], [30.16363, 65.66935], [29.91155, 66.13863], [28.9839, 66.94139], [29.91155, 67.51507], [30.02041, 67.67523], [29.66955, 67.79872], [29.34179, 68.06655], [28.62982, 68.19816], [28.43941, 68.53366], [28.78224, 68.86696], [28.45957, 68.91417], [28.91738, 69.04774], [28.81248, 69.11997], [28.8629, 69.22395], [29.31664, 69.47994], [29.12697, 69.69193]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q1184963\", nameEn: \"Alhucemas Islands\", country: \"ES\", groups: [\"EU\", \"Q191011\", \"015\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-3.90602, 35.21494], [-3.88372, 35.20767], [-3.89343, 35.22728], [-3.90602, 35.21494]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q1298289\", nameEn: \"Egmont Islands\", country: \"GB\", groups: [\"IO\", \"BOTS\", \"014\", \"202\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[70.1848, -6.37445], [70.67958, -8.2663], [72.17991, -6.68509], [70.1848, -6.37445]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q1352230\", nameEn: \"US Territories\", country: \"US\", level: \"subcountryGroup\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q1451600\", nameEn: \"Overseas Countries and Territories of the EU\", aliases: [\"OCT\"], level: \"subunion\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q1544253\", nameEn: \"Great Chagos Bank\", country: \"GB\", groups: [\"IO\", \"BOTS\", \"014\", \"202\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[70.1848, -6.37445], [72.17991, -6.68509], [73.20573, -5.20727], [70.1848, -6.37445]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q1585511\", nameEn: \"Salomon Atoll\", country: \"GB\", groups: [\"IO\", \"BOTS\", \"014\", \"202\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[72.09518, -5.61768], [73.20573, -5.20727], [72.12587, -4.02588], [72.09518, -5.61768]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q1681727\", nameEn: \"Saint-Paul and Amsterdam\", country: \"FR\", groups: [\"EU\", \"TF\", \"Q1451600\", \"014\", \"202\", \"002\", \"UN\"], level: \"subterritory\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[76.31747, -42.16264], [80.15867, -36.04977], [71.22311, -38.75287], [76.31747, -42.16264]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q1901211\", nameEn: \"East Malaysia\", country: \"MY\", groups: [\"Q36117\", \"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"60\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[110.90339, 7.52694], [109.82788, 2.86812], [109.62558, 1.99182], [109.53794, 1.91771], [109.57923, 1.80624], [109.66397, 1.79972], [109.66397, 1.60425], [110.35354, 0.98869], [110.49182, 0.88088], [110.62374, 0.873], [111.22979, 1.08326], [111.55434, 0.97864], [111.82846, 0.99349], [111.94553, 1.12016], [112.15679, 1.17004], [112.2127, 1.44135], [112.48648, 1.56516], [113.021, 1.57819], [113.01448, 1.42832], [113.64677, 1.23933], [114.03788, 1.44787], [114.57892, 1.5], [114.80706, 1.92351], [114.80706, 2.21665], [115.1721, 2.49671], [115.11343, 2.82879], [115.53713, 3.14776], [115.58276, 3.93499], [115.90217, 4.37708], [117.25801, 4.35108], [117.47313, 4.18857], [117.67641, 4.16535], [118.06469, 4.16638], [118.93936, 4.09009], [119.52945, 5.35672], [117.98544, 6.27477], [117.93857, 6.89845], [117.17735, 7.52841], [116.79524, 7.43869], [115.02521, 5.35005], [115.16236, 5.01011], [115.15092, 4.87604], [115.20737, 4.8256], [115.27819, 4.63661], [115.2851, 4.42295], [115.36346, 4.33563], [115.31275, 4.30806], [115.09978, 4.39123], [115.07737, 4.53418], [115.04064, 4.63706], [115.02278, 4.74137], [115.02955, 4.82087], [115.05038, 4.90275], [114.99417, 4.88201], [114.96982, 4.81146], [114.88841, 4.81905], [114.8266, 4.75062], [114.77303, 4.72871], [114.83189, 4.42387], [114.88039, 4.4257], [114.78539, 4.12205], [114.64211, 4.00694], [114.49922, 4.13108], [114.4416, 4.27588], [114.32176, 4.2552], [114.32176, 4.34942], [114.26876, 4.49878], [114.15813, 4.57], [114.07448, 4.58441], [114.10166, 4.76112], [110.90339, 7.52694]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q1973345\", nameEn: \"Peninsular Malaysia\", country: \"MY\", groups: [\"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"60\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[102.46318, 7.22462], [102.09086, 6.23546], [102.08127, 6.22679], [102.07732, 6.193], [102.09182, 6.14161], [102.01835, 6.05407], [101.99209, 6.04075], [101.97114, 6.01992], [101.9714, 6.00575], [101.94712, 5.98421], [101.92819, 5.85511], [101.91776, 5.84269], [101.89188, 5.8386], [101.80144, 5.74505], [101.75074, 5.79091], [101.69773, 5.75881], [101.58019, 5.93534], [101.25524, 5.78633], [101.25755, 5.71065], [101.14062, 5.61613], [100.98815, 5.79464], [101.02708, 5.91013], [101.087, 5.9193], [101.12388, 6.11411], [101.06165, 6.14161], [101.12618, 6.19431], [101.10313, 6.25617], [100.85884, 6.24929], [100.81045, 6.45086], [100.74822, 6.46231], [100.74361, 6.50811], [100.66986, 6.45086], [100.43027, 6.52389], [100.42351, 6.51762], [100.41791, 6.5189], [100.41152, 6.52299], [100.35413, 6.54932], [100.31929, 6.65413], [100.32607, 6.65933], [100.32671, 6.66526], [100.31884, 6.66423], [100.31618, 6.66781], [100.30828, 6.66462], [100.29651, 6.68439], [100.19511, 6.72559], [100.12, 6.42105], [100.0756, 6.4045], [99.91873, 6.50233], [99.50117, 6.44501], [99.31854, 5.99868], [99.75778, 3.86466], [103.03657, 1.30383], [103.56591, 1.19719], [103.62738, 1.35255], [103.67468, 1.43166], [103.7219, 1.46108], [103.74161, 1.4502], [103.76395, 1.45183], [103.81181, 1.47953], [103.86383, 1.46288], [103.89565, 1.42841], [103.93384, 1.42926], [104.00131, 1.42405], [104.02277, 1.4438], [104.04622, 1.44691], [104.07348, 1.43322], [104.08871, 1.42015], [104.09162, 1.39694], [104.08072, 1.35998], [104.12282, 1.27714], [104.34728, 1.33529], [104.56723, 1.44271], [105.01437, 3.24936], [102.46318, 7.22462]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q2093907\", nameEn: \"Three Kings Islands\", country: \"NZ\", groups: [\"Q851132\", \"053\", \"009\", \"UN\"], driveSide: \"left\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[174.17679, -32.62487], [170.93268, -32.97889], [171.97383, -34.64644], [174.17679, -32.62487]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q2298216\", nameEn: \"Solander Islands\", country: \"NZ\", groups: [\"Q851132\", \"053\", \"009\", \"UN\"], driveSide: \"left\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[167.39068, -46.49187], [166.5534, -46.39484], [166.84561, -46.84889], [167.39068, -46.49187]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q2872203\", nameEn: \"Mainland Australia\", country: \"AU\", groups: [\"053\", \"009\", \"UN\"], level: \"subcountryGroup\", driveSide: \"left\", callingCodes: [\"61\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[88.16419, -23.49578], [123.64533, -39.13605], [159.74028, -39.1978], [159.76765, -29.76946], [154.02855, -24.43238], [152.93188, -20.92631], [147.69992, -17.5933], [145.2855, -9.62524], [143.87386, -9.02382], [143.29772, -9.33993], [142.48658, -9.36754], [142.19246, -9.15378], [141.88934, -9.36111], [141.01842, -9.35091], [135.49042, -9.2276], [127.55165, -9.05052], [125.29076, -12.33139], [88.16419, -23.49578]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q2914565\", nameEn: \"Autonomous Regions of Portugal\", country: \"PT\", level: \"subcountryGroup\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q2915956\", nameEn: \"Mainland Portugal\", country: \"PT\", groups: [\"Q12837\", \"EU\", \"039\", \"150\", \"UN\"], level: \"subcountryGroup\", callingCodes: [\"351\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-10.39881, 36.12218], [-7.37282, 36.96896], [-7.39769, 37.16868], [-7.41133, 37.20314], [-7.41854, 37.23813], [-7.43227, 37.25152], [-7.43974, 37.38913], [-7.46878, 37.47127], [-7.51759, 37.56119], [-7.41981, 37.75729], [-7.33441, 37.81193], [-7.27314, 37.90145], [-7.24544, 37.98884], [-7.12648, 38.00296], [-7.10366, 38.04404], [-7.05966, 38.01966], [-7.00375, 38.01914], [-6.93418, 38.21454], [-7.09389, 38.17227], [-7.15581, 38.27597], [-7.32529, 38.44336], [-7.265, 38.61674], [-7.26174, 38.72107], [-7.03848, 38.87221], [-7.051, 38.907], [-6.95211, 39.0243], [-6.97004, 39.07619], [-7.04011, 39.11919], [-7.10692, 39.10275], [-7.14929, 39.11287], [-7.12811, 39.17101], [-7.23566, 39.20132], [-7.23403, 39.27579], [-7.3149, 39.34857], [-7.2927, 39.45847], [-7.49477, 39.58794], [-7.54121, 39.66717], [-7.33507, 39.64569], [-7.24707, 39.66576], [-7.01613, 39.66877], [-6.97492, 39.81488], [-6.91463, 39.86618], [-6.86737, 40.01986], [-6.94233, 40.10716], [-7.00589, 40.12087], [-7.02544, 40.18564], [-7.00426, 40.23169], [-6.86085, 40.26776], [-6.86085, 40.2976], [-6.80218, 40.33239], [-6.78426, 40.36468], [-6.84618, 40.42177], [-6.84944, 40.46394], [-6.7973, 40.51723], [-6.80218, 40.55067], [-6.84292, 40.56801], [-6.79567, 40.65955], [-6.82826, 40.74603], [-6.82337, 40.84472], [-6.79892, 40.84842], [-6.80707, 40.88047], [-6.84292, 40.89771], [-6.8527, 40.93958], [-6.9357, 41.02888], [-6.913, 41.03922], [-6.88843, 41.03027], [-6.84781, 41.02692], [-6.80942, 41.03629], [-6.79241, 41.05397], [-6.75655, 41.10187], [-6.77319, 41.13049], [-6.69711, 41.1858], [-6.68286, 41.21641], [-6.65046, 41.24725], [-6.55937, 41.24417], [-6.38551, 41.35274], [-6.38553, 41.38655], [-6.3306, 41.37677], [-6.26777, 41.48796], [-6.19128, 41.57638], [-6.29863, 41.66432], [-6.44204, 41.68258], [-6.49907, 41.65823], [-6.54633, 41.68623], [-6.56426, 41.74219], [-6.51374, 41.8758], [-6.56752, 41.88429], [-6.5447, 41.94371], [-6.58544, 41.96674], [-6.61967, 41.94008], [-6.75004, 41.94129], [-6.76959, 41.98734], [-6.81196, 41.99097], [-6.82174, 41.94493], [-6.94396, 41.94403], [-6.95537, 41.96553], [-6.98144, 41.9728], [-7.01078, 41.94977], [-7.07596, 41.94977], [-7.08574, 41.97401], [-7.14115, 41.98855], [-7.18549, 41.97515], [-7.18677, 41.88793], [-7.32366, 41.8406], [-7.37092, 41.85031], [-7.42864, 41.80589], [-7.42854, 41.83262], [-7.44759, 41.84451], [-7.45566, 41.86488], [-7.49803, 41.87095], [-7.52737, 41.83939], [-7.62188, 41.83089], [-7.58603, 41.87944], [-7.65774, 41.88308], [-7.69848, 41.90977], [-7.84188, 41.88065], [-7.88055, 41.84571], [-7.88751, 41.92553], [-7.90707, 41.92432], [-7.92336, 41.8758], [-7.9804, 41.87337], [-8.01136, 41.83453], [-8.0961, 41.81024], [-8.16455, 41.81753], [-8.16944, 41.87944], [-8.19551, 41.87459], [-8.2185, 41.91237], [-8.16232, 41.9828], [-8.08796, 42.01398], [-8.08847, 42.05767], [-8.11729, 42.08537], [-8.18178, 42.06436], [-8.19406, 42.12141], [-8.18947, 42.13853], [-8.1986, 42.15402], [-8.22406, 42.1328], [-8.24681, 42.13993], [-8.2732, 42.12396], [-8.29809, 42.106], [-8.32161, 42.10218], [-8.33912, 42.08358], [-8.36353, 42.09065], [-8.38323, 42.07683], [-8.40143, 42.08052], [-8.42512, 42.07199], [-8.44123, 42.08218], [-8.48185, 42.0811], [-8.52837, 42.07658], [-8.5252, 42.06264], [-8.54563, 42.0537], [-8.58086, 42.05147], [-8.59493, 42.05708], [-8.63791, 42.04691], [-8.64626, 42.03668], [-8.65832, 42.02972], [-8.6681, 41.99703], [-8.69071, 41.98862], [-8.7478, 41.96282], [-8.74606, 41.9469], [-8.75712, 41.92833], [-8.81794, 41.90375], [-8.87157, 41.86488], [-11.19304, 41.83075], [-10.39881, 36.12218]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q3311985\", nameEn: \"Guernsey\", country: \"GB\", groups: [\"GG\", \"830\", \"Q185086\", \"154\", \"150\", \"UN\"], level: \"subterritory\", driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"44 01481\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-2.49556, 49.79012], [-3.28154, 49.57329], [-2.65349, 49.15373], [-2.36485, 49.48223], [-2.49556, 49.79012]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q3320166\", nameEn: \"Outermost Regions of the EU\", aliases: [\"OMR\"], level: \"subunion\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q3336843\", nameEn: \"Countries of the United Kingdom\", aliases: [\"GB-UKM\"], country: \"GB\", level: \"subcountryGroup\" }, geometry: null },\n  { type: \"Feature\", properties: { wikidata: \"Q6736667\", nameEn: \"Mainland India\", country: \"IN\", groups: [\"034\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"91\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[89.08044, 21.41871], [89.07114, 22.15335], [88.9367, 22.58527], [88.94614, 22.66941], [88.9151, 22.75228], [88.96713, 22.83346], [88.87063, 22.95235], [88.88327, 23.03885], [88.86377, 23.08759], [88.99148, 23.21134], [88.71133, 23.2492], [88.79254, 23.46028], [88.79351, 23.50535], [88.74841, 23.47361], [88.56507, 23.64044], [88.58087, 23.87105], [88.66189, 23.87607], [88.73743, 23.91751], [88.6976, 24.14703], [88.74841, 24.1959], [88.68801, 24.31464], [88.50934, 24.32474], [88.12296, 24.51301], [88.08786, 24.63232], [88.00683, 24.66477], [88.15515, 24.85806], [88.14004, 24.93529], [88.21832, 24.96642], [88.27325, 24.88796], [88.33917, 24.86803], [88.46277, 25.07468], [88.44766, 25.20149], [88.94067, 25.18534], [89.00463, 25.26583], [89.01105, 25.30303], [88.85278, 25.34679], [88.81296, 25.51546], [88.677, 25.46959], [88.4559, 25.59227], [88.45103, 25.66245], [88.242, 25.80811], [88.13138, 25.78773], [88.08804, 25.91334], [88.16581, 26.0238], [88.1844, 26.14417], [88.34757, 26.22216], [88.35153, 26.29123], [88.51649, 26.35923], [88.48749, 26.45855], [88.36938, 26.48683], [88.35153, 26.45241], [88.33093, 26.48929], [88.41196, 26.63837], [88.4298, 26.54489], [88.62144, 26.46783], [88.69485, 26.38353], [88.67837, 26.26291], [88.78961, 26.31093], [88.85004, 26.23211], [89.05328, 26.2469], [88.91321, 26.37984], [88.92357, 26.40711], [88.95612, 26.4564], [89.08899, 26.38845], [89.15869, 26.13708], [89.35953, 26.0077], [89.53515, 26.00382], [89.57101, 25.9682], [89.63968, 26.22595], [89.70201, 26.15138], [89.73581, 26.15818], [89.77865, 26.08387], [89.77728, 26.04254], [89.86592, 25.93115], [89.80585, 25.82489], [89.84388, 25.70042], [89.86129, 25.61714], [89.81208, 25.37244], [89.84086, 25.31854], [89.83371, 25.29548], [89.87629, 25.28337], [89.90478, 25.31038], [90.1155, 25.22686], [90.40034, 25.1534], [90.65042, 25.17788], [90.87427, 25.15799], [91.25517, 25.20677], [91.63648, 25.12846], [92.0316, 25.1834], [92.33957, 25.07593], [92.39147, 25.01471], [92.49887, 24.88796], [92.38626, 24.86055], [92.25854, 24.9191], [92.15796, 24.54435], [92.11662, 24.38997], [91.96603, 24.3799], [91.89258, 24.14674], [91.82596, 24.22345], [91.76004, 24.23848], [91.73257, 24.14703], [91.65292, 24.22095], [91.63782, 24.1132], [91.55542, 24.08687], [91.37414, 24.10693], [91.35741, 23.99072], [91.29587, 24.0041], [91.22308, 23.89616], [91.25192, 23.83463], [91.15579, 23.6599], [91.28293, 23.37538], [91.36453, 23.06612], [91.40848, 23.07117], [91.4035, 23.27522], [91.46615, 23.2328], [91.54993, 23.01051], [91.61571, 22.93929], [91.7324, 23.00043], [91.81634, 23.08001], [91.76417, 23.26619], [91.84789, 23.42235], [91.95642, 23.47361], [91.95093, 23.73284], [92.04706, 23.64229], [92.15417, 23.73409], [92.26541, 23.70392], [92.38214, 23.28705], [92.37665, 22.9435], [92.5181, 22.71441], [92.60029, 22.1522], [92.56616, 22.13554], [92.60949, 21.97638], [92.67532, 22.03547], [92.70416, 22.16017], [92.86208, 22.05456], [92.89504, 21.95143], [92.93899, 22.02656], [92.99804, 21.98964], [92.99255, 22.05965], [93.04885, 22.20595], [93.15734, 22.18687], [93.14224, 22.24535], [93.19991, 22.25425], [93.18206, 22.43716], [93.13537, 22.45873], [93.11477, 22.54374], [93.134, 22.59573], [93.09417, 22.69459], [93.134, 22.92498], [93.12988, 23.05772], [93.2878, 23.00464], [93.38478, 23.13698], [93.36862, 23.35426], [93.38781, 23.36139], [93.39981, 23.38828], [93.38805, 23.4728], [93.43475, 23.68299], [93.3908, 23.7622], [93.3908, 23.92925], [93.36059, 23.93176], [93.32351, 24.04468], [93.34735, 24.10151], [93.41415, 24.07854], [93.46633, 23.97067], [93.50616, 23.94432], [93.62871, 24.00922], [93.75952, 24.0003], [93.80279, 23.92549], [93.92089, 23.95812], [94.14081, 23.83333], [94.30215, 24.23752], [94.32362, 24.27692], [94.45279, 24.56656], [94.50729, 24.59281], [94.5526, 24.70764], [94.60204, 24.70889], [94.73937, 25.00545], [94.74212, 25.13606], [94.57458, 25.20318], [94.68032, 25.47003], [94.80117, 25.49359], [95.18556, 26.07338], [95.11428, 26.1019], [95.12801, 26.38397], [95.05798, 26.45408], [95.23513, 26.68499], [95.30339, 26.65372], [95.437, 26.7083], [95.81603, 27.01335], [95.93002, 27.04149], [96.04949, 27.19428], [96.15591, 27.24572], [96.40779, 27.29818], [96.55761, 27.29928], [96.73888, 27.36638], [96.88445, 27.25046], [96.85287, 27.2065], [96.89132, 27.17474], [97.14675, 27.09041], [97.17422, 27.14052], [96.91431, 27.45752], [96.90112, 27.62149], [97.29919, 27.92233], [97.35824, 27.87256], [97.38845, 28.01329], [97.35412, 28.06663], [97.31292, 28.06784], [97.34547, 28.21385], [97.1289, 28.3619], [96.98882, 28.32564], [96.88445, 28.39452], [96.85561, 28.4875], [96.6455, 28.61657], [96.48895, 28.42955], [96.40929, 28.51526], [96.61391, 28.72742], [96.3626, 29.10607], [96.20467, 29.02325], [96.18682, 29.11087], [96.31316, 29.18643], [96.05361, 29.38167], [95.84899, 29.31464], [95.75149, 29.32063], [95.72086, 29.20797], [95.50842, 29.13487], [95.41091, 29.13007], [95.3038, 29.13847], [95.26122, 29.07727], [95.2214, 29.10727], [95.11291, 29.09527], [95.0978, 29.14446], [94.81353, 29.17804], [94.69318, 29.31739], [94.2752, 29.11687], [94.35897, 29.01965], [93.72797, 28.68821], [93.44621, 28.67189], [93.18069, 28.50319], [93.14635, 28.37035], [92.93075, 28.25671], [92.67486, 28.15018], [92.65472, 28.07632], [92.73025, 28.05814], [92.7275, 27.98662], [92.42538, 27.80092], [92.32101, 27.79363], [92.27432, 27.89077], [91.87057, 27.7195], [91.84722, 27.76325], [91.6469, 27.76358], [91.55819, 27.6144], [91.65007, 27.48287], [92.01132, 27.47352], [92.12019, 27.27829], [92.04702, 27.26861], [92.03457, 27.07334], [92.11863, 26.893], [92.05523, 26.8692], [91.83181, 26.87318], [91.50067, 26.79223], [90.67715, 26.77215], [90.48504, 26.8594], [90.39271, 26.90704], [90.30402, 26.85098], [90.04535, 26.72422], [89.86124, 26.73307], [89.63369, 26.74402], [89.42349, 26.83727], [89.3901, 26.84225], [89.38319, 26.85963], [89.37913, 26.86224], [89.1926, 26.81329], [89.12825, 26.81661], [89.09554, 26.89089], [88.95807, 26.92668], [88.92301, 26.99286], [88.8714, 26.97488], [88.86984, 27.10937], [88.74219, 27.144], [88.91901, 27.32483], [88.82981, 27.38814], [88.77517, 27.45415], [88.88091, 27.85192], [88.83559, 28.01936], [88.63235, 28.12356], [88.54858, 28.06057], [88.25332, 27.9478], [88.1278, 27.95417], [88.13378, 27.88015], [88.1973, 27.85067], [88.19107, 27.79285], [88.04008, 27.49223], [88.07277, 27.43007], [88.01646, 27.21612], [88.01587, 27.21388], [87.9887, 27.11045], [88.11719, 26.98758], [88.13422, 26.98705], [88.12302, 26.95324], [88.19107, 26.75516], [88.1659, 26.68177], [88.16452, 26.64111], [88.09963, 26.54195], [88.09414, 26.43732], [88.00895, 26.36029], [87.90115, 26.44923], [87.89085, 26.48565], [87.84193, 26.43663], [87.7918, 26.46737], [87.76004, 26.40711], [87.67893, 26.43501], [87.66803, 26.40294], [87.59175, 26.38342], [87.55274, 26.40596], [87.51571, 26.43106], [87.46566, 26.44058], [87.37314, 26.40815], [87.34568, 26.34787], [87.26568, 26.37294], [87.26587, 26.40592], [87.24682, 26.4143], [87.18863, 26.40558], [87.14751, 26.40542], [87.09147, 26.45039], [87.0707, 26.58571], [87.04691, 26.58685], [87.01559, 26.53228], [86.95912, 26.52076], [86.94543, 26.52076], [86.82898, 26.43919], [86.76797, 26.45892], [86.74025, 26.42386], [86.69124, 26.45169], [86.62686, 26.46891], [86.61313, 26.48658], [86.57073, 26.49825], [86.54258, 26.53819], [86.49726, 26.54218], [86.31564, 26.61925], [86.26235, 26.61886], [86.22513, 26.58863], [86.13596, 26.60651], [86.02729, 26.66756], [85.8492, 26.56667], [85.85126, 26.60866], [85.83126, 26.61134], [85.76907, 26.63076], [85.72315, 26.67471], [85.73483, 26.79613], [85.66239, 26.84822], [85.61621, 26.86721], [85.59461, 26.85161], [85.5757, 26.85955], [85.56471, 26.84133], [85.47752, 26.79292], [85.34302, 26.74954], [85.21159, 26.75933], [85.18046, 26.80519], [85.19291, 26.86909], [85.15883, 26.86966], [85.02635, 26.85381], [85.05592, 26.88991], [85.00536, 26.89523], [84.97186, 26.9149], [84.96687, 26.95599], [84.85754, 26.98984], [84.82913, 27.01989], [84.793, 26.9968], [84.64496, 27.04669], [84.69166, 27.21294], [84.62161, 27.33885], [84.29315, 27.39], [84.25735, 27.44941], [84.21376, 27.45218], [84.10791, 27.52399], [84.02229, 27.43836], [83.93306, 27.44939], [83.86182, 27.4241], [83.85595, 27.35797], [83.61288, 27.47013], [83.39495, 27.4798], [83.38872, 27.39276], [83.35136, 27.33885], [83.29999, 27.32778], [83.2673, 27.36235], [83.27197, 27.38309], [83.19413, 27.45632], [82.94938, 27.46036], [82.93261, 27.50328], [82.74119, 27.49838], [82.70378, 27.72122], [82.46405, 27.6716], [82.06554, 27.92222], [81.97214, 27.93322], [81.91223, 27.84995], [81.47867, 28.08303], [81.48179, 28.12148], [81.38683, 28.17638], [81.32923, 28.13521], [81.19847, 28.36284], [81.03471, 28.40054], [80.55142, 28.69182], [80.50575, 28.6706], [80.52443, 28.54897], [80.44504, 28.63098], [80.37188, 28.63371], [80.12125, 28.82346], [80.06957, 28.82763], [80.05743, 28.91479], [80.18085, 29.13649], [80.23178, 29.11626], [80.26602, 29.13938], [80.24112, 29.21414], [80.28626, 29.20327], [80.31428, 29.30784], [80.24322, 29.44299], [80.37939, 29.57098], [80.41858, 29.63581], [80.38428, 29.68513], [80.36803, 29.73865], [80.41554, 29.79451], [80.43458, 29.80466], [80.48997, 29.79566], [80.56247, 29.86661], [80.57179, 29.91422], [80.60226, 29.95732], [80.67076, 29.95732], [80.8778, 30.13384], [80.86673, 30.17321], [80.91143, 30.22173], [80.92547, 30.17193], [81.03953, 30.20059], [80.83343, 30.32023], [80.54504, 30.44936], [80.20721, 30.58541], [79.93255, 30.88288], [79.59884, 30.93943], [79.30694, 31.17357], [79.14016, 31.43403], [79.01931, 31.42817], [78.89344, 31.30481], [78.77898, 31.31209], [78.71032, 31.50197], [78.84516, 31.60631], [78.69933, 31.78723], [78.78036, 31.99478], [78.74404, 32.00384], [78.68754, 32.10256], [78.49609, 32.2762], [78.4645, 32.45367], [78.38897, 32.53938], [78.73916, 32.69438], [78.7831, 32.46873], [78.96713, 32.33655], [78.99322, 32.37948], [79.0979, 32.38051], [79.13174, 32.47766], [79.26768, 32.53277], [79.46562, 32.69668], [79.14016, 33.02545], [79.15252, 33.17156], [78.73636, 33.56521], [78.67599, 33.66445], [78.77349, 33.73871], [78.73367, 34.01121], [78.65657, 34.03195], [78.66225, 34.08858], [78.91769, 34.15452], [78.99802, 34.3027], [79.05364, 34.32482], [78.74465, 34.45174], [78.56475, 34.50835], [78.54964, 34.57283], [78.27781, 34.61484], [78.18435, 34.7998], [78.22692, 34.88771], [78.00033, 35.23954], [78.03466, 35.3785], [78.11664, 35.48022], [77.80532, 35.52058], [77.70232, 35.46244], [77.44277, 35.46132], [76.96624, 35.5932], [76.84539, 35.67356], [76.77323, 35.66062], [76.75475, 35.52617], [76.85088, 35.39754], [76.93465, 35.39866], [77.11796, 35.05419], [76.99251, 34.93349], [76.87193, 34.96906], [76.74514, 34.92488], [76.74377, 34.84039], [76.67648, 34.76371], [76.47186, 34.78965], [76.15463, 34.6429], [76.04614, 34.67566], [75.75438, 34.51827], [75.38009, 34.55021], [75.01479, 34.64629], [74.6663, 34.703], [74.58083, 34.77386], [74.31239, 34.79626], [74.12897, 34.70073], [73.96423, 34.68244], [73.93401, 34.63386], [73.93951, 34.57169], [73.89419, 34.54568], [73.88732, 34.48911], [73.74999, 34.3781], [73.74862, 34.34183], [73.8475, 34.32935], [73.90517, 34.35317], [73.98208, 34.2522], [73.90677, 34.10504], [73.88732, 34.05105], [73.91341, 34.01235], [74.21554, 34.03853], [74.25262, 34.01577], [74.26086, 33.92237], [74.14001, 33.83002], [74.05898, 33.82089], [74.00891, 33.75437], [73.96423, 33.73071], [73.98968, 33.66155], [73.97367, 33.64061], [74.03576, 33.56718], [74.10115, 33.56392], [74.18121, 33.4745], [74.17983, 33.3679], [74.08782, 33.26232], [74.01366, 33.25199], [74.02144, 33.18908], [74.15374, 33.13477], [74.17571, 33.07495], [74.31854, 33.02891], [74.34875, 32.97823], [74.31227, 32.92795], [74.41467, 32.90563], [74.45312, 32.77755], [74.6289, 32.75561], [74.64675, 32.82604], [74.7113, 32.84219], [74.65345, 32.71225], [74.69542, 32.66792], [74.64424, 32.60985], [74.65251, 32.56416], [74.67431, 32.56676], [74.68362, 32.49298], [74.84725, 32.49075], [74.97634, 32.45367], [75.03265, 32.49538], [75.28259, 32.36556], [75.38046, 32.26836], [75.25649, 32.10187], [75.00793, 32.03786], [74.9269, 32.0658], [74.86236, 32.04485], [74.79919, 31.95983], [74.58907, 31.87824], [74.47771, 31.72227], [74.57498, 31.60382], [74.61517, 31.55698], [74.59319, 31.50197], [74.64713, 31.45605], [74.59773, 31.4136], [74.53223, 31.30321], [74.51629, 31.13829], [74.56023, 31.08303], [74.60281, 31.10419], [74.60006, 31.13711], [74.6852, 31.12771], [74.67971, 31.05479], [74.5616, 31.04153], [73.88993, 30.36305], [73.95736, 30.28466], [73.97225, 30.19829], [73.80299, 30.06969], [73.58665, 30.01848], [73.3962, 29.94707], [73.28094, 29.56646], [73.05886, 29.1878], [73.01337, 29.16422], [72.94272, 29.02487], [72.40402, 28.78283], [72.29495, 28.66367], [72.20329, 28.3869], [71.9244, 28.11555], [71.89921, 27.96035], [70.79054, 27.68423], [70.60927, 28.02178], [70.37307, 28.01208], [70.12502, 27.8057], [70.03136, 27.56627], [69.58519, 27.18109], [69.50904, 26.74892], [69.88555, 26.56836], [70.05584, 26.60398], [70.17532, 26.55362], [70.17532, 26.24118], [70.08193, 26.08094], [70.0985, 25.93238], [70.2687, 25.71156], [70.37444, 25.67443], [70.53649, 25.68928], [70.60378, 25.71898], [70.67382, 25.68186], [70.66695, 25.39314], [70.89148, 25.15064], [70.94002, 24.92843], [71.09405, 24.69017], [70.97594, 24.60904], [71.00341, 24.46038], [71.12838, 24.42662], [71.04461, 24.34657], [70.94985, 24.3791], [70.85784, 24.30903], [70.88393, 24.27398], [70.71502, 24.23517], [70.57906, 24.27774], [70.5667, 24.43787], [70.11712, 24.30915], [70.03428, 24.172], [69.73335, 24.17007], [69.59579, 24.29777], [69.29778, 24.28712], [69.19341, 24.25646], [69.07806, 24.29777], [68.97781, 24.26021], [68.90914, 24.33156], [68.7416, 24.31904], [68.74643, 23.97027], [68.39339, 23.96838], [68.20763, 23.85849], [68.11329, 23.53945], [76.59015, 5.591], [79.50447, 8.91876], [79.42124, 9.80115], [80.48418, 10.20786], [89.08044, 21.41871]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q9143535\", nameEn: \"Akrotiri\", country: \"GB\", groups: [\"Q644636\", \"Q37362\", \"BOTS\", \"145\", \"142\", \"UN\"], level: \"subterritory\", driveSide: \"left\", callingCodes: [\"357\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[32.86014, 34.70585], [32.82717, 34.70622], [32.79433, 34.67883], [32.76136, 34.68318], [32.75515, 34.64985], [32.74412, 34.43926], [33.26744, 34.49942], [33.0138, 34.64424], [32.96968, 34.64046], [32.96718, 34.63446], [32.95891, 34.62919], [32.95323, 34.64075], [32.95471, 34.64528], [32.94976, 34.65204], [32.94796, 34.6587], [32.95325, 34.66462], [32.97079, 34.66112], [32.97736, 34.65277], [32.99014, 34.65518], [32.98668, 34.67268], [32.99135, 34.68061], [32.95539, 34.68471], [32.94683, 34.67907], [32.94379, 34.67111], [32.93693, 34.67027], [32.93449, 34.66241], [32.92807, 34.66736], [32.93043, 34.67091], [32.91398, 34.67343], [32.9068, 34.66102], [32.86167, 34.68734], [32.86014, 34.70585]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q9206745\", nameEn: \"Dhekelia\", country: \"GB\", groups: [\"Q644636\", \"Q37362\", \"BOTS\", \"145\", \"142\", \"UN\"], level: \"subterritory\", driveSide: \"left\", callingCodes: [\"357\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[33.70575, 34.97947], [33.83531, 34.73974], [33.98684, 34.76642], [33.90075, 34.96623], [33.86432, 34.97592], [33.84811, 34.97075], [33.83505, 34.98108], [33.85621, 34.98956], [33.85891, 35.001], [33.85216, 35.00579], [33.84045, 35.00616], [33.82875, 35.01685], [33.83055, 35.02865], [33.81524, 35.04192], [33.8012, 35.04786], [33.82051, 35.0667], [33.8355, 35.05777], [33.85261, 35.0574], [33.88367, 35.07877], [33.89485, 35.06873], [33.90247, 35.07686], [33.91299, 35.07579], [33.91789, 35.08688], [33.89853, 35.11377], [33.88737, 35.11408], [33.88943, 35.12007], [33.88561, 35.12449], [33.87224, 35.12293], [33.87622, 35.10457], [33.87097, 35.09389], [33.87479, 35.08881], [33.8541, 35.07201], [33.84168, 35.06823], [33.82067, 35.07826], [33.78581, 35.05104], [33.76106, 35.04253], [33.73824, 35.05321], [33.71482, 35.03722], [33.70209, 35.04882], [33.7161, 35.07279], [33.70861, 35.07644], [33.69095, 35.06237], [33.68474, 35.06602], [33.67742, 35.05963], [33.67678, 35.03866], [33.69938, 35.03123], [33.69731, 35.01754], [33.71514, 35.00294], [33.70639, 34.99303], [33.70575, 34.97947]], [[33.77312, 34.9976], [33.77553, 34.99518], [33.78516, 34.99582], [33.79191, 34.98914], [33.78917, 34.98854], [33.78571, 34.98951], [33.78318, 34.98699], [33.78149, 34.98854], [33.77843, 34.988], [33.7778, 34.98981], [33.76738, 34.99188], [33.76605, 34.99543], [33.75682, 34.99916], [33.75994, 35.00113], [33.77312, 34.9976]], [[33.74144, 35.01053], [33.7343, 35.01178], [33.73781, 35.02181], [33.74265, 35.02329], [33.74983, 35.02274], [33.7492, 35.01319], [33.74144, 35.01053]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q16390686\", nameEn: \"Peninsular Spain\", country: \"ES\", groups: [\"Q12837\", \"EU\", \"039\", \"150\", \"UN\"], callingCodes: [\"34\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[3.75438, 42.33445], [3.17156, 42.43545], [3.11379, 42.43646], [3.10027, 42.42621], [3.08167, 42.42748], [3.03734, 42.47363], [2.96518, 42.46692], [2.94283, 42.48174], [2.92107, 42.4573], [2.88413, 42.45938], [2.86983, 42.46843], [2.85675, 42.45444], [2.84335, 42.45724], [2.77464, 42.41046], [2.75497, 42.42578], [2.72056, 42.42298], [2.65311, 42.38771], [2.6747, 42.33974], [2.57934, 42.35808], [2.55516, 42.35351], [2.54382, 42.33406], [2.48457, 42.33933], [2.43508, 42.37568], [2.43299, 42.39423], [2.38504, 42.39977], [2.25551, 42.43757], [2.20578, 42.41633], [2.16599, 42.42314], [2.12789, 42.41291], [2.11621, 42.38393], [2.06241, 42.35906], [2.00488, 42.35399], [1.96482, 42.37787], [1.9574, 42.42401], [1.94084, 42.43039], [1.94061, 42.43333], [1.94292, 42.44316], [1.93663, 42.45439], [1.88853, 42.4501], [1.83037, 42.48395], [1.76335, 42.48863], [1.72515, 42.50338], [1.70571, 42.48867], [1.66826, 42.50779], [1.65674, 42.47125], [1.58933, 42.46275], [1.57953, 42.44957], [1.55937, 42.45808], [1.55073, 42.43299], [1.5127, 42.42959], [1.44529, 42.43724], [1.43838, 42.47848], [1.41648, 42.48315], [1.46661, 42.50949], [1.44759, 42.54431], [1.41245, 42.53539], [1.4234, 42.55959], [1.44529, 42.56722], [1.42512, 42.58292], [1.44197, 42.60217], [1.35562, 42.71944], [1.15928, 42.71407], [1.0804, 42.78569], [0.98292, 42.78754], [0.96166, 42.80629], [0.93089, 42.79154], [0.711, 42.86372], [0.66121, 42.84021], [0.65421, 42.75872], [0.67873, 42.69458], [0.40214, 42.69779], [0.36251, 42.72282], [0.29407, 42.67431], [0.25336, 42.7174], [0.17569, 42.73424], [-0.02468, 42.68513], [-0.10519, 42.72761], [-0.16141, 42.79535], [-0.17939, 42.78974], [-0.3122, 42.84788], [-0.38833, 42.80132], [-0.41319, 42.80776], [-0.44334, 42.79939], [-0.50863, 42.82713], [-0.55497, 42.77846], [-0.67637, 42.88303], [-0.69837, 42.87945], [-0.72608, 42.89318], [-0.73422, 42.91228], [-0.72037, 42.92541], [-0.75478, 42.96916], [-0.81652, 42.95166], [-0.97133, 42.96239], [-1.00963, 42.99279], [-1.10333, 43.0059], [-1.22881, 43.05534], [-1.25244, 43.04164], [-1.30531, 43.06859], [-1.30052, 43.09581], [-1.27118, 43.11961], [-1.32209, 43.1127], [-1.34419, 43.09665], [-1.35272, 43.02658], [-1.44067, 43.047], [-1.47555, 43.08372], [-1.41562, 43.12815], [-1.3758, 43.24511], [-1.40942, 43.27272], [-1.45289, 43.27049], [-1.50992, 43.29481], [-1.55963, 43.28828], [-1.57674, 43.25269], [-1.61341, 43.25269], [-1.63052, 43.28591], [-1.62481, 43.30726], [-1.69407, 43.31378], [-1.73074, 43.29481], [-1.7397, 43.32979], [-1.75079, 43.3317], [-1.75334, 43.34107], [-1.77068, 43.34396], [-1.78714, 43.35476], [-1.78332, 43.36399], [-1.79319, 43.37497], [-1.77289, 43.38957], [-1.81005, 43.59738], [-10.14298, 44.17365], [-11.19304, 41.83075], [-8.87157, 41.86488], [-8.81794, 41.90375], [-8.75712, 41.92833], [-8.74606, 41.9469], [-8.7478, 41.96282], [-8.69071, 41.98862], [-8.6681, 41.99703], [-8.65832, 42.02972], [-8.64626, 42.03668], [-8.63791, 42.04691], [-8.59493, 42.05708], [-8.58086, 42.05147], [-8.54563, 42.0537], [-8.5252, 42.06264], [-8.52837, 42.07658], [-8.48185, 42.0811], [-8.44123, 42.08218], [-8.42512, 42.07199], [-8.40143, 42.08052], [-8.38323, 42.07683], [-8.36353, 42.09065], [-8.33912, 42.08358], [-8.32161, 42.10218], [-8.29809, 42.106], [-8.2732, 42.12396], [-8.24681, 42.13993], [-8.22406, 42.1328], [-8.1986, 42.15402], [-8.18947, 42.13853], [-8.19406, 42.12141], [-8.18178, 42.06436], [-8.11729, 42.08537], [-8.08847, 42.05767], [-8.08796, 42.01398], [-8.16232, 41.9828], [-8.2185, 41.91237], [-8.19551, 41.87459], [-8.16944, 41.87944], [-8.16455, 41.81753], [-8.0961, 41.81024], [-8.01136, 41.83453], [-7.9804, 41.87337], [-7.92336, 41.8758], [-7.90707, 41.92432], [-7.88751, 41.92553], [-7.88055, 41.84571], [-7.84188, 41.88065], [-7.69848, 41.90977], [-7.65774, 41.88308], [-7.58603, 41.87944], [-7.62188, 41.83089], [-7.52737, 41.83939], [-7.49803, 41.87095], [-7.45566, 41.86488], [-7.44759, 41.84451], [-7.42854, 41.83262], [-7.42864, 41.80589], [-7.37092, 41.85031], [-7.32366, 41.8406], [-7.18677, 41.88793], [-7.18549, 41.97515], [-7.14115, 41.98855], [-7.08574, 41.97401], [-7.07596, 41.94977], [-7.01078, 41.94977], [-6.98144, 41.9728], [-6.95537, 41.96553], [-6.94396, 41.94403], [-6.82174, 41.94493], [-6.81196, 41.99097], [-6.76959, 41.98734], [-6.75004, 41.94129], [-6.61967, 41.94008], [-6.58544, 41.96674], [-6.5447, 41.94371], [-6.56752, 41.88429], [-6.51374, 41.8758], [-6.56426, 41.74219], [-6.54633, 41.68623], [-6.49907, 41.65823], [-6.44204, 41.68258], [-6.29863, 41.66432], [-6.19128, 41.57638], [-6.26777, 41.48796], [-6.3306, 41.37677], [-6.38553, 41.38655], [-6.38551, 41.35274], [-6.55937, 41.24417], [-6.65046, 41.24725], [-6.68286, 41.21641], [-6.69711, 41.1858], [-6.77319, 41.13049], [-6.75655, 41.10187], [-6.79241, 41.05397], [-6.80942, 41.03629], [-6.84781, 41.02692], [-6.88843, 41.03027], [-6.913, 41.03922], [-6.9357, 41.02888], [-6.8527, 40.93958], [-6.84292, 40.89771], [-6.80707, 40.88047], [-6.79892, 40.84842], [-6.82337, 40.84472], [-6.82826, 40.74603], [-6.79567, 40.65955], [-6.84292, 40.56801], [-6.80218, 40.55067], [-6.7973, 40.51723], [-6.84944, 40.46394], [-6.84618, 40.42177], [-6.78426, 40.36468], [-6.80218, 40.33239], [-6.86085, 40.2976], [-6.86085, 40.26776], [-7.00426, 40.23169], [-7.02544, 40.18564], [-7.00589, 40.12087], [-6.94233, 40.10716], [-6.86737, 40.01986], [-6.91463, 39.86618], [-6.97492, 39.81488], [-7.01613, 39.66877], [-7.24707, 39.66576], [-7.33507, 39.64569], [-7.54121, 39.66717], [-7.49477, 39.58794], [-7.2927, 39.45847], [-7.3149, 39.34857], [-7.23403, 39.27579], [-7.23566, 39.20132], [-7.12811, 39.17101], [-7.14929, 39.11287], [-7.10692, 39.10275], [-7.04011, 39.11919], [-6.97004, 39.07619], [-6.95211, 39.0243], [-7.051, 38.907], [-7.03848, 38.87221], [-7.26174, 38.72107], [-7.265, 38.61674], [-7.32529, 38.44336], [-7.15581, 38.27597], [-7.09389, 38.17227], [-6.93418, 38.21454], [-7.00375, 38.01914], [-7.05966, 38.01966], [-7.10366, 38.04404], [-7.12648, 38.00296], [-7.24544, 37.98884], [-7.27314, 37.90145], [-7.33441, 37.81193], [-7.41981, 37.75729], [-7.51759, 37.56119], [-7.46878, 37.47127], [-7.43974, 37.38913], [-7.43227, 37.25152], [-7.41854, 37.23813], [-7.41133, 37.20314], [-7.39769, 37.16868], [-7.37282, 36.96896], [-7.2725, 35.73269], [-5.10878, 36.05227], [-2.27707, 35.35051], [3.75438, 42.33445]], [[-5.27801, 36.14942], [-5.34064, 36.03744], [-5.40526, 36.15488], [-5.34536, 36.15501], [-5.33822, 36.15272], [-5.27801, 36.14942]]], [[[1.99838, 42.44682], [2.01564, 42.45171], [1.99216, 42.46208], [1.98579, 42.47486], [1.99766, 42.4858], [1.98916, 42.49351], [1.98022, 42.49569], [1.97697, 42.48568], [1.97227, 42.48487], [1.97003, 42.48081], [1.96215, 42.47854], [1.95606, 42.45785], [1.96125, 42.45364], [1.98378, 42.44697], [1.99838, 42.44682]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q98059339\", nameEn: \"Mainland Norway\", country: \"NO\", groups: [\"154\", \"150\", \"UN\"], callingCodes: [\"47\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[10.40861, 58.38489], [10.64958, 58.89391], [11.08911, 58.98745], [11.15367, 59.07862], [11.34459, 59.11672], [11.4601, 58.99022], [11.45199, 58.89604], [11.65732, 58.90177], [11.8213, 59.24985], [11.69297, 59.59442], [11.92112, 59.69531], [11.87121, 59.86039], [12.15641, 59.8926], [12.36317, 59.99259], [12.52003, 60.13846], [12.59133, 60.50559], [12.2277, 61.02442], [12.69115, 61.06584], [12.86939, 61.35427], [12.57707, 61.56547], [12.40595, 61.57226], [12.14746, 61.7147], [12.29187, 62.25699], [12.07085, 62.6297], [12.19919, 63.00104], [11.98529, 63.27487], [12.19919, 63.47935], [12.14928, 63.59373], [12.74105, 64.02171], [13.23411, 64.09087], [13.98222, 64.00953], [14.16051, 64.18725], [14.11117, 64.46674], [13.64276, 64.58402], [14.50926, 65.31786], [14.53778, 66.12399], [15.05113, 66.15572], [15.49318, 66.28509], [15.37197, 66.48217], [16.35589, 67.06419], [16.39154, 67.21653], [16.09922, 67.4364], [16.12774, 67.52106], [16.38441, 67.52923], [16.7409, 67.91037], [17.30416, 68.11591], [17.90787, 67.96537], [18.13836, 68.20874], [18.1241, 68.53721], [18.39503, 68.58672], [18.63032, 68.50849], [18.97255, 68.52416], [19.93508, 68.35911], [20.22027, 68.48759], [19.95647, 68.55546], [20.22027, 68.67246], [20.33435, 68.80174], [20.28444, 68.93283], [20.0695, 69.04469], [20.55258, 69.06069], [20.72171, 69.11874], [21.05775, 69.0356], [21.11099, 69.10291], [20.98641, 69.18809], [21.00732, 69.22755], [21.27827, 69.31281], [21.63833, 69.27485], [22.27276, 68.89514], [22.38367, 68.71561], [22.53321, 68.74393], [23.13064, 68.64684], [23.68017, 68.70276], [23.781, 68.84514], [24.02299, 68.81601], [24.18432, 68.73936], [24.74898, 68.65143], [24.90023, 68.55579], [24.93048, 68.61102], [25.10189, 68.63307], [25.12206, 68.78684], [25.42455, 68.90328], [25.61613, 68.89602], [25.75729, 68.99383], [25.69679, 69.27039], [25.96904, 69.68397], [26.40261, 69.91377], [26.64461, 69.96565], [27.05802, 69.92069], [27.57226, 70.06215], [27.95542, 70.0965], [27.97558, 69.99671], [28.32849, 69.88605], [28.36883, 69.81658], [29.12697, 69.69193], [29.31664, 69.47994], [28.8629, 69.22395], [28.81248, 69.11997], [28.91738, 69.04774], [29.0444, 69.0119], [29.26623, 69.13794], [29.27631, 69.2811], [29.97205, 69.41623], [30.16363, 69.65244], [30.52662, 69.54699], [30.95011, 69.54699], [30.84095, 69.80584], [31.59909, 70.16571], [32.07813, 72.01005], [-11.60274, 67.73467], [7.28637, 57.35913], [10.40861, 58.38489]]]] } },\n  { type: \"Feature\", properties: { wikidata: \"Q98543636\", nameEn: \"Mainland Ecuador\", country: \"EC\", groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"593\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-84.52388, -3.36941], [-80.30602, -3.39149], [-80.20647, -3.431], [-80.24123, -3.46124], [-80.24586, -3.48677], [-80.23651, -3.48652], [-80.22629, -3.501], [-80.20535, -3.51667], [-80.21642, -3.5888], [-80.19848, -3.59249], [-80.18741, -3.63994], [-80.19926, -3.68894], [-80.13232, -3.90317], [-80.46386, -4.01342], [-80.4822, -4.05477], [-80.45023, -4.20938], [-80.32114, -4.21323], [-80.46386, -4.41516], [-80.39256, -4.48269], [-80.13945, -4.29786], [-79.79722, -4.47558], [-79.59402, -4.46848], [-79.26248, -4.95167], [-79.1162, -4.97774], [-79.01659, -5.01481], [-78.85149, -4.66795], [-78.68394, -4.60754], [-78.34362, -3.38633], [-78.24589, -3.39907], [-78.22642, -3.51113], [-78.14324, -3.47653], [-78.19369, -3.36431], [-77.94147, -3.05454], [-76.6324, -2.58397], [-76.05203, -2.12179], [-75.57429, -1.55961], [-75.3872, -0.9374], [-75.22862, -0.95588], [-75.22862, -0.60048], [-75.53615, -0.19213], [-75.60169, -0.18708], [-75.61997, -0.10012], [-75.40192, -0.17196], [-75.25764, -0.11943], [-75.82927, 0.09578], [-76.23441, 0.42294], [-76.41215, 0.38228], [-76.4094, 0.24015], [-76.89177, 0.24736], [-77.52001, 0.40782], [-77.49984, 0.64476], [-77.67815, 0.73863], [-77.66416, 0.81604], [-77.68613, 0.83029], [-77.7148, 0.85003], [-77.85677, 0.80197], [-78.42749, 1.15389], [-78.87137, 1.47457], [-82.12561, 4.00341], [-84.52388, -3.36941]]]] } },\n  { type: \"Feature\", properties: { m49: \"001\", wikidata: \"Q2\", nameEn: \"World\", aliases: [\"Earth\", \"Planet\"], level: \"world\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"002\", wikidata: \"Q15\", nameEn: \"Africa\", level: \"region\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"003\", wikidata: \"Q49\", nameEn: \"North America\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"005\", wikidata: \"Q18\", nameEn: \"South America\", level: \"intermediateRegion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"009\", wikidata: \"Q538\", nameEn: \"Oceania\", level: \"region\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"011\", wikidata: \"Q4412\", nameEn: \"Western Africa\", level: \"intermediateRegion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"013\", wikidata: \"Q27611\", nameEn: \"Central America\", level: \"intermediateRegion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"014\", wikidata: \"Q27407\", nameEn: \"Eastern Africa\", level: \"intermediateRegion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"015\", wikidata: \"Q27381\", nameEn: \"Northern Africa\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"017\", wikidata: \"Q27433\", nameEn: \"Middle Africa\", level: \"intermediateRegion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"018\", wikidata: \"Q27394\", nameEn: \"Southern Africa\", level: \"intermediateRegion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"019\", wikidata: \"Q828\", nameEn: \"Americas\", level: \"region\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"021\", wikidata: \"Q2017699\", nameEn: \"Northern America\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"029\", wikidata: \"Q664609\", nameEn: \"Caribbean\", level: \"intermediateRegion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"030\", wikidata: \"Q27231\", nameEn: \"Eastern Asia\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"034\", wikidata: \"Q771405\", nameEn: \"Southern Asia\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"035\", wikidata: \"Q11708\", nameEn: \"South-eastern Asia\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"039\", wikidata: \"Q27449\", nameEn: \"Southern Europe\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"053\", wikidata: \"Q45256\", nameEn: \"Australia and New Zealand\", aliases: [\"Australasia\"], level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"054\", wikidata: \"Q37394\", nameEn: \"Melanesia\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"057\", wikidata: \"Q3359409\", nameEn: \"Micronesia\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"061\", wikidata: \"Q35942\", nameEn: \"Polynesia\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"142\", wikidata: \"Q48\", nameEn: \"Asia\", level: \"region\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"143\", wikidata: \"Q27275\", nameEn: \"Central Asia\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"145\", wikidata: \"Q27293\", nameEn: \"Western Asia\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"150\", wikidata: \"Q46\", nameEn: \"Europe\", level: \"region\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"151\", wikidata: \"Q27468\", nameEn: \"Eastern Europe\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"154\", wikidata: \"Q27479\", nameEn: \"Northern Europe\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"155\", wikidata: \"Q27496\", nameEn: \"Western Europe\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"202\", wikidata: \"Q132959\", nameEn: \"Sub-Saharan Africa\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"419\", wikidata: \"Q72829598\", nameEn: \"Latin America and the Caribbean\", level: \"subregion\" }, geometry: null },\n  { type: \"Feature\", properties: { m49: \"680\", wikidata: \"Q3405693\", nameEn: \"Sark\", country: \"GB\", groups: [\"GG\", \"830\", \"Q185086\", \"154\", \"150\", \"UN\"], level: \"subterritory\", driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"44 01481\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-2.36485, 49.48223], [-2.65349, 49.15373], [-2.09454, 49.46288], [-2.36485, 49.48223]]]] } },\n  { type: \"Feature\", properties: { m49: \"830\", wikidata: \"Q42314\", nameEn: \"Channel Islands\", level: \"intermediateRegion\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"AC\", iso1A3: \"ASC\", wikidata: \"Q46197\", nameEn: \"Ascension Island\", aliases: [\"SH-AC\"], country: \"GB\", groups: [\"SH\", \"BOTS\", \"011\", \"202\", \"002\", \"UN\"], isoStatus: \"excRes\", driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"247\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-14.82771, -8.70814], [-13.33271, -8.07391], [-14.91926, -6.63386], [-14.82771, -8.70814]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AD\", iso1A3: \"AND\", iso1N3: \"020\", wikidata: \"Q228\", nameEn: \"Andorra\", groups: [\"Q12837\", \"039\", \"150\", \"UN\"], callingCodes: [\"376\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[1.72515, 42.50338], [1.73683, 42.55492], [1.7858, 42.57698], [1.72588, 42.59098], [1.73452, 42.61515], [1.68267, 42.62533], [1.6625, 42.61982], [1.63485, 42.62957], [1.60085, 42.62703], [1.55418, 42.65669], [1.50867, 42.64483], [1.48043, 42.65203], [1.46718, 42.63296], [1.47986, 42.61346], [1.44197, 42.60217], [1.42512, 42.58292], [1.44529, 42.56722], [1.4234, 42.55959], [1.41245, 42.53539], [1.44759, 42.54431], [1.46661, 42.50949], [1.41648, 42.48315], [1.43838, 42.47848], [1.44529, 42.43724], [1.5127, 42.42959], [1.55073, 42.43299], [1.55937, 42.45808], [1.57953, 42.44957], [1.58933, 42.46275], [1.65674, 42.47125], [1.66826, 42.50779], [1.70571, 42.48867], [1.72515, 42.50338]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AE\", iso1A3: \"ARE\", iso1N3: \"784\", wikidata: \"Q878\", nameEn: \"United Arab Emirates\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"971\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[56.26534, 25.62825], [56.25341, 25.61443], [56.26636, 25.60643], [56.25365, 25.60211], [56.20473, 25.61119], [56.18363, 25.65508], [56.14826, 25.66351], [56.13579, 25.73524], [56.17416, 25.77239], [56.13963, 25.82765], [56.19334, 25.9795], [56.15498, 26.06828], [56.08666, 26.05038], [55.81777, 26.18798], [55.14145, 25.62624], [53.97892, 24.64436], [52.82259, 25.51697], [52.35509, 25.00368], [52.02277, 24.75635], [51.83108, 24.71675], [51.58834, 24.66608], [51.41644, 24.39615], [51.58871, 24.27256], [51.59617, 24.12041], [52.56622, 22.94341], [55.13599, 22.63334], [55.2137, 22.71065], [55.22634, 23.10378], [55.57358, 23.669], [55.48677, 23.94946], [55.73301, 24.05994], [55.8308, 24.01633], [56.01799, 24.07426], [55.95472, 24.2172], [55.83367, 24.20193], [55.77658, 24.23476], [55.76558, 24.23227], [55.75257, 24.23466], [55.75382, 24.2466], [55.75939, 24.26114], [55.76781, 24.26209], [55.79145, 24.27914], [55.80747, 24.31069], [55.83395, 24.32776], [55.83271, 24.41521], [55.76461, 24.5287], [55.83271, 24.68567], [55.83408, 24.77858], [55.81348, 24.80102], [55.81116, 24.9116], [55.85094, 24.96858], [55.90849, 24.96771], [55.96316, 25.00857], [56.05715, 24.95727], [56.05106, 24.87461], [55.97467, 24.89639], [55.97836, 24.87673], [56.03535, 24.81161], [56.06128, 24.74457], [56.13684, 24.73699], [56.20062, 24.78565], [56.20568, 24.85063], [56.30269, 24.88334], [56.34873, 24.93205], [56.3227, 24.97284], [56.86325, 25.03856], [56.82555, 25.7713], [56.26534, 25.62825]], [[56.26062, 25.33108], [56.3005, 25.31815], [56.3111, 25.30107], [56.35172, 25.30681], [56.34438, 25.26653], [56.27628, 25.23404], [56.24341, 25.22867], [56.20872, 25.24104], [56.20838, 25.25668], [56.24465, 25.27505], [56.25008, 25.28843], [56.23362, 25.31253], [56.26062, 25.33108]]], [[[56.28423, 25.26344], [56.29379, 25.2754], [56.28102, 25.28486], [56.2716, 25.27916], [56.27086, 25.26128], [56.28423, 25.26344]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AF\", iso1A3: \"AFG\", iso1N3: \"004\", wikidata: \"Q889\", nameEn: \"Afghanistan\", groups: [\"034\", \"142\", \"UN\"], callingCodes: [\"93\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[70.61526, 38.34774], [70.60407, 38.28046], [70.54673, 38.24541], [70.4898, 38.12546], [70.17206, 37.93276], [70.1863, 37.84296], [70.27694, 37.81258], [70.28243, 37.66706], [70.15015, 37.52519], [69.95971, 37.5659], [69.93362, 37.61378], [69.84435, 37.60616], [69.80041, 37.5746], [69.51888, 37.5844], [69.44954, 37.4869], [69.36645, 37.40462], [69.45022, 37.23315], [69.39529, 37.16752], [69.25152, 37.09426], [69.03274, 37.25174], [68.96407, 37.32603], [68.88168, 37.33368], [68.91189, 37.26704], [68.80889, 37.32494], [68.81438, 37.23862], [68.6798, 37.27906], [68.61851, 37.19815], [68.41888, 37.13906], [68.41201, 37.10402], [68.29253, 37.10621], [68.27605, 37.00977], [68.18542, 37.02074], [68.02194, 36.91923], [67.87917, 37.0591], [67.7803, 37.08978], [67.78329, 37.1834], [67.51868, 37.26102], [67.2581, 37.17216], [67.2224, 37.24545], [67.13039, 37.27168], [67.08232, 37.35469], [66.95598, 37.40162], [66.64699, 37.32958], [66.55743, 37.35409], [66.30993, 37.32409], [65.72274, 37.55438], [65.64137, 37.45061], [65.64263, 37.34388], [65.51778, 37.23881], [64.97945, 37.21913], [64.61141, 36.6351], [64.62514, 36.44311], [64.57295, 36.34362], [64.43288, 36.24401], [64.05385, 36.10433], [63.98519, 36.03773], [63.56496, 35.95106], [63.53475, 35.90881], [63.29579, 35.85985], [63.12276, 35.86208], [63.10318, 35.81782], [63.23262, 35.67487], [63.10079, 35.63024], [63.12276, 35.53196], [63.0898, 35.43131], [62.90853, 35.37086], [62.74098, 35.25432], [62.62288, 35.22067], [62.48006, 35.28796], [62.29878, 35.13312], [62.29191, 35.25964], [62.15871, 35.33278], [62.05709, 35.43803], [61.97743, 35.4604], [61.77693, 35.41341], [61.58742, 35.43803], [61.27371, 35.61482], [61.18187, 35.30249], [61.0991, 35.27845], [61.12831, 35.09938], [61.06926, 34.82139], [61.00197, 34.70631], [60.99922, 34.63064], [60.72316, 34.52857], [60.91321, 34.30411], [60.66502, 34.31539], [60.50209, 34.13992], [60.5838, 33.80793], [60.5485, 33.73422], [60.57762, 33.59772], [60.69573, 33.56054], [60.91133, 33.55596], [60.88908, 33.50219], [60.56485, 33.12944], [60.86191, 32.22565], [60.84541, 31.49561], [61.70929, 31.37391], [61.80569, 31.16167], [61.80957, 31.12576], [61.83257, 31.0452], [61.8335, 30.97669], [61.78268, 30.92724], [61.80829, 30.84224], [60.87231, 29.86514], [62.47751, 29.40782], [63.5876, 29.50456], [64.12966, 29.39157], [64.19796, 29.50407], [64.62116, 29.58903], [65.04005, 29.53957], [66.24175, 29.85181], [66.36042, 29.9583], [66.23609, 30.06321], [66.34869, 30.404], [66.28413, 30.57001], [66.39194, 30.9408], [66.42645, 30.95309], [66.58175, 30.97532], [66.68166, 31.07597], [66.72561, 31.20526], [66.83273, 31.26867], [67.04147, 31.31561], [67.03323, 31.24519], [67.29964, 31.19586], [67.78854, 31.33203], [67.7748, 31.4188], [67.62374, 31.40473], [67.58323, 31.52772], [67.72056, 31.52304], [67.86887, 31.63536], [68.00071, 31.6564], [68.1655, 31.82691], [68.25614, 31.80357], [68.27605, 31.75863], [68.44222, 31.76446], [68.57475, 31.83158], [68.6956, 31.75687], [68.79997, 31.61665], [68.91078, 31.59687], [68.95995, 31.64822], [69.00939, 31.62249], [69.11514, 31.70782], [69.20577, 31.85957], [69.3225, 31.93186], [69.27032, 32.14141], [69.27932, 32.29119], [69.23599, 32.45946], [69.2868, 32.53938], [69.38155, 32.56601], [69.44747, 32.6678], [69.43649, 32.7302], [69.38018, 32.76601], [69.47082, 32.85834], [69.5436, 32.8768], [69.49854, 32.88843], [69.49004, 33.01509], [69.57656, 33.09911], [69.71526, 33.09911], [69.79766, 33.13247], [69.85259, 33.09451], [70.02563, 33.14282], [70.07369, 33.22557], [70.13686, 33.21064], [70.32775, 33.34496], [70.17062, 33.53535], [70.20141, 33.64387], [70.14785, 33.6553], [70.14236, 33.71701], [70.00503, 33.73528], [69.85671, 33.93719], [69.87307, 33.9689], [69.90203, 34.04194], [70.54336, 33.9463], [70.88119, 33.97933], [71.07345, 34.06242], [71.06933, 34.10564], [71.09307, 34.11961], [71.09453, 34.13524], [71.13078, 34.16503], [71.12815, 34.26619], [71.17662, 34.36769], [71.02401, 34.44835], [71.0089, 34.54568], [71.11602, 34.63047], [71.08718, 34.69034], [71.28356, 34.80882], [71.29472, 34.87728], [71.50329, 34.97328], [71.49917, 35.00478], [71.55273, 35.02615], [71.52938, 35.09023], [71.67495, 35.21262], [71.5541, 35.28776], [71.54294, 35.31037], [71.65435, 35.4479], [71.49917, 35.6267], [71.55273, 35.71483], [71.37969, 35.95865], [71.19505, 36.04134], [71.60491, 36.39429], [71.80267, 36.49924], [72.18135, 36.71838], [72.6323, 36.84601], [73.82685, 36.91421], [74.04856, 36.82648], [74.43389, 37.00977], [74.53739, 36.96224], [74.56453, 37.03023], [74.49981, 37.24518], [74.80605, 37.21565], [74.88887, 37.23275], [74.8294, 37.3435], [74.68383, 37.3948], [74.56161, 37.37734], [74.41055, 37.3948], [74.23339, 37.41116], [74.20308, 37.34208], [73.8564, 37.26158], [73.82552, 37.22659], [73.64974, 37.23643], [73.61129, 37.27469], [73.76647, 37.33913], [73.77197, 37.4417], [73.29633, 37.46495], [73.06884, 37.31729], [72.79693, 37.22222], [72.66381, 37.02014], [72.54095, 37.00007], [72.31676, 36.98115], [71.83229, 36.68084], [71.67083, 36.67346], [71.57195, 36.74943], [71.51502, 36.89128], [71.48481, 36.93218], [71.46923, 36.99925], [71.45578, 37.03094], [71.43097, 37.05855], [71.44127, 37.11856], [71.4494, 37.18137], [71.4555, 37.21418], [71.47386, 37.2269], [71.48339, 37.23937], [71.4824, 37.24921], [71.48536, 37.26017], [71.50674, 37.31502], [71.49821, 37.31975], [71.4862, 37.33405], [71.47685, 37.40281], [71.49612, 37.4279], [71.5256, 37.47971], [71.50616, 37.50733], [71.49693, 37.53527], [71.5065, 37.60912], [71.51972, 37.61945], [71.54186, 37.69691], [71.55234, 37.73209], [71.53053, 37.76534], [71.54324, 37.77104], [71.55752, 37.78677], [71.59255, 37.79956], [71.58843, 37.92425], [71.51565, 37.95349], [71.32871, 37.88564], [71.296, 37.93403], [71.2809, 37.91995], [71.24969, 37.93031], [71.27278, 37.96496], [71.27622, 37.99946], [71.28922, 38.01272], [71.29878, 38.04429], [71.36444, 38.15358], [71.37803, 38.25641], [71.33869, 38.27335], [71.33114, 38.30339], [71.21291, 38.32797], [71.1451, 38.40106], [71.10957, 38.40671], [71.10592, 38.42077], [71.09542, 38.42517], [71.0556, 38.40176], [71.03545, 38.44779], [70.98693, 38.48862], [70.92728, 38.43021], [70.88719, 38.46826], [70.84376, 38.44688], [70.82538, 38.45394], [70.81697, 38.44507], [70.80521, 38.44447], [70.79766, 38.44944], [70.78702, 38.45031], [70.78581, 38.45502], [70.77132, 38.45548], [70.75455, 38.4252], [70.72485, 38.4131], [70.69807, 38.41861], [70.67438, 38.40597], [70.6761, 38.39144], [70.69189, 38.37031], [70.64966, 38.34999], [70.61526, 38.34774]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AG\", iso1A3: \"ATG\", iso1N3: \"028\", wikidata: \"Q781\", nameEn: \"Antigua and Barbuda\", groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", callingCodes: [\"1 268\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-61.66959, 18.6782], [-62.58307, 16.68909], [-62.1023, 16.97277], [-61.23098, 16.62484], [-61.66959, 18.6782]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AI\", iso1A3: \"AIA\", iso1N3: \"660\", wikidata: \"Q25228\", nameEn: \"Anguilla\", country: \"GB\", groups: [\"BOTS\", \"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", callingCodes: [\"1 264\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-63.79029, 19.11219], [-63.35989, 18.06012], [-62.62718, 18.26185], [-63.79029, 19.11219]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AL\", iso1A3: \"ALB\", iso1N3: \"008\", wikidata: \"Q222\", nameEn: \"Albania\", groups: [\"039\", \"150\", \"UN\"], callingCodes: [\"355\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[20.07761, 42.55582], [20.01834, 42.54622], [20.00842, 42.5109], [19.9324, 42.51699], [19.82333, 42.46581], [19.76549, 42.50237], [19.74731, 42.57422], [19.77375, 42.58517], [19.73244, 42.66299], [19.65972, 42.62774], [19.4836, 42.40831], [19.42352, 42.36546], [19.42, 42.33019], [19.28623, 42.17745], [19.40687, 42.10024], [19.37548, 42.06835], [19.36867, 42.02564], [19.37691, 41.96977], [19.34601, 41.95675], [19.33812, 41.90669], [19.37451, 41.8842], [19.37597, 41.84849], [19.26406, 41.74971], [19.0384, 40.35325], [19.95905, 39.82857], [19.97622, 39.78684], [19.92466, 39.69533], [19.98042, 39.6504], [20.00957, 39.69227], [20.05189, 39.69112], [20.12956, 39.65805], [20.15988, 39.652], [20.22376, 39.64532], [20.22707, 39.67459], [20.27412, 39.69884], [20.31961, 39.72799], [20.29152, 39.80421], [20.30804, 39.81563], [20.38572, 39.78516], [20.41475, 39.81437], [20.41546, 39.82832], [20.31135, 39.99438], [20.37911, 39.99058], [20.42373, 40.06777], [20.48487, 40.06271], [20.51297, 40.08168], [20.55593, 40.06524], [20.61081, 40.07866], [20.62566, 40.0897], [20.67162, 40.09433], [20.71789, 40.27739], [20.78234, 40.35803], [20.7906, 40.42726], [20.83688, 40.47882], [20.94925, 40.46625], [20.96908, 40.51526], [21.03932, 40.56299], [21.05833, 40.66586], [20.98134, 40.76046], [20.95752, 40.76982], [20.98396, 40.79109], [20.97887, 40.85475], [20.97693, 40.90103], [20.94305, 40.92399], [20.83671, 40.92752], [20.81567, 40.89662], [20.73504, 40.9081], [20.71634, 40.91781], [20.65558, 41.08009], [20.63454, 41.0889], [20.59832, 41.09066], [20.58546, 41.11179], [20.59715, 41.13644], [20.51068, 41.2323], [20.49432, 41.33679], [20.52119, 41.34381], [20.55976, 41.4087], [20.51301, 41.442], [20.49039, 41.49277], [20.45331, 41.51436], [20.45809, 41.5549], [20.52103, 41.56473], [20.55508, 41.58113], [20.51769, 41.65975], [20.52937, 41.69292], [20.51301, 41.72433], [20.53405, 41.78099], [20.57144, 41.7897], [20.55976, 41.87068], [20.59524, 41.8818], [20.57946, 41.91593], [20.63069, 41.94913], [20.59434, 42.03879], [20.55633, 42.08173], [20.56955, 42.12097], [20.48857, 42.25444], [20.3819, 42.3029], [20.34479, 42.32656], [20.24399, 42.32168], [20.21797, 42.41237], [20.17127, 42.50469], [20.07761, 42.55582]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AM\", iso1A3: \"ARM\", iso1N3: \"051\", wikidata: \"Q399\", nameEn: \"Armenia\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"374\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[45.0133, 41.29747], [44.93493, 41.25685], [44.81437, 41.30371], [44.80053, 41.25949], [44.81749, 41.23488], [44.84358, 41.23088], [44.89911, 41.21366], [44.87887, 41.20195], [44.82084, 41.21513], [44.72814, 41.20338], [44.61462, 41.24018], [44.59322, 41.1933], [44.46791, 41.18204], [44.34417, 41.2382], [44.34337, 41.20312], [44.32139, 41.2079], [44.18148, 41.24644], [44.16591, 41.19141], [43.84835, 41.16329], [43.74717, 41.1117], [43.67712, 41.13398], [43.4717, 41.12611], [43.44984, 41.0988], [43.47319, 41.02251], [43.58683, 40.98961], [43.67712, 40.93084], [43.67712, 40.84846], [43.74872, 40.7365], [43.7425, 40.66805], [43.63664, 40.54159], [43.54791, 40.47413], [43.60862, 40.43267], [43.59928, 40.34019], [43.71136, 40.16673], [43.65221, 40.14889], [43.65688, 40.11199], [43.92307, 40.01787], [44.1057, 40.03555], [44.1778, 40.02845], [44.26973, 40.04866], [44.46635, 39.97733], [44.61845, 39.8281], [44.75779, 39.7148], [44.88354, 39.74432], [44.92869, 39.72157], [45.06604, 39.79277], [45.18554, 39.67846], [45.17464, 39.58614], [45.21784, 39.58074], [45.23535, 39.61373], [45.30385, 39.61373], [45.29606, 39.57654], [45.46992, 39.49888], [45.70547, 39.60174], [45.80804, 39.56716], [45.83, 39.46487], [45.79225, 39.3695], [45.99774, 39.28931], [46.02303, 39.09978], [46.06973, 39.0744], [46.14785, 38.84206], [46.20601, 38.85262], [46.34059, 38.92076], [46.53497, 38.86548], [46.51805, 38.94982], [46.54296, 39.07078], [46.44022, 39.19636], [46.52584, 39.18912], [46.54141, 39.15895], [46.58032, 39.21204], [46.63481, 39.23013], [46.56476, 39.24942], [46.50093, 39.33736], [46.43244, 39.35181], [46.37795, 39.42039], [46.4013, 39.45405], [46.53051, 39.47809], [46.51027, 39.52373], [46.57721, 39.54414], [46.57098, 39.56694], [46.52117, 39.58734], [46.42465, 39.57534], [46.40286, 39.63651], [46.18493, 39.60533], [45.96543, 39.78859], [45.82533, 39.82925], [45.7833, 39.9475], [45.60895, 39.97733], [45.59806, 40.0131], [45.78642, 40.03218], [45.83779, 39.98925], [45.97944, 40.181], [45.95609, 40.27846], [45.65098, 40.37696], [45.42994, 40.53804], [45.45484, 40.57707], [45.35366, 40.65979], [45.4206, 40.7424], [45.55914, 40.78366], [45.60584, 40.87436], [45.40814, 40.97904], [45.44083, 41.01663], [45.39725, 41.02603], [45.35677, 40.99784], [45.28859, 41.03757], [45.26162, 41.0228], [45.25897, 41.0027], [45.1994, 41.04518], [45.16493, 41.05068], [45.1634, 41.08082], [45.1313, 41.09369], [45.12923, 41.06059], [45.06784, 41.05379], [45.08028, 41.10917], [45.19942, 41.13299], [45.1969, 41.168], [45.11811, 41.19967], [45.05201, 41.19211], [45.02932, 41.2101], [45.05497, 41.2464], [45.0133, 41.29747]], [[45.21324, 40.9817], [45.21219, 40.99001], [45.20518, 40.99348], [45.19312, 40.98998], [45.18382, 41.0066], [45.20625, 41.01484], [45.23487, 41.00226], [45.23095, 40.97828], [45.21324, 40.9817]], [[45.00864, 41.03411], [44.9903, 41.05657], [44.96031, 41.06345], [44.95383, 41.07553], [44.97169, 41.09176], [45.00864, 41.09407], [45.03406, 41.07931], [45.04517, 41.06653], [45.03792, 41.03938], [45.00864, 41.03411]]], [[[45.50279, 40.58424], [45.56071, 40.64765], [45.51825, 40.67382], [45.47927, 40.65023], [45.50279, 40.58424]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AO\", iso1A3: \"AGO\", iso1N3: \"024\", wikidata: \"Q916\", nameEn: \"Angola\", groups: [\"017\", \"202\", \"002\", \"UN\"], callingCodes: [\"244\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[16.55507, -5.85631], [13.04371, -5.87078], [12.42245, -6.07585], [11.95767, -5.94705], [12.20376, -5.76338], [12.26557, -5.74031], [12.52318, -5.74353], [12.52301, -5.17481], [12.53599, -5.1618], [12.53586, -5.14658], [12.51589, -5.1332], [12.49815, -5.14058], [12.46297, -5.09408], [12.60251, -5.01715], [12.63465, -4.94632], [12.70868, -4.95505], [12.8733, -4.74346], [13.11195, -4.67745], [13.09648, -4.63739], [12.91489, -4.47907], [12.87096, -4.40315], [12.76844, -4.38709], [12.64835, -4.55937], [12.40964, -4.60609], [12.32324, -4.78415], [12.25587, -4.79437], [12.20901, -4.75642], [12.16068, -4.90089], [12.00924, -5.02627], [11.50888, -5.33417], [10.5065, -17.25284], [11.75063, -17.25013], [12.07076, -17.15165], [12.52111, -17.24495], [12.97145, -16.98567], [13.36212, -16.98048], [13.95896, -17.43141], [14.28743, -17.38814], [18.39229, -17.38927], [18.84226, -17.80375], [21.14283, -17.94318], [21.42741, -18.02787], [23.47474, -17.62877], [23.20038, -17.47563], [22.17217, -16.50269], [22.00323, -16.18028], [21.97988, -13.00148], [24.03339, -12.99091], [23.90937, -12.844], [24.06672, -12.29058], [23.98804, -12.13149], [24.02603, -11.15368], [24.00027, -10.89356], [23.86868, -11.02856], [23.45631, -10.946], [23.16602, -11.10577], [22.54205, -11.05784], [22.25951, -11.24911], [22.17954, -10.85884], [22.32604, -10.76291], [22.19039, -9.94628], [21.84856, -9.59871], [21.79824, -7.29628], [20.56263, -7.28566], [20.61689, -6.90876], [20.31846, -6.91953], [20.30218, -6.98955], [19.5469, -7.00195], [19.33698, -7.99743], [18.33635, -8.00126], [17.5828, -8.13784], [16.96282, -7.21787], [16.55507, -5.85631]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AQ\", iso1A3: \"ATA\", iso1N3: \"010\", wikidata: \"Q51\", nameEn: \"Antarctica\", level: \"region\", callingCodes: [\"672\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[180, -60], [-180, -60], [-180, -90], [180, -90], [180, -60]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AR\", iso1A3: \"ARG\", iso1N3: \"032\", wikidata: \"Q414\", nameEn: \"Argentina\", aliases: [\"RA\"], groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"54\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-72.31343, -50.58411], [-72.33873, -51.59954], [-71.99889, -51.98018], [-69.97824, -52.00845], [-68.41683, -52.33516], [-68.60702, -52.65781], [-68.60733, -54.9125], [-68.01394, -54.8753], [-67.46182, -54.92205], [-67.11046, -54.94199], [-66.07313, -55.19618], [-63.67376, -55.11859], [-54.78916, -36.21945], [-57.83001, -34.69099], [-58.34425, -34.15035], [-58.44442, -33.84033], [-58.40475, -33.11777], [-58.1224, -32.98842], [-58.22362, -32.52416], [-58.10036, -32.25338], [-58.20252, -31.86966], [-58.00076, -31.65016], [-58.0023, -31.53084], [-58.07569, -31.44916], [-57.98127, -31.3872], [-57.9908, -31.34924], [-57.86729, -31.06352], [-57.89476, -30.95994], [-57.8024, -30.77193], [-57.89115, -30.49572], [-57.64859, -30.35095], [-57.61478, -30.25165], [-57.65132, -30.19229], [-57.09386, -29.74211], [-56.81251, -29.48154], [-56.62789, -29.18073], [-56.57295, -29.11357], [-56.54171, -29.11447], [-56.05265, -28.62651], [-56.00458, -28.60421], [-56.01729, -28.51223], [-55.65418, -28.18304], [-55.6262, -28.17124], [-55.33303, -27.94661], [-55.16872, -27.86224], [-55.1349, -27.89759], [-54.90805, -27.73149], [-54.90159, -27.63132], [-54.67657, -27.57214], [-54.50416, -27.48232], [-54.41888, -27.40882], [-54.19268, -27.30751], [-54.19062, -27.27639], [-54.15978, -27.2889], [-53.80144, -27.09844], [-53.73372, -26.6131], [-53.68269, -26.33359], [-53.64505, -26.28089], [-53.64186, -26.25976], [-53.64632, -26.24798], [-53.63881, -26.25075], [-53.63739, -26.2496], [-53.65237, -26.23289], [-53.65018, -26.19501], [-53.73968, -26.10012], [-53.73391, -26.07006], [-53.7264, -26.0664], [-53.73086, -26.05842], [-53.73511, -26.04211], [-53.83691, -25.94849], [-53.90831, -25.55513], [-54.52926, -25.62846], [-54.5502, -25.58915], [-54.59398, -25.59224], [-54.62063, -25.91213], [-54.60664, -25.9691], [-54.67359, -25.98607], [-54.69333, -26.37705], [-54.70732, -26.45099], [-54.80868, -26.55669], [-55.00584, -26.78754], [-55.06351, -26.80195], [-55.16948, -26.96068], [-55.25243, -26.93808], [-55.39611, -26.97679], [-55.62322, -27.1941], [-55.59094, -27.32444], [-55.74475, -27.44485], [-55.89195, -27.3467], [-56.18313, -27.29851], [-56.85337, -27.5165], [-58.04205, -27.2387], [-58.59549, -27.29973], [-58.65321, -27.14028], [-58.3198, -26.83443], [-58.1188, -26.16704], [-57.87176, -25.93604], [-57.57431, -25.47269], [-57.80821, -25.13863], [-58.25492, -24.92528], [-58.33055, -24.97099], [-59.33886, -24.49935], [-59.45482, -24.34787], [-60.03367, -24.00701], [-60.28163, -24.04436], [-60.99754, -23.80934], [-61.0782, -23.62932], [-61.9756, -23.0507], [-62.22768, -22.55807], [-62.51761, -22.37684], [-62.64455, -22.25091], [-62.8078, -22.12534], [-62.81124, -21.9987], [-63.66482, -21.99918], [-63.68113, -22.0544], [-63.70963, -21.99934], [-63.93287, -21.99934], [-64.22918, -22.55807], [-64.31489, -22.88824], [-64.35108, -22.73282], [-64.4176, -22.67692], [-64.58888, -22.25035], [-64.67174, -22.18957], [-64.90014, -22.12136], [-64.99524, -22.08255], [-65.47435, -22.08908], [-65.57743, -22.07675], [-65.58694, -22.09794], [-65.61166, -22.09504], [-65.7467, -22.10105], [-65.9261, -21.93335], [-66.04832, -21.9187], [-66.03836, -21.84829], [-66.24077, -21.77837], [-66.29714, -22.08741], [-66.7298, -22.23644], [-67.18382, -22.81525], [-66.99632, -22.99839], [-67.33563, -24.04237], [-68.24825, -24.42596], [-68.56909, -24.69831], [-68.38372, -25.08636], [-68.57622, -25.32505], [-68.38372, -26.15353], [-68.56909, -26.28146], [-68.59048, -26.49861], [-68.27677, -26.90626], [-68.43363, -27.08414], [-68.77586, -27.16029], [-69.22504, -27.95042], [-69.66709, -28.44055], [-69.80969, -29.07185], [-69.99507, -29.28351], [-69.8596, -30.26131], [-70.14479, -30.36595], [-70.55832, -31.51559], [-69.88099, -33.34489], [-69.87386, -34.13344], [-70.49416, -35.24145], [-70.38008, -36.02375], [-70.95047, -36.4321], [-71.24279, -37.20264], [-70.89532, -38.6923], [-71.37826, -38.91474], [-71.92726, -40.72714], [-71.74901, -42.11711], [-72.15541, -42.15941], [-72.14828, -42.85321], [-71.64206, -43.64774], [-71.81318, -44.38097], [-71.16436, -44.46244], [-71.26418, -44.75684], [-72.06985, -44.81756], [-71.35687, -45.22075], [-71.75614, -45.61611], [-71.68577, -46.55385], [-71.94152, -47.13595], [-72.50478, -47.80586], [-72.27662, -48.28727], [-72.54042, -48.52392], [-72.56894, -48.81116], [-73.09655, -49.14342], [-73.45156, -49.79461], [-73.55259, -49.92488], [-73.15765, -50.78337], [-72.31343, -50.58411]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AS\", iso1A3: \"ASM\", iso1N3: \"016\", wikidata: \"Q16641\", nameEn: \"American Samoa\", aliases: [\"US-AS\"], country: \"US\", groups: [\"Q1352230\", \"061\", \"009\", \"UN\"], roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1 684\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-171.39864, -10.21587], [-170.99605, -15.1275], [-166.32598, -15.26169], [-171.39864, -10.21587]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AT\", iso1A3: \"AUT\", iso1N3: \"040\", wikidata: \"Q40\", nameEn: \"Austria\", groups: [\"EU\", \"155\", \"150\", \"UN\"], callingCodes: [\"43\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[15.34823, 48.98444], [15.28305, 48.98831], [15.26177, 48.95766], [15.16358, 48.94278], [15.15534, 48.99056], [14.99878, 49.01444], [14.97612, 48.96983], [14.98917, 48.90082], [14.95072, 48.79101], [14.98032, 48.77959], [14.9782, 48.7766], [14.98112, 48.77524], [14.9758, 48.76857], [14.95641, 48.75915], [14.94773, 48.76268], [14.81545, 48.7874], [14.80821, 48.77711], [14.80584, 48.73489], [14.72756, 48.69502], [14.71794, 48.59794], [14.66762, 48.58215], [14.60808, 48.62881], [14.56139, 48.60429], [14.4587, 48.64695], [14.43076, 48.58855], [14.33909, 48.55852], [14.20691, 48.5898], [14.09104, 48.5943], [14.01482, 48.63788], [14.06151, 48.66873], [13.84023, 48.76988], [13.82266, 48.75544], [13.81863, 48.73257], [13.79337, 48.71375], [13.81791, 48.69832], [13.81283, 48.68426], [13.81901, 48.6761], [13.82609, 48.62345], [13.80038, 48.59487], [13.80519, 48.58026], [13.76921, 48.55324], [13.7513, 48.5624], [13.74816, 48.53058], [13.72802, 48.51208], [13.66113, 48.53558], [13.65186, 48.55092], [13.62508, 48.55501], [13.59705, 48.57013], [13.57535, 48.55912], [13.51291, 48.59023], [13.50131, 48.58091], [13.50663, 48.57506], [13.46967, 48.55157], [13.45214, 48.56472], [13.43695, 48.55776], [13.45727, 48.51092], [13.42527, 48.45711], [13.43929, 48.43386], [13.40709, 48.37292], [13.30897, 48.31575], [13.26039, 48.29422], [13.18093, 48.29577], [13.126, 48.27867], [13.0851, 48.27711], [13.02083, 48.25689], [12.95306, 48.20629], [12.87126, 48.20318], [12.84475, 48.16556], [12.836, 48.1647], [12.8362, 48.15876], [12.82673, 48.15245], [12.80676, 48.14979], [12.78595, 48.12445], [12.7617, 48.12796], [12.74973, 48.10885], [12.76141, 48.07373], [12.8549, 48.01122], [12.87476, 47.96195], [12.91683, 47.95647], [12.9211, 47.95135], [12.91985, 47.94069], [12.92668, 47.93879], [12.93419, 47.94063], [12.93642, 47.94436], [12.93886, 47.94046], [12.94163, 47.92927], [13.00588, 47.84374], [12.98543, 47.82896], [12.96311, 47.79957], [12.93202, 47.77302], [12.94371, 47.76281], [12.9353, 47.74788], [12.91711, 47.74026], [12.90274, 47.72513], [12.91333, 47.7178], [12.92969, 47.71094], [12.98578, 47.7078], [13.01382, 47.72116], [13.07692, 47.68814], [13.09562, 47.63304], [13.06407, 47.60075], [13.06641, 47.58577], [13.04537, 47.58183], [13.05355, 47.56291], [13.03252, 47.53373], [13.04537, 47.49426], [12.9998, 47.46267], [12.98344, 47.48716], [12.9624, 47.47452], [12.85256, 47.52741], [12.84672, 47.54556], [12.80699, 47.54477], [12.77427, 47.58025], [12.82101, 47.61493], [12.76492, 47.64485], [12.77777, 47.66689], [12.7357, 47.6787], [12.6071, 47.6741], [12.57438, 47.63238], [12.53816, 47.63553], [12.50076, 47.62293], [12.44117, 47.6741], [12.43883, 47.6977], [12.37222, 47.68433], [12.336, 47.69534], [12.27991, 47.68827], [12.26004, 47.67725], [12.24017, 47.69534], [12.26238, 47.73544], [12.2542, 47.7433], [12.22571, 47.71776], [12.18303, 47.70065], [12.16217, 47.70105], [12.16769, 47.68167], [12.18347, 47.66663], [12.18507, 47.65984], [12.19895, 47.64085], [12.20801, 47.61082], [12.20398, 47.60667], [12.18568, 47.6049], [12.17737, 47.60121], [12.18145, 47.61019], [12.17824, 47.61506], [12.13734, 47.60639], [12.05788, 47.61742], [12.02282, 47.61033], [12.0088, 47.62451], [11.85572, 47.60166], [11.84052, 47.58354], [11.63934, 47.59202], [11.60681, 47.57881], [11.58811, 47.55515], [11.58578, 47.52281], [11.52618, 47.50939], [11.4362, 47.51413], [11.38128, 47.47465], [11.4175, 47.44621], [11.33804, 47.44937], [11.29597, 47.42566], [11.27844, 47.39956], [11.22002, 47.3964], [11.25157, 47.43277], [11.20482, 47.43198], [11.12536, 47.41222], [11.11835, 47.39719], [10.97111, 47.39561], [10.97111, 47.41617], [10.98513, 47.42882], [10.92437, 47.46991], [10.93839, 47.48018], [10.90918, 47.48571], [10.87061, 47.4786], [10.86945, 47.5015], [10.91268, 47.51334], [10.88814, 47.53701], [10.77596, 47.51729], [10.7596, 47.53228], [10.6965, 47.54253], [10.68832, 47.55752], [10.63456, 47.5591], [10.60337, 47.56755], [10.56912, 47.53584], [10.48849, 47.54057], [10.47329, 47.58552], [10.43473, 47.58394], [10.44992, 47.5524], [10.4324, 47.50111], [10.44291, 47.48453], [10.46278, 47.47901], [10.47446, 47.43318], [10.4359, 47.41183], [10.4324, 47.38494], [10.39851, 47.37623], [10.33424, 47.30813], [10.23257, 47.27088], [10.17531, 47.27167], [10.17648, 47.29149], [10.2147, 47.31014], [10.19998, 47.32832], [10.23757, 47.37609], [10.22774, 47.38904], [10.2127, 47.38019], [10.17648, 47.38889], [10.16362, 47.36674], [10.11805, 47.37228], [10.09819, 47.35724], [10.06897, 47.40709], [10.1052, 47.4316], [10.09001, 47.46005], [10.07131, 47.45531], [10.03859, 47.48927], [10.00003, 47.48216], [9.96029, 47.53899], [9.92407, 47.53111], [9.87733, 47.54688], [9.87499, 47.52953], [9.8189, 47.54688], [9.82591, 47.58158], [9.80254, 47.59419], [9.76748, 47.5934], [9.72736, 47.53457], [9.55125, 47.53629], [9.56312, 47.49495], [9.58208, 47.48344], [9.59482, 47.46305], [9.60205, 47.46165], [9.60484, 47.46358], [9.60841, 47.47178], [9.62158, 47.45858], [9.62475, 47.45685], [9.6423, 47.45599], [9.65728, 47.45383], [9.65863, 47.44847], [9.64483, 47.43842], [9.6446, 47.43233], [9.65043, 47.41937], [9.65136, 47.40504], [9.6629, 47.39591], [9.67334, 47.39191], [9.67445, 47.38429], [9.6711, 47.37824], [9.66243, 47.37136], [9.65427, 47.36824], [9.62476, 47.36639], [9.59978, 47.34671], [9.58513, 47.31334], [9.55857, 47.29919], [9.54773, 47.2809], [9.53116, 47.27029], [9.56766, 47.24281], [9.55176, 47.22585], [9.56981, 47.21926], [9.58264, 47.20673], [9.56539, 47.17124], [9.62623, 47.14685], [9.63395, 47.08443], [9.61216, 47.07732], [9.60717, 47.06091], [9.87935, 47.01337], [9.88266, 46.93343], [9.98058, 46.91434], [10.10715, 46.84296], [10.22675, 46.86942], [10.24128, 46.93147], [10.30031, 46.92093], [10.36933, 47.00212], [10.48376, 46.93891], [10.47197, 46.85698], [10.54783, 46.84505], [10.66405, 46.87614], [10.75753, 46.82258], [10.72974, 46.78972], [11.00764, 46.76896], [11.10618, 46.92966], [11.33355, 46.99862], [11.50739, 47.00644], [11.74789, 46.98484], [12.19254, 47.09331], [12.21781, 47.03996], [12.11675, 47.01241], [12.2006, 46.88854], [12.27591, 46.88651], [12.38708, 46.71529], [12.59992, 46.6595], [12.94445, 46.60401], [13.27627, 46.56059], [13.64088, 46.53438], [13.7148, 46.5222], [13.89837, 46.52331], [14.00422, 46.48474], [14.04002, 46.49117], [14.12097, 46.47724], [14.15989, 46.43327], [14.28326, 46.44315], [14.314, 46.43327], [14.42608, 46.44614], [14.45877, 46.41717], [14.52176, 46.42617], [14.56463, 46.37208], [14.5942, 46.43434], [14.66892, 46.44936], [14.72185, 46.49974], [14.81836, 46.51046], [14.83549, 46.56614], [14.86419, 46.59411], [14.87129, 46.61], [14.92283, 46.60848], [14.96002, 46.63459], [14.98024, 46.6009], [15.01451, 46.641], [15.14215, 46.66131], [15.23711, 46.63994], [15.41235, 46.65556], [15.45514, 46.63697], [15.46906, 46.61321], [15.54431, 46.6312], [15.55333, 46.64988], [15.54533, 46.66985], [15.59826, 46.68908], [15.62317, 46.67947], [15.63255, 46.68069], [15.6365, 46.6894], [15.6543, 46.69228], [15.6543, 46.70616], [15.67411, 46.70735], [15.69523, 46.69823], [15.72279, 46.69548], [15.73823, 46.70011], [15.76771, 46.69863], [15.78518, 46.70712], [15.8162, 46.71897], [15.87691, 46.7211], [15.94864, 46.68769], [15.98512, 46.68463], [15.99988, 46.67947], [16.04036, 46.6549], [16.04347, 46.68694], [16.02808, 46.71094], [15.99769, 46.7266], [15.98432, 46.74991], [15.99126, 46.78199], [15.99054, 46.82772], [16.05786, 46.83927], [16.10983, 46.867], [16.19904, 46.94134], [16.22403, 46.939], [16.27594, 46.9643], [16.28202, 47.00159], [16.51369, 47.00084], [16.43936, 47.03548], [16.52176, 47.05747], [16.46134, 47.09395], [16.52863, 47.13974], [16.44932, 47.14418], [16.46442, 47.16845], [16.4523, 47.18812], [16.42801, 47.18422], [16.41739, 47.20649], [16.43663, 47.21127], [16.44142, 47.25079], [16.47782, 47.25918], [16.45104, 47.41181], [16.49908, 47.39416], [16.52414, 47.41007], [16.57152, 47.40868], [16.6718, 47.46139], [16.64821, 47.50155], [16.71059, 47.52692], [16.64193, 47.63114], [16.58699, 47.61772], [16.4222, 47.66537], [16.55129, 47.72268], [16.53514, 47.73837], [16.54779, 47.75074], [16.61183, 47.76171], [16.65679, 47.74197], [16.72089, 47.73469], [16.7511, 47.67878], [16.82938, 47.68432], [16.86509, 47.72268], [16.87538, 47.68895], [17.08893, 47.70928], [17.05048, 47.79377], [17.07039, 47.81129], [17.00997, 47.86245], [17.08275, 47.87719], [17.11022, 47.92461], [17.09786, 47.97336], [17.16001, 48.00636], [17.07039, 48.0317], [17.09168, 48.09366], [17.05735, 48.14179], [17.02919, 48.13996], [16.97701, 48.17385], [16.89461, 48.31332], [16.90903, 48.32519], [16.84243, 48.35258], [16.83317, 48.38138], [16.83588, 48.3844], [16.8497, 48.38321], [16.85204, 48.44968], [16.94611, 48.53614], [16.93955, 48.60371], [16.90354, 48.71541], [16.79779, 48.70998], [16.71883, 48.73806], [16.68518, 48.7281], [16.67008, 48.77699], [16.46134, 48.80865], [16.40915, 48.74576], [16.37345, 48.729], [16.06034, 48.75436], [15.84404, 48.86921], [15.78087, 48.87644], [15.75341, 48.8516], [15.6921, 48.85973], [15.61622, 48.89541], [15.51357, 48.91549], [15.48027, 48.94481], [15.34823, 48.98444]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AU\", iso1A3: \"AUS\", iso1N3: \"036\", wikidata: \"Q408\", nameEn: \"Australia\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"AW\", iso1A3: \"ABW\", iso1N3: \"533\", wikidata: \"Q21203\", nameEn: \"Aruba\", aliases: [\"NL-AW\"], country: \"NL\", groups: [\"Q1451600\", \"029\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"297\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-70.00823, 12.98375], [-70.35625, 12.58277], [-69.60231, 12.17], [-70.00823, 12.98375]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AX\", iso1A3: \"ALA\", iso1N3: \"248\", wikidata: \"Q5689\", nameEn: \"\\xC5land Islands\", country: \"FI\", groups: [\"EU\", \"154\", \"150\", \"UN\"], callingCodes: [\"358 18\", \"358 457\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[19.08191, 60.19152], [20.5104, 59.15546], [21.35468, 59.67511], [21.02509, 60.12142], [21.08159, 60.20167], [21.15143, 60.54555], [20.96741, 60.71528], [19.23413, 60.61414], [19.08191, 60.19152]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"AZ\", iso1A3: \"AZE\", iso1N3: \"031\", wikidata: \"Q227\", nameEn: \"Azerbaijan\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"994\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[46.42738, 41.91323], [46.3984, 41.84399], [46.30863, 41.79133], [46.23962, 41.75811], [46.20538, 41.77205], [46.17891, 41.72094], [46.19759, 41.62327], [46.24429, 41.59883], [46.26531, 41.63339], [46.28182, 41.60089], [46.3253, 41.60912], [46.34039, 41.5947], [46.34126, 41.57454], [46.29794, 41.5724], [46.33925, 41.4963], [46.40307, 41.48464], [46.4669, 41.43331], [46.63658, 41.37727], [46.72375, 41.28609], [46.66148, 41.20533], [46.63969, 41.09515], [46.55096, 41.1104], [46.48558, 41.0576], [46.456, 41.09984], [46.37661, 41.10805], [46.27698, 41.19011], [46.13221, 41.19479], [45.95786, 41.17956], [45.80842, 41.2229], [45.69946, 41.29545], [45.75705, 41.35157], [45.71035, 41.36208], [45.68389, 41.3539], [45.45973, 41.45898], [45.4006, 41.42402], [45.31352, 41.47168], [45.26285, 41.46433], [45.1797, 41.42231], [45.09867, 41.34065], [45.0133, 41.29747], [45.05497, 41.2464], [45.02932, 41.2101], [45.05201, 41.19211], [45.11811, 41.19967], [45.1969, 41.168], [45.19942, 41.13299], [45.08028, 41.10917], [45.06784, 41.05379], [45.12923, 41.06059], [45.1313, 41.09369], [45.1634, 41.08082], [45.16493, 41.05068], [45.1994, 41.04518], [45.25897, 41.0027], [45.26162, 41.0228], [45.28859, 41.03757], [45.35677, 40.99784], [45.39725, 41.02603], [45.44083, 41.01663], [45.40814, 40.97904], [45.60584, 40.87436], [45.55914, 40.78366], [45.4206, 40.7424], [45.35366, 40.65979], [45.45484, 40.57707], [45.42994, 40.53804], [45.65098, 40.37696], [45.95609, 40.27846], [45.97944, 40.181], [45.83779, 39.98925], [45.78642, 40.03218], [45.59806, 40.0131], [45.60895, 39.97733], [45.7833, 39.9475], [45.82533, 39.82925], [45.96543, 39.78859], [46.18493, 39.60533], [46.40286, 39.63651], [46.42465, 39.57534], [46.52117, 39.58734], [46.57098, 39.56694], [46.57721, 39.54414], [46.51027, 39.52373], [46.53051, 39.47809], [46.4013, 39.45405], [46.37795, 39.42039], [46.43244, 39.35181], [46.50093, 39.33736], [46.56476, 39.24942], [46.63481, 39.23013], [46.58032, 39.21204], [46.54141, 39.15895], [46.52584, 39.18912], [46.44022, 39.19636], [46.54296, 39.07078], [46.51805, 38.94982], [46.53497, 38.86548], [46.75752, 39.03231], [46.83822, 39.13143], [46.92539, 39.16644], [46.95341, 39.13505], [47.05771, 39.20143], [47.05927, 39.24846], [47.31301, 39.37492], [47.38978, 39.45999], [47.50099, 39.49615], [47.84774, 39.66285], [47.98977, 39.70999], [48.34264, 39.42935], [48.37385, 39.37584], [48.15984, 39.30028], [48.12404, 39.25208], [48.15361, 39.19419], [48.31239, 39.09278], [48.33884, 39.03022], [48.28437, 38.97186], [48.08627, 38.94434], [48.07734, 38.91616], [48.01409, 38.90333], [48.02581, 38.82705], [48.24773, 38.71883], [48.3146, 38.59958], [48.45084, 38.61013], [48.58793, 38.45076], [48.62217, 38.40198], [48.70001, 38.40564], [48.78979, 38.45026], [48.81072, 38.44853], [48.84969, 38.45015], [48.88288, 38.43975], [52.39847, 39.43556], [48.80971, 41.95365], [48.5867, 41.84306], [48.55078, 41.77917], [48.42301, 41.65444], [48.40277, 41.60441], [48.2878, 41.56221], [48.22064, 41.51472], [48.07587, 41.49957], [47.87973, 41.21798], [47.75831, 41.19455], [47.62288, 41.22969], [47.54504, 41.20275], [47.49004, 41.26366], [47.34579, 41.27884], [47.10762, 41.59044], [47.03757, 41.55434], [46.99554, 41.59743], [47.00955, 41.63583], [46.8134, 41.76252], [46.75269, 41.8623], [46.58924, 41.80547], [46.5332, 41.87389], [46.42738, 41.91323]], [[45.50279, 40.58424], [45.47927, 40.65023], [45.51825, 40.67382], [45.56071, 40.64765], [45.50279, 40.58424]]], [[[45.00864, 41.03411], [45.03792, 41.03938], [45.04517, 41.06653], [45.03406, 41.07931], [45.00864, 41.09407], [44.97169, 41.09176], [44.95383, 41.07553], [44.96031, 41.06345], [44.9903, 41.05657], [45.00864, 41.03411]]], [[[45.21324, 40.9817], [45.23095, 40.97828], [45.23487, 41.00226], [45.20625, 41.01484], [45.18382, 41.0066], [45.19312, 40.98998], [45.20518, 40.99348], [45.21219, 40.99001], [45.21324, 40.9817]]], [[[45.46992, 39.49888], [45.29606, 39.57654], [45.30385, 39.61373], [45.23535, 39.61373], [45.21784, 39.58074], [45.17464, 39.58614], [45.18554, 39.67846], [45.06604, 39.79277], [44.92869, 39.72157], [44.88354, 39.74432], [44.75779, 39.7148], [44.80977, 39.65768], [44.81043, 39.62677], [44.88916, 39.59653], [44.96746, 39.42998], [45.05932, 39.36435], [45.08751, 39.35052], [45.16168, 39.21952], [45.30489, 39.18333], [45.40148, 39.09007], [45.40452, 39.07224], [45.44811, 39.04927], [45.44966, 38.99243], [45.6131, 38.964], [45.6155, 38.94304], [45.65172, 38.95199], [45.83883, 38.90768], [45.90266, 38.87739], [45.94624, 38.89072], [46.00228, 38.87376], [46.06766, 38.87861], [46.14785, 38.84206], [46.06973, 39.0744], [46.02303, 39.09978], [45.99774, 39.28931], [45.79225, 39.3695], [45.83, 39.46487], [45.80804, 39.56716], [45.70547, 39.60174], [45.46992, 39.49888]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BA\", iso1A3: \"BIH\", iso1N3: \"070\", wikidata: \"Q225\", nameEn: \"Bosnia and Herzegovina\", groups: [\"039\", \"150\", \"UN\"], callingCodes: [\"387\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[17.84826, 45.04489], [17.66571, 45.13408], [17.59104, 45.10816], [17.51469, 45.10791], [17.47589, 45.12656], [17.45615, 45.12523], [17.4498, 45.16119], [17.41229, 45.13335], [17.33573, 45.14521], [17.32092, 45.16246], [17.26815, 45.18444], [17.25131, 45.14957], [17.24325, 45.146], [17.18438, 45.14764], [17.0415, 45.20759], [16.9385, 45.22742], [16.92405, 45.27607], [16.83804, 45.18951], [16.81137, 45.18434], [16.78219, 45.19002], [16.74845, 45.20393], [16.64962, 45.20714], [16.60194, 45.23042], [16.56559, 45.22307], [16.5501, 45.2212], [16.52982, 45.22713], [16.49155, 45.21153], [16.4634, 45.14522], [16.40023, 45.1147], [16.38309, 45.05955], [16.38219, 45.05139], [16.3749, 45.05206], [16.35863, 45.03529], [16.35404, 45.00241], [16.29036, 44.99732], [16.12153, 45.09616], [15.98412, 45.23088], [15.83512, 45.22459], [15.76371, 45.16508], [15.78842, 45.11519], [15.74585, 45.0638], [15.78568, 44.97401], [15.74723, 44.96818], [15.76096, 44.87045], [15.79472, 44.8455], [15.72584, 44.82334], [15.8255, 44.71501], [15.89348, 44.74964], [16.05828, 44.61538], [16.00884, 44.58605], [16.03012, 44.55572], [16.10566, 44.52586], [16.16814, 44.40679], [16.12969, 44.38275], [16.21346, 44.35231], [16.18688, 44.27012], [16.36864, 44.08263], [16.43662, 44.07523], [16.43629, 44.02826], [16.50528, 44.0244], [16.55472, 43.95326], [16.70922, 43.84887], [16.75316, 43.77157], [16.80736, 43.76011], [17.00585, 43.58037], [17.15828, 43.49376], [17.24411, 43.49376], [17.29699, 43.44542], [17.25579, 43.40353], [17.286, 43.33065], [17.46986, 43.16559], [17.64268, 43.08595], [17.70879, 42.97223], [17.5392, 42.92787], [17.6444, 42.88641], [17.68151, 42.92725], [17.7948, 42.89556], [17.80854, 42.9182], [17.88201, 42.83668], [18.24318, 42.6112], [18.36197, 42.61423], [18.43735, 42.55921], [18.49778, 42.58409], [18.53751, 42.57376], [18.55504, 42.58409], [18.52232, 42.62279], [18.57373, 42.64429], [18.54841, 42.68328], [18.54603, 42.69171], [18.55221, 42.69045], [18.56789, 42.72074], [18.47324, 42.74992], [18.45921, 42.81682], [18.47633, 42.85829], [18.4935, 42.86433], [18.49661, 42.89306], [18.49076, 42.95553], [18.52232, 43.01451], [18.66254, 43.03928], [18.64735, 43.14766], [18.66605, 43.2056], [18.71747, 43.2286], [18.6976, 43.25243], [18.76538, 43.29838], [18.85342, 43.32426], [18.84794, 43.33735], [18.83912, 43.34795], [18.90911, 43.36383], [18.95819, 43.32899], [18.95001, 43.29327], [19.00844, 43.24988], [19.04233, 43.30008], [19.08206, 43.29668], [19.08673, 43.31453], [19.04071, 43.397], [19.01078, 43.43854], [18.96053, 43.45042], [18.95469, 43.49367], [18.91379, 43.50299], [19.01078, 43.55806], [19.04934, 43.50384], [19.13933, 43.5282], [19.15685, 43.53943], [19.22807, 43.5264], [19.24774, 43.53061], [19.2553, 43.5938], [19.33426, 43.58833], [19.36653, 43.60921], [19.41941, 43.54056], [19.42696, 43.57987], [19.50455, 43.58385], [19.5176, 43.71403], [19.3986, 43.79668], [19.23465, 43.98764], [19.24363, 44.01502], [19.38439, 43.96611], [19.52515, 43.95573], [19.56498, 43.99922], [19.61836, 44.01464], [19.61991, 44.05254], [19.57467, 44.04716], [19.55999, 44.06894], [19.51167, 44.08158], [19.47321, 44.1193], [19.48386, 44.14332], [19.47338, 44.15034], [19.43905, 44.13088], [19.40927, 44.16722], [19.3588, 44.18353], [19.34773, 44.23244], [19.32464, 44.27185], [19.26945, 44.26957], [19.23306, 44.26097], [19.20508, 44.2917], [19.18328, 44.28383], [19.16741, 44.28648], [19.13332, 44.31492], [19.13556, 44.338], [19.11547, 44.34218], [19.1083, 44.3558], [19.11865, 44.36712], [19.10298, 44.36924], [19.10365, 44.37795], [19.10704, 44.38249], [19.10749, 44.39421], [19.11785, 44.40313], [19.14681, 44.41463], [19.14837, 44.45253], [19.12278, 44.50132], [19.13369, 44.52521], [19.16699, 44.52197], [19.26388, 44.65412], [19.32543, 44.74058], [19.36722, 44.88164], [19.18183, 44.92055], [19.01994, 44.85493], [18.8704, 44.85097], [18.76347, 44.90669], [18.76369, 44.93707], [18.80661, 44.93561], [18.78357, 44.97741], [18.65723, 45.07544], [18.47939, 45.05871], [18.41896, 45.11083], [18.32077, 45.1021], [18.24387, 45.13699], [18.1624, 45.07654], [18.03121, 45.12632], [18.01594, 45.15163], [17.99479, 45.14958], [17.97834, 45.13831], [17.97336, 45.12245], [17.93706, 45.08016], [17.87148, 45.04645], [17.84826, 45.04489]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BB\", iso1A3: \"BRB\", iso1N3: \"052\", wikidata: \"Q244\", nameEn: \"Barbados\", groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", callingCodes: [\"1 246\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-58.56442, 13.24471], [-59.80731, 13.87556], [-59.82929, 12.70644], [-58.56442, 13.24471]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BD\", iso1A3: \"BGD\", iso1N3: \"050\", wikidata: \"Q902\", nameEn: \"Bangladesh\", groups: [\"034\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"880\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[89.15869, 26.13708], [89.08899, 26.38845], [88.95612, 26.4564], [88.92357, 26.40711], [88.91321, 26.37984], [89.05328, 26.2469], [88.85004, 26.23211], [88.78961, 26.31093], [88.67837, 26.26291], [88.69485, 26.38353], [88.62144, 26.46783], [88.4298, 26.54489], [88.41196, 26.63837], [88.33093, 26.48929], [88.35153, 26.45241], [88.36938, 26.48683], [88.48749, 26.45855], [88.51649, 26.35923], [88.35153, 26.29123], [88.34757, 26.22216], [88.1844, 26.14417], [88.16581, 26.0238], [88.08804, 25.91334], [88.13138, 25.78773], [88.242, 25.80811], [88.45103, 25.66245], [88.4559, 25.59227], [88.677, 25.46959], [88.81296, 25.51546], [88.85278, 25.34679], [89.01105, 25.30303], [89.00463, 25.26583], [88.94067, 25.18534], [88.44766, 25.20149], [88.46277, 25.07468], [88.33917, 24.86803], [88.27325, 24.88796], [88.21832, 24.96642], [88.14004, 24.93529], [88.15515, 24.85806], [88.00683, 24.66477], [88.08786, 24.63232], [88.12296, 24.51301], [88.50934, 24.32474], [88.68801, 24.31464], [88.74841, 24.1959], [88.6976, 24.14703], [88.73743, 23.91751], [88.66189, 23.87607], [88.58087, 23.87105], [88.56507, 23.64044], [88.74841, 23.47361], [88.79351, 23.50535], [88.79254, 23.46028], [88.71133, 23.2492], [88.99148, 23.21134], [88.86377, 23.08759], [88.88327, 23.03885], [88.87063, 22.95235], [88.96713, 22.83346], [88.9151, 22.75228], [88.94614, 22.66941], [88.9367, 22.58527], [89.07114, 22.15335], [89.08044, 21.41871], [92.47409, 20.38654], [92.26071, 21.05697], [92.17752, 21.17445], [92.20087, 21.337], [92.37939, 21.47764], [92.43158, 21.37025], [92.55105, 21.3856], [92.60187, 21.24615], [92.68152, 21.28454], [92.59775, 21.6092], [92.62187, 21.87037], [92.60949, 21.97638], [92.56616, 22.13554], [92.60029, 22.1522], [92.5181, 22.71441], [92.37665, 22.9435], [92.38214, 23.28705], [92.26541, 23.70392], [92.15417, 23.73409], [92.04706, 23.64229], [91.95093, 23.73284], [91.95642, 23.47361], [91.84789, 23.42235], [91.76417, 23.26619], [91.81634, 23.08001], [91.7324, 23.00043], [91.61571, 22.93929], [91.54993, 23.01051], [91.46615, 23.2328], [91.4035, 23.27522], [91.40848, 23.07117], [91.36453, 23.06612], [91.28293, 23.37538], [91.15579, 23.6599], [91.25192, 23.83463], [91.22308, 23.89616], [91.29587, 24.0041], [91.35741, 23.99072], [91.37414, 24.10693], [91.55542, 24.08687], [91.63782, 24.1132], [91.65292, 24.22095], [91.73257, 24.14703], [91.76004, 24.23848], [91.82596, 24.22345], [91.89258, 24.14674], [91.96603, 24.3799], [92.11662, 24.38997], [92.15796, 24.54435], [92.25854, 24.9191], [92.38626, 24.86055], [92.49887, 24.88796], [92.39147, 25.01471], [92.33957, 25.07593], [92.0316, 25.1834], [91.63648, 25.12846], [91.25517, 25.20677], [90.87427, 25.15799], [90.65042, 25.17788], [90.40034, 25.1534], [90.1155, 25.22686], [89.90478, 25.31038], [89.87629, 25.28337], [89.83371, 25.29548], [89.84086, 25.31854], [89.81208, 25.37244], [89.86129, 25.61714], [89.84388, 25.70042], [89.80585, 25.82489], [89.86592, 25.93115], [89.77728, 26.04254], [89.77865, 26.08387], [89.73581, 26.15818], [89.70201, 26.15138], [89.63968, 26.22595], [89.57101, 25.9682], [89.53515, 26.00382], [89.35953, 26.0077], [89.15869, 26.13708]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BE\", iso1A3: \"BEL\", iso1N3: \"056\", wikidata: \"Q31\", nameEn: \"Belgium\", groups: [\"EU\", \"155\", \"150\", \"UN\"], callingCodes: [\"32\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[4.93295, 51.44945], [4.93909, 51.44632], [4.9524, 51.45014], [4.95244, 51.45207], [4.93295, 51.44945]]], [[[4.91493, 51.4353], [4.92652, 51.43329], [4.92952, 51.42984], [4.93986, 51.43064], [4.94265, 51.44003], [4.93471, 51.43861], [4.93416, 51.44185], [4.94025, 51.44193], [4.93544, 51.44634], [4.92879, 51.44161], [4.92815, 51.43856], [4.92566, 51.44273], [4.92811, 51.4437], [4.92287, 51.44741], [4.91811, 51.44621], [4.92227, 51.44252], [4.91935, 51.43634], [4.91493, 51.4353]]], [[[4.82946, 51.4213], [4.82409, 51.44736], [4.84139, 51.4799], [4.78803, 51.50284], [4.77321, 51.50529], [4.74578, 51.48937], [4.72935, 51.48424], [4.65442, 51.42352], [4.57489, 51.4324], [4.53521, 51.4243], [4.52846, 51.45002], [4.54675, 51.47265], [4.5388, 51.48184], [4.47736, 51.4778], [4.38122, 51.44905], [4.39747, 51.43316], [4.38064, 51.41965], [4.43777, 51.36989], [4.39292, 51.35547], [4.34086, 51.35738], [4.33265, 51.37687], [4.21923, 51.37443], [4.24024, 51.35371], [4.16721, 51.29348], [4.05165, 51.24171], [4.01957, 51.24504], [3.97889, 51.22537], [3.90125, 51.20371], [3.78783, 51.2151], [3.78999, 51.25766], [3.58939, 51.30064], [3.51502, 51.28697], [3.52698, 51.2458], [3.43488, 51.24135], [3.41704, 51.25933], [3.38289, 51.27331], [3.35847, 51.31572], [3.38696, 51.33436], [3.36263, 51.37112], [2.56575, 51.85301], [2.18458, 51.52087], [2.55904, 51.07014], [2.57551, 51.00326], [2.63074, 50.94746], [2.59093, 50.91751], [2.63331, 50.81457], [2.71165, 50.81295], [2.81056, 50.71773], [2.8483, 50.72276], [2.86985, 50.7033], [2.87937, 50.70298], [2.88504, 50.70656], [2.90069, 50.69263], [2.91036, 50.6939], [2.90873, 50.702], [2.95019, 50.75138], [2.96778, 50.75242], [3.00537, 50.76588], [3.04314, 50.77674], [3.09163, 50.77717], [3.10614, 50.78303], [3.11206, 50.79416], [3.11987, 50.79188], [3.1257, 50.78603], [3.15017, 50.79031], [3.16476, 50.76843], [3.18339, 50.74981], [3.18811, 50.74025], [3.20064, 50.73547], [3.19017, 50.72569], [3.20845, 50.71662], [3.22042, 50.71019], [3.24593, 50.71389], [3.26063, 50.70086], [3.26141, 50.69151], [3.2536, 50.68977], [3.264, 50.67668], [3.23951, 50.6585], [3.2729, 50.60718], [3.28575, 50.52724], [3.37693, 50.49538], [3.44629, 50.51009], [3.47385, 50.53397], [3.51564, 50.5256], [3.49509, 50.48885], [3.5683, 50.50192], [3.58361, 50.49049], [3.61014, 50.49568], [3.64426, 50.46275], [3.66153, 50.45165], [3.67494, 50.40239], [3.67262, 50.38663], [3.65709, 50.36873], [3.66976, 50.34563], [3.71009, 50.30305], [3.70987, 50.3191], [3.73911, 50.34809], [3.84314, 50.35219], [3.90781, 50.32814], [3.96771, 50.34989], [4.0268, 50.35793], [4.0689, 50.3254], [4.10237, 50.31247], [4.10957, 50.30234], [4.11954, 50.30425], [4.13665, 50.25609], [4.16808, 50.25786], [4.15524, 50.2833], [4.17347, 50.28838], [4.17861, 50.27443], [4.20651, 50.27333], [4.21945, 50.25539], [4.15524, 50.21103], [4.16014, 50.19239], [4.13561, 50.13078], [4.20147, 50.13535], [4.23101, 50.06945], [4.16294, 50.04719], [4.13508, 50.01976], [4.14239, 49.98034], [4.20532, 49.95803], [4.31963, 49.97043], [4.35051, 49.95315], [4.43488, 49.94122], [4.51098, 49.94659], [4.5414, 49.96911], [4.68695, 49.99685], [4.70064, 50.09384], [4.75237, 50.11314], [4.82438, 50.16878], [4.83279, 50.15331], [4.88602, 50.15182], [4.8382, 50.06738], [4.78827, 49.95609], [4.88529, 49.9236], [4.85134, 49.86457], [4.86965, 49.82271], [4.85464, 49.78995], [4.96714, 49.79872], [5.09249, 49.76193], [5.14545, 49.70287], [5.26232, 49.69456], [5.31465, 49.66846], [5.33039, 49.6555], [5.30214, 49.63055], [5.3137, 49.61225], [5.33851, 49.61599], [5.34837, 49.62889], [5.3974, 49.61596], [5.43713, 49.5707], [5.46734, 49.52648], [5.46541, 49.49825], [5.55001, 49.52729], [5.60909, 49.51228], [5.64505, 49.55146], [5.75649, 49.54321], [5.7577, 49.55915], [5.77435, 49.56298], [5.79195, 49.55228], [5.81838, 49.54777], [5.84143, 49.5533], [5.84692, 49.55663], [5.8424, 49.56082], [5.87256, 49.57539], [5.86986, 49.58756], [5.84971, 49.58674], [5.84826, 49.5969], [5.8762, 49.60898], [5.87609, 49.62047], [5.88393, 49.62802], [5.88552, 49.63507], [5.90599, 49.63853], [5.90164, 49.6511], [5.9069, 49.66377], [5.86175, 49.67862], [5.86527, 49.69291], [5.88677, 49.70951], [5.86503, 49.72739], [5.84193, 49.72161], [5.82562, 49.72395], [5.83149, 49.74729], [5.82245, 49.75048], [5.78871, 49.7962], [5.75409, 49.79239], [5.74953, 49.81428], [5.74364, 49.82058], [5.74844, 49.82435], [5.7404, 49.83452], [5.74076, 49.83823], [5.74975, 49.83933], [5.74953, 49.84709], [5.75884, 49.84811], [5.74567, 49.85368], [5.75861, 49.85631], [5.75269, 49.8711], [5.78415, 49.87922], [5.73621, 49.89796], [5.77314, 49.93646], [5.77291, 49.96056], [5.80833, 49.96451], [5.81163, 49.97142], [5.83467, 49.97823], [5.83968, 49.9892], [5.82331, 49.99662], [5.81866, 50.01286], [5.8551, 50.02683], [5.86904, 50.04614], [5.85474, 50.06342], [5.8857, 50.07824], [5.89488, 50.11476], [5.95929, 50.13295], [5.96453, 50.17259], [6.02488, 50.18283], [6.03093, 50.16362], [6.06406, 50.15344], [6.08577, 50.17246], [6.12028, 50.16374], [6.1137, 50.13668], [6.1379, 50.12964], [6.15298, 50.14126], [6.14132, 50.14971], [6.14588, 50.17106], [6.18739, 50.1822], [6.18364, 50.20815], [6.16853, 50.2234], [6.208, 50.25179], [6.28797, 50.27458], [6.29949, 50.30887], [6.32488, 50.32333], [6.35701, 50.31139], [6.40641, 50.32425], [6.40785, 50.33557], [6.3688, 50.35898], [6.34406, 50.37994], [6.36852, 50.40776], [6.37219, 50.45397], [6.34005, 50.46083], [6.3465, 50.48833], [6.30809, 50.50058], [6.26637, 50.50272], [6.22335, 50.49578], [6.20599, 50.52089], [6.19193, 50.5212], [6.18716, 50.52653], [6.19579, 50.5313], [6.19735, 50.53576], [6.17802, 50.54179], [6.17739, 50.55875], [6.20281, 50.56952], [6.22581, 50.5907], [6.24005, 50.58732], [6.24888, 50.59869], [6.2476, 50.60392], [6.26957, 50.62444], [6.17852, 50.6245], [6.11707, 50.72231], [6.04428, 50.72861], [6.0406, 50.71848], [6.0326, 50.72647], [6.03889, 50.74618], [6.01976, 50.75398], [5.97545, 50.75441], [5.95942, 50.7622], [5.89132, 50.75124], [5.89129, 50.75125], [5.88734, 50.77092], [5.84888, 50.75448], [5.84548, 50.76542], [5.80673, 50.7558], [5.77513, 50.78308], [5.76533, 50.78159], [5.74356, 50.7691], [5.73904, 50.75674], [5.72216, 50.76398], [5.69469, 50.75529], [5.68091, 50.75804], [5.70107, 50.7827], [5.68995, 50.79641], [5.70118, 50.80764], [5.65259, 50.82309], [5.64009, 50.84742], [5.64504, 50.87107], [5.67886, 50.88142], [5.69858, 50.91046], [5.71626, 50.90796], [5.72644, 50.91167], [5.72545, 50.92312], [5.74644, 50.94723], [5.75927, 50.95601], [5.74752, 50.96202], [5.72875, 50.95428], [5.71864, 50.96092], [5.76242, 50.99703], [5.77688, 51.02483], [5.75961, 51.03113], [5.77258, 51.06196], [5.79835, 51.05834], [5.79903, 51.09371], [5.82921, 51.09328], [5.83226, 51.10585], [5.8109, 51.10861], [5.80798, 51.11661], [5.85508, 51.14445], [5.82564, 51.16753], [5.77697, 51.1522], [5.77735, 51.17845], [5.74617, 51.18928], [5.70344, 51.1829], [5.65528, 51.18736], [5.65145, 51.19788], [5.5603, 51.22249], [5.5569, 51.26544], [5.515, 51.29462], [5.48476, 51.30053], [5.46519, 51.2849], [5.4407, 51.28169], [5.41672, 51.26248], [5.347, 51.27502], [5.33886, 51.26314], [5.29716, 51.26104], [5.26461, 51.26693], [5.23814, 51.26064], [5.22542, 51.26888], [5.24244, 51.30495], [5.2002, 51.32243], [5.16222, 51.31035], [5.13377, 51.31592], [5.13105, 51.34791], [5.07102, 51.39469], [5.10456, 51.43163], [5.07891, 51.4715], [5.04774, 51.47022], [5.03281, 51.48679], [5.0106, 51.47167], [5.00393, 51.44406], [4.92152, 51.39487], [4.90016, 51.41404], [4.84988, 51.41502], [4.78941, 51.41102], [4.77229, 51.41337], [4.76577, 51.43046], [4.78314, 51.43319], [4.82946, 51.4213]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BF\", iso1A3: \"BFA\", iso1N3: \"854\", wikidata: \"Q965\", nameEn: \"Burkina Faso\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"226\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[0.23859, 15.00135], [0.06588, 14.96961], [-0.24673, 15.07805], [-0.72004, 15.08655], [-1.05875, 14.7921], [-1.32166, 14.72774], [-1.68083, 14.50023], [-1.97945, 14.47709], [-1.9992, 14.19011], [-2.10223, 14.14878], [-2.47587, 14.29671], [-2.66175, 14.14713], [-2.84667, 14.05532], [-2.90831, 13.81174], [-2.88189, 13.64921], [-3.26407, 13.70699], [-3.28396, 13.5422], [-3.23599, 13.29035], [-3.43507, 13.27272], [-3.4313, 13.1588], [-3.54454, 13.1781], [-3.7911, 13.36665], [-3.96282, 13.38164], [-3.90558, 13.44375], [-3.96501, 13.49778], [-4.34477, 13.12927], [-4.21819, 12.95722], [-4.238, 12.71467], [-4.47356, 12.71252], [-4.41412, 12.31922], [-4.57703, 12.19875], [-4.54841, 12.1385], [-4.62546, 12.13204], [-4.62987, 12.06531], [-4.70692, 12.06746], [-4.72893, 12.01579], [-5.07897, 11.97918], [-5.26389, 11.84778], [-5.40258, 11.8327], [-5.26389, 11.75728], [-5.29251, 11.61715], [-5.22867, 11.60421], [-5.20665, 11.43811], [-5.25509, 11.36905], [-5.25949, 11.24816], [-5.32553, 11.21578], [-5.32994, 11.13371], [-5.49284, 11.07538], [-5.41579, 10.84628], [-5.47083, 10.75329], [-5.46643, 10.56074], [-5.51058, 10.43177], [-5.39602, 10.2929], [-5.12465, 10.29788], [-4.96453, 9.99923], [-4.96621, 9.89132], [-4.6426, 9.70696], [-4.31392, 9.60062], [-4.25999, 9.76012], [-3.69703, 9.94279], [-3.31779, 9.91125], [-3.27228, 9.84981], [-3.19306, 9.93781], [-3.16609, 9.85147], [-3.00765, 9.74019], [-2.93012, 9.57403], [-2.76494, 9.40778], [-2.68802, 9.49343], [-2.76534, 9.56589], [-2.74174, 9.83172], [-2.83108, 10.40252], [-2.94232, 10.64281], [-2.83373, 11.0067], [-0.67143, 10.99811], [-0.61937, 10.91305], [-0.44298, 11.04292], [-0.42391, 11.11661], [-0.38219, 11.12596], [-0.35955, 11.07801], [-0.28566, 11.12713], [-0.27374, 11.17157], [-0.13493, 11.14075], [0.50388, 11.01011], [0.48852, 10.98561], [0.50521, 10.98035], [0.4958, 10.93269], [0.66104, 10.99964], [0.91245, 10.99597], [0.9813, 11.08876], [1.03409, 11.04719], [1.42823, 11.46822], [2.00988, 11.42227], [2.29983, 11.68254], [2.39723, 11.89473], [2.05785, 12.35539], [2.26349, 12.41915], [0.99167, 13.10727], [0.99253, 13.37515], [1.18873, 13.31771], [1.21217, 13.37853], [1.24516, 13.33968], [1.28509, 13.35488], [1.24429, 13.39373], [1.20088, 13.38951], [1.02813, 13.46635], [0.99514, 13.5668], [0.77637, 13.64442], [0.77377, 13.6866], [0.61924, 13.68491], [0.38051, 14.05575], [0.16936, 14.51654], [0.23859, 15.00135]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BG\", iso1A3: \"BGR\", iso1N3: \"100\", wikidata: \"Q219\", nameEn: \"Bulgaria\", groups: [\"EU\", \"151\", \"150\", \"UN\"], callingCodes: [\"359\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[23.05288, 43.79494], [22.85314, 43.84452], [22.83753, 43.88055], [22.87873, 43.9844], [23.01674, 44.01946], [23.04988, 44.07694], [22.67173, 44.21564], [22.61711, 44.16938], [22.61688, 44.06534], [22.41449, 44.00514], [22.35558, 43.81281], [22.41043, 43.69566], [22.47582, 43.6558], [22.53397, 43.47225], [22.82036, 43.33665], [22.89727, 43.22417], [23.00806, 43.19279], [22.98104, 43.11199], [22.89521, 43.03625], [22.78397, 42.98253], [22.74826, 42.88701], [22.54302, 42.87774], [22.43309, 42.82057], [22.4997, 42.74144], [22.43983, 42.56851], [22.55669, 42.50144], [22.51961, 42.3991], [22.47498, 42.3915], [22.45919, 42.33822], [22.34773, 42.31725], [22.38136, 42.30339], [22.47251, 42.20393], [22.50289, 42.19527], [22.51224, 42.15457], [22.67701, 42.06614], [22.86749, 42.02275], [22.90254, 41.87587], [22.96682, 41.77137], [23.01239, 41.76527], [23.03342, 41.71034], [22.95513, 41.63265], [22.96331, 41.35782], [22.93334, 41.34104], [23.1833, 41.31755], [23.21953, 41.33773], [23.22771, 41.37106], [23.31301, 41.40525], [23.33639, 41.36317], [23.40416, 41.39999], [23.52453, 41.40262], [23.63203, 41.37632], [23.67644, 41.41139], [23.76525, 41.40175], [23.80148, 41.43943], [23.89613, 41.45257], [23.91483, 41.47971], [23.96975, 41.44118], [24.06908, 41.46132], [24.06323, 41.53222], [24.10063, 41.54796], [24.18126, 41.51735], [24.27124, 41.57682], [24.30513, 41.51297], [24.52599, 41.56808], [24.61129, 41.42278], [24.71529, 41.41928], [24.8041, 41.34913], [24.82514, 41.4035], [24.86136, 41.39298], [24.90928, 41.40876], [24.942, 41.38685], [25.11611, 41.34212], [25.28322, 41.23411], [25.48187, 41.28506], [25.52394, 41.2798], [25.55082, 41.31667], [25.61042, 41.30614], [25.66183, 41.31316], [25.70507, 41.29209], [25.8266, 41.34563], [25.87919, 41.30526], [26.12926, 41.35878], [26.16548, 41.42278], [26.20288, 41.43943], [26.14796, 41.47533], [26.176, 41.50072], [26.17951, 41.55409], [26.14328, 41.55496], [26.15146, 41.60828], [26.07083, 41.64584], [26.06148, 41.70345], [26.16841, 41.74858], [26.21325, 41.73223], [26.22888, 41.74139], [26.2654, 41.71544], [26.30255, 41.70925], [26.35957, 41.71149], [26.32952, 41.73637], [26.33589, 41.76802], [26.36952, 41.82265], [26.53968, 41.82653], [26.57961, 41.90024], [26.56051, 41.92995], [26.62996, 41.97644], [26.79143, 41.97386], [26.95638, 42.00741], [27.03277, 42.0809], [27.08486, 42.08735], [27.19251, 42.06028], [27.22376, 42.10152], [27.27411, 42.10409], [27.45478, 41.96591], [27.52379, 41.93756], [27.55191, 41.90928], [27.69949, 41.97515], [27.81235, 41.94803], [27.83492, 41.99709], [27.91479, 41.97902], [28.02971, 41.98066], [28.32297, 41.98371], [29.24336, 43.70874], [28.23293, 43.76], [27.99558, 43.84193], [27.92008, 44.00761], [27.73468, 43.95326], [27.64542, 44.04958], [27.60834, 44.01206], [27.39757, 44.0141], [27.26845, 44.12602], [26.95141, 44.13555], [26.62712, 44.05698], [26.38764, 44.04356], [26.10115, 43.96908], [26.05584, 43.90925], [25.94911, 43.85745], [25.72792, 43.69263], [25.39528, 43.61866], [25.17144, 43.70261], [25.10718, 43.6831], [24.96682, 43.72693], [24.73542, 43.68523], [24.62281, 43.74082], [24.50264, 43.76314], [24.35364, 43.70211], [24.18149, 43.68218], [23.73978, 43.80627], [23.61687, 43.79289], [23.4507, 43.84936], [23.26772, 43.84843], [23.05288, 43.79494]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BH\", iso1A3: \"BHR\", iso1N3: \"048\", wikidata: \"Q398\", nameEn: \"Bahrain\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"973\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[50.93865, 26.30758], [50.71771, 26.73086], [50.38162, 26.53976], [50.26923, 26.08243], [50.302, 25.87592], [50.57069, 25.57887], [50.80824, 25.54641], [50.7801, 25.595], [50.86149, 25.6965], [50.81266, 25.88946], [50.93865, 26.30758]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BI\", iso1A3: \"BDI\", iso1N3: \"108\", wikidata: \"Q967\", nameEn: \"Burundi\", groups: [\"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"257\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[30.54501, -2.41404], [30.42933, -2.31064], [30.14034, -2.43626], [29.95911, -2.33348], [29.88237, -2.75105], [29.36805, -2.82933], [29.32234, -2.6483], [29.0562, -2.58632], [29.04081, -2.7416], [29.00167, -2.78523], [29.00404, -2.81978], [29.0505, -2.81774], [29.09119, -2.87871], [29.09797, -2.91935], [29.16037, -2.95457], [29.17258, -2.99385], [29.25633, -3.05471], [29.21463, -3.3514], [29.23708, -3.75856], [29.43673, -4.44845], [29.63827, -4.44681], [29.75109, -4.45836], [29.77289, -4.41733], [29.82885, -4.36153], [29.88172, -4.35743], [30.03323, -4.26631], [30.22042, -4.01738], [30.45915, -3.56532], [30.84165, -3.25152], [30.83823, -2.97837], [30.6675, -2.98987], [30.57926, -2.89791], [30.4987, -2.9573], [30.40662, -2.86151], [30.52747, -2.65841], [30.41789, -2.66266], [30.54501, -2.41404]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BJ\", iso1A3: \"BEN\", iso1N3: \"204\", wikidata: \"Q962\", nameEn: \"Benin\", aliases: [\"DY\"], groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"229\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[3.59375, 11.70269], [3.48187, 11.86092], [3.31613, 11.88495], [3.25352, 12.01467], [2.83978, 12.40585], [2.6593, 12.30631], [2.37783, 12.24804], [2.39657, 12.10952], [2.45824, 11.98672], [2.39723, 11.89473], [2.29983, 11.68254], [2.00988, 11.42227], [1.42823, 11.46822], [1.03409, 11.04719], [0.9813, 11.08876], [0.91245, 10.99597], [0.8804, 10.803], [0.80358, 10.71459], [0.77666, 10.37665], [1.35507, 9.99525], [1.36624, 9.5951], [1.33675, 9.54765], [1.41746, 9.3226], [1.5649, 9.16941], [1.61838, 9.0527], [1.64249, 6.99562], [1.55877, 6.99737], [1.61812, 6.74843], [1.58105, 6.68619], [1.76906, 6.43189], [1.79826, 6.28221], [1.62913, 6.24075], [1.67336, 6.02702], [2.74181, 6.13349], [2.70566, 6.38038], [2.70464, 6.50831], [2.74334, 6.57291], [2.7325, 6.64057], [2.78204, 6.70514], [2.78823, 6.76356], [2.73405, 6.78508], [2.74024, 6.92802], [2.71702, 6.95722], [2.76965, 7.13543], [2.74489, 7.42565], [2.79442, 7.43486], [2.78668, 7.5116], [2.73405, 7.5423], [2.73095, 7.7755], [2.67523, 7.87825], [2.77907, 9.06924], [3.08017, 9.10006], [3.14147, 9.28375], [3.13928, 9.47167], [3.25093, 9.61632], [3.34726, 9.70696], [3.32099, 9.78032], [3.35383, 9.83641], [3.54429, 9.87739], [3.66908, 10.18136], [3.57275, 10.27185], [3.6844, 10.46351], [3.78292, 10.40538], [3.84243, 10.59316], [3.71505, 11.13015], [3.49175, 11.29765], [3.59375, 11.70269]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BL\", iso1A3: \"BLM\", iso1N3: \"652\", wikidata: \"Q25362\", nameEn: \"Saint-Barth\\xE9lemy\", country: \"FR\", groups: [\"EU\", \"Q1451600\", \"029\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"590\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-62.62718, 18.26185], [-63.1055, 17.86651], [-62.34423, 17.49165], [-62.62718, 18.26185]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BM\", iso1A3: \"BMU\", iso1N3: \"060\", wikidata: \"Q23635\", nameEn: \"Bermuda\", country: \"GB\", groups: [\"BOTS\", \"021\", \"003\", \"019\", \"UN\"], driveSide: \"left\", callingCodes: [\"1 441\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-63.20987, 32.6953], [-65.31453, 32.68437], [-65.63955, 31.43417], [-63.20987, 32.6953]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BN\", iso1A3: \"BRN\", iso1N3: \"096\", wikidata: \"Q921\", nameEn: \"Brunei\", groups: [\"Q36117\", \"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"673\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[115.16236, 5.01011], [115.02521, 5.35005], [114.10166, 4.76112], [114.07448, 4.58441], [114.15813, 4.57], [114.26876, 4.49878], [114.32176, 4.34942], [114.32176, 4.2552], [114.4416, 4.27588], [114.49922, 4.13108], [114.64211, 4.00694], [114.78539, 4.12205], [114.88039, 4.4257], [114.83189, 4.42387], [114.77303, 4.72871], [114.8266, 4.75062], [114.88841, 4.81905], [114.96982, 4.81146], [114.99417, 4.88201], [115.05038, 4.90275], [115.02955, 4.82087], [115.02278, 4.74137], [115.04064, 4.63706], [115.07737, 4.53418], [115.09978, 4.39123], [115.31275, 4.30806], [115.36346, 4.33563], [115.2851, 4.42295], [115.27819, 4.63661], [115.20737, 4.8256], [115.15092, 4.87604], [115.16236, 5.01011]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BO\", iso1A3: \"BOL\", iso1N3: \"068\", wikidata: \"Q750\", nameEn: \"Bolivia\", groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"591\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-63.90248, -12.52544], [-64.22539, -12.45267], [-64.30708, -12.46398], [-64.99778, -11.98604], [-65.30027, -11.48749], [-65.28141, -10.86289], [-65.35402, -10.78685], [-65.37923, -10.35141], [-65.29019, -9.86253], [-65.40615, -9.63894], [-65.56244, -9.84266], [-65.68343, -9.75323], [-67.17784, -10.34016], [-68.71533, -11.14749], [-68.7651, -11.0496], [-68.75179, -11.03688], [-68.75265, -11.02383], [-68.74802, -11.00891], [-69.42792, -10.93451], [-69.47839, -10.95254], [-69.57156, -10.94555], [-68.98115, -11.8979], [-68.65044, -12.50689], [-68.85615, -12.87769], [-68.8864, -13.40792], [-69.05265, -13.68546], [-68.88135, -14.18639], [-69.36254, -14.94634], [-69.14856, -15.23478], [-69.40336, -15.61358], [-69.20291, -16.16668], [-69.09986, -16.22693], [-68.96238, -16.194], [-68.79464, -16.33272], [-68.98358, -16.42165], [-69.04027, -16.57214], [-69.00853, -16.66769], [-69.16896, -16.72233], [-69.62883, -17.28142], [-69.46863, -17.37466], [-69.46897, -17.4988], [-69.46623, -17.60518], [-69.34126, -17.72753], [-69.28671, -17.94844], [-69.07496, -18.03715], [-69.14807, -18.16893], [-69.07432, -18.28259], [-68.94987, -18.93302], [-68.87082, -19.06003], [-68.80602, -19.08355], [-68.61989, -19.27584], [-68.41218, -19.40499], [-68.66761, -19.72118], [-68.54611, -19.84651], [-68.57132, -20.03134], [-68.74273, -20.08817], [-68.7276, -20.46178], [-68.44023, -20.62701], [-68.55383, -20.7355], [-68.53957, -20.91542], [-68.40403, -20.94562], [-68.18816, -21.28614], [-67.85114, -22.87076], [-67.54284, -22.89771], [-67.18382, -22.81525], [-66.7298, -22.23644], [-66.29714, -22.08741], [-66.24077, -21.77837], [-66.03836, -21.84829], [-66.04832, -21.9187], [-65.9261, -21.93335], [-65.7467, -22.10105], [-65.61166, -22.09504], [-65.58694, -22.09794], [-65.57743, -22.07675], [-65.47435, -22.08908], [-64.99524, -22.08255], [-64.90014, -22.12136], [-64.67174, -22.18957], [-64.58888, -22.25035], [-64.4176, -22.67692], [-64.35108, -22.73282], [-64.31489, -22.88824], [-64.22918, -22.55807], [-63.93287, -21.99934], [-63.70963, -21.99934], [-63.68113, -22.0544], [-63.66482, -21.99918], [-62.81124, -21.9987], [-62.8078, -22.12534], [-62.64455, -22.25091], [-62.2757, -21.06657], [-62.26883, -20.55311], [-61.93912, -20.10053], [-61.73723, -19.63958], [-60.00638, -19.2981], [-59.06965, -19.29148], [-58.23216, -19.80058], [-58.16225, -20.16193], [-57.8496, -19.98346], [-58.14215, -19.76276], [-57.78463, -19.03259], [-57.71113, -19.03161], [-57.69134, -19.00544], [-57.71995, -18.97546], [-57.71995, -18.89573], [-57.76764, -18.90087], [-57.56807, -18.25655], [-57.48237, -18.24219], [-57.69877, -17.8431], [-57.73949, -17.56095], [-57.90082, -17.44555], [-57.99661, -17.5273], [-58.32935, -17.28195], [-58.5058, -16.80958], [-58.30918, -16.3699], [-58.32431, -16.25861], [-58.41506, -16.32636], [-60.16069, -16.26479], [-60.23797, -15.50267], [-60.58224, -15.09887], [-60.23968, -15.09515], [-60.27887, -14.63021], [-60.46037, -14.22496], [-60.48053, -13.77981], [-61.05527, -13.50054], [-61.81151, -13.49564], [-63.76259, -12.42952], [-63.90248, -12.52544]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BQ\", iso1A3: \"BES\", iso1N3: \"535\", wikidata: \"Q27561\", nameEn: \"Caribbean Netherlands\", country: \"NL\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"BR\", iso1A3: \"BRA\", iso1N3: \"076\", wikidata: \"Q155\", nameEn: \"Brazil\", groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"55\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-59.69361, 4.34069], [-59.78878, 4.45637], [-60.15953, 4.53456], [-60.04189, 4.69801], [-59.98129, 5.07097], [-60.20944, 5.28754], [-60.32352, 5.21299], [-60.73204, 5.20931], [-60.5802, 4.94312], [-60.86539, 4.70512], [-60.98303, 4.54167], [-61.15703, 4.49839], [-61.31457, 4.54167], [-61.29675, 4.44216], [-61.48569, 4.43149], [-61.54629, 4.2822], [-62.13094, 4.08309], [-62.44822, 4.18621], [-62.57656, 4.04754], [-62.74411, 4.03331], [-62.7655, 3.73099], [-62.98296, 3.59935], [-63.21111, 3.96219], [-63.4464, 3.9693], [-63.42233, 3.89995], [-63.50611, 3.83592], [-63.67099, 4.01731], [-63.70218, 3.91417], [-63.86082, 3.94796], [-63.99183, 3.90172], [-64.14512, 4.12932], [-64.57648, 4.12576], [-64.72977, 4.28931], [-64.84028, 4.24665], [-64.48379, 3.7879], [-64.02908, 2.79797], [-64.0257, 2.48156], [-63.39114, 2.4317], [-63.39827, 2.16098], [-64.06135, 1.94722], [-64.08274, 1.64792], [-64.34654, 1.35569], [-64.38932, 1.5125], [-65.11657, 1.12046], [-65.57288, 0.62856], [-65.50158, 0.92086], [-65.6727, 1.01353], [-66.28507, 0.74585], [-66.85795, 1.22998], [-67.08222, 1.17441], [-67.15784, 1.80439], [-67.299, 1.87494], [-67.40488, 2.22258], [-67.9292, 1.82455], [-68.18632, 2.00091], [-68.26699, 1.83463], [-68.18128, 1.72881], [-69.38621, 1.70865], [-69.53746, 1.76408], [-69.83491, 1.69353], [-69.82987, 1.07864], [-69.26017, 1.06856], [-69.14422, 0.84172], [-69.20976, 0.57958], [-69.47696, 0.71065], [-70.04162, 0.55437], [-70.03658, -0.19681], [-69.603, -0.51947], [-69.59796, -0.75136], [-69.4215, -1.01853], [-69.43395, -1.42219], [-69.94708, -4.2431], [-70.00888, -4.37833], [-70.11305, -4.27281], [-70.19582, -4.3607], [-70.33236, -4.15214], [-70.77601, -4.15717], [-70.96814, -4.36915], [-71.87003, -4.51661], [-72.64391, -5.0391], [-72.83973, -5.14765], [-73.24579, -6.05764], [-73.12983, -6.43852], [-73.73986, -6.87919], [-73.77011, -7.28944], [-73.96938, -7.58465], [-73.65485, -7.77897], [-73.76576, -7.89884], [-72.92886, -9.04074], [-73.21498, -9.40904], [-72.72216, -9.41397], [-72.31883, -9.5184], [-72.14742, -9.98049], [-71.23394, -9.9668], [-70.53373, -9.42628], [-70.58453, -9.58303], [-70.55429, -9.76692], [-70.62487, -9.80666], [-70.64134, -11.0108], [-70.51395, -10.92249], [-70.38791, -11.07096], [-69.90896, -10.92744], [-69.57835, -10.94051], [-69.57156, -10.94555], [-69.47839, -10.95254], [-69.42792, -10.93451], [-68.74802, -11.00891], [-68.75265, -11.02383], [-68.75179, -11.03688], [-68.7651, -11.0496], [-68.71533, -11.14749], [-67.17784, -10.34016], [-65.68343, -9.75323], [-65.56244, -9.84266], [-65.40615, -9.63894], [-65.29019, -9.86253], [-65.37923, -10.35141], [-65.35402, -10.78685], [-65.28141, -10.86289], [-65.30027, -11.48749], [-64.99778, -11.98604], [-64.30708, -12.46398], [-64.22539, -12.45267], [-63.90248, -12.52544], [-63.76259, -12.42952], [-61.81151, -13.49564], [-61.05527, -13.50054], [-60.48053, -13.77981], [-60.46037, -14.22496], [-60.27887, -14.63021], [-60.23968, -15.09515], [-60.58224, -15.09887], [-60.23797, -15.50267], [-60.16069, -16.26479], [-58.41506, -16.32636], [-58.32431, -16.25861], [-58.30918, -16.3699], [-58.5058, -16.80958], [-58.32935, -17.28195], [-57.99661, -17.5273], [-57.90082, -17.44555], [-57.73949, -17.56095], [-57.69877, -17.8431], [-57.48237, -18.24219], [-57.56807, -18.25655], [-57.76764, -18.90087], [-57.71995, -18.89573], [-57.71995, -18.97546], [-57.69134, -19.00544], [-57.71113, -19.03161], [-57.78463, -19.03259], [-58.14215, -19.76276], [-57.8496, -19.98346], [-58.16225, -20.16193], [-57.84536, -20.93155], [-57.93492, -21.65505], [-57.88239, -21.6868], [-57.94642, -21.73799], [-57.98625, -22.09157], [-56.6508, -22.28387], [-56.5212, -22.11556], [-56.45893, -22.08072], [-56.23206, -22.25347], [-55.8331, -22.29008], [-55.74941, -22.46436], [-55.741, -22.52018], [-55.72366, -22.5519], [-55.6986, -22.56268], [-55.68742, -22.58407], [-55.62493, -22.62765], [-55.63849, -22.95122], [-55.5446, -23.22811], [-55.52288, -23.2595], [-55.5555, -23.28237], [-55.43585, -23.87157], [-55.44117, -23.9185], [-55.41784, -23.9657], [-55.12292, -23.99669], [-55.0518, -23.98666], [-55.02691, -23.97317], [-54.6238, -23.83078], [-54.32807, -24.01865], [-54.28207, -24.07305], [-54.4423, -25.13381], [-54.62033, -25.46026], [-54.60196, -25.48397], [-54.59509, -25.53696], [-54.59398, -25.59224], [-54.5502, -25.58915], [-54.52926, -25.62846], [-53.90831, -25.55513], [-53.83691, -25.94849], [-53.73511, -26.04211], [-53.73086, -26.05842], [-53.7264, -26.0664], [-53.73391, -26.07006], [-53.73968, -26.10012], [-53.65018, -26.19501], [-53.65237, -26.23289], [-53.63739, -26.2496], [-53.63881, -26.25075], [-53.64632, -26.24798], [-53.64186, -26.25976], [-53.64505, -26.28089], [-53.68269, -26.33359], [-53.73372, -26.6131], [-53.80144, -27.09844], [-54.15978, -27.2889], [-54.19062, -27.27639], [-54.19268, -27.30751], [-54.41888, -27.40882], [-54.50416, -27.48232], [-54.67657, -27.57214], [-54.90159, -27.63132], [-54.90805, -27.73149], [-55.1349, -27.89759], [-55.16872, -27.86224], [-55.33303, -27.94661], [-55.6262, -28.17124], [-55.65418, -28.18304], [-56.01729, -28.51223], [-56.00458, -28.60421], [-56.05265, -28.62651], [-56.54171, -29.11447], [-56.57295, -29.11357], [-56.62789, -29.18073], [-56.81251, -29.48154], [-57.09386, -29.74211], [-57.65132, -30.19229], [-57.22502, -30.26121], [-56.90236, -30.02578], [-56.49267, -30.39471], [-56.4795, -30.3899], [-56.4619, -30.38457], [-55.87388, -31.05053], [-55.58866, -30.84117], [-55.5634, -30.8686], [-55.55373, -30.8732], [-55.55218, -30.88193], [-55.54572, -30.89051], [-55.53431, -30.89714], [-55.53276, -30.90218], [-55.52712, -30.89997], [-55.51862, -30.89828], [-55.50841, -30.9027], [-55.50821, -30.91349], [-54.17384, -31.86168], [-53.76024, -32.0751], [-53.39572, -32.58596], [-53.37671, -32.57005], [-53.1111, -32.71147], [-53.53459, -33.16843], [-53.52794, -33.68908], [-53.44031, -33.69344], [-53.39593, -33.75169], [-53.37138, -33.74313], [-52.83257, -34.01481], [-28.34015, -20.99094], [-28.99601, 1.86593], [-51.35485, 4.8383], [-51.63798, 4.51394], [-51.61983, 4.14596], [-51.79599, 3.89336], [-51.82312, 3.85825], [-51.85573, 3.83427], [-52.31787, 3.17896], [-52.6906, 2.37298], [-52.96539, 2.1881], [-53.78743, 2.34412], [-54.16286, 2.10779], [-54.6084, 2.32856], [-55.01919, 2.564], [-55.71493, 2.40342], [-55.96292, 2.53188], [-56.13054, 2.27723], [-55.92159, 2.05236], [-55.89863, 1.89861], [-55.99278, 1.83137], [-56.47045, 1.95135], [-56.7659, 1.89509], [-57.07092, 1.95304], [-57.09109, 2.01854], [-57.23981, 1.95808], [-57.35073, 1.98327], [-57.55743, 1.69605], [-57.77281, 1.73344], [-57.97336, 1.64566], [-58.01873, 1.51966], [-58.33887, 1.58014], [-58.4858, 1.48399], [-58.53571, 1.29154], [-58.84229, 1.17749], [-58.92072, 1.31293], [-59.25583, 1.40559], [-59.74066, 1.87596], [-59.7264, 2.27497], [-59.91177, 2.36759], [-59.99733, 2.92312], [-59.79769, 3.37162], [-59.86899, 3.57089], [-59.51963, 3.91951], [-59.73353, 4.20399], [-59.69361, 4.34069]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BS\", iso1A3: \"BHS\", iso1N3: \"044\", wikidata: \"Q778\", nameEn: \"The Bahamas\", groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", callingCodes: [\"1 242\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-72.98446, 20.4801], [-71.70065, 25.7637], [-78.91214, 27.76553], [-80.65727, 23.71953], [-72.98446, 20.4801]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BT\", iso1A3: \"BTN\", iso1N3: \"064\", wikidata: \"Q917\", nameEn: \"Bhutan\", groups: [\"034\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"975\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[91.6469, 27.76358], [91.5629, 27.84823], [91.48973, 27.93903], [91.46327, 28.0064], [91.25779, 28.07509], [91.20019, 27.98715], [90.69894, 28.07784], [90.58842, 28.02838], [90.13387, 28.19178], [89.79762, 28.23979], [89.59525, 28.16433], [89.12825, 27.62502], [89.0582, 27.60985], [88.97213, 27.51671], [88.95355, 27.4106], [89.00216, 27.32532], [88.96947, 27.30319], [88.93678, 27.33777], [88.91901, 27.32483], [88.74219, 27.144], [88.86984, 27.10937], [88.8714, 26.97488], [88.92301, 26.99286], [88.95807, 26.92668], [89.09554, 26.89089], [89.12825, 26.81661], [89.1926, 26.81329], [89.37913, 26.86224], [89.38319, 26.85963], [89.3901, 26.84225], [89.42349, 26.83727], [89.63369, 26.74402], [89.86124, 26.73307], [90.04535, 26.72422], [90.30402, 26.85098], [90.39271, 26.90704], [90.48504, 26.8594], [90.67715, 26.77215], [91.50067, 26.79223], [91.83181, 26.87318], [92.05523, 26.8692], [92.11863, 26.893], [92.03457, 27.07334], [92.04702, 27.26861], [92.12019, 27.27829], [92.01132, 27.47352], [91.65007, 27.48287], [91.55819, 27.6144], [91.6469, 27.76358]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BV\", iso1A3: \"BVT\", iso1N3: \"074\", wikidata: \"Q23408\", nameEn: \"Bouvet Island\", country: \"NO\", groups: [\"005\", \"419\", \"019\", \"UN\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[4.54042, -54.0949], [2.28941, -54.13089], [3.35353, -55.17558], [4.54042, -54.0949]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BW\", iso1A3: \"BWA\", iso1N3: \"072\", wikidata: \"Q963\", nameEn: \"Botswana\", groups: [\"018\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"267\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[25.26433, -17.79571], [25.16882, -17.78253], [25.05895, -17.84452], [24.95586, -17.79674], [24.73364, -17.89338], [24.71887, -17.9218], [24.6303, -17.9863], [24.57485, -18.07151], [24.40577, -17.95726], [24.19416, -18.01919], [23.61088, -18.4881], [23.29618, -17.99855], [23.0996, -18.00075], [21.45556, -18.31795], [20.99904, -18.31743], [20.99751, -22.00026], [19.99912, -21.99991], [19.99817, -24.76768], [20.02809, -24.78725], [20.03678, -24.81004], [20.29826, -24.94869], [20.64795, -25.47827], [20.86081, -26.14892], [20.61754, -26.4692], [20.63275, -26.78181], [20.68596, -26.9039], [20.87031, -26.80047], [21.13353, -26.86661], [21.37869, -26.82083], [21.69322, -26.86152], [21.7854, -26.79199], [21.77114, -26.69015], [21.83291, -26.65959], [21.90703, -26.66808], [22.06192, -26.61882], [22.21206, -26.3773], [22.41921, -26.23078], [22.56365, -26.19668], [22.70808, -25.99186], [22.86012, -25.50572], [23.03497, -25.29971], [23.47588, -25.29971], [23.9244, -25.64286], [24.18287, -25.62916], [24.36531, -25.773], [24.44703, -25.73021], [24.67319, -25.81749], [24.8946, -25.80723], [25.01718, -25.72507], [25.12266, -25.75931], [25.33076, -25.76616], [25.58543, -25.6343], [25.6643, -25.4491], [25.69661, -25.29284], [25.72702, -25.25503], [25.88571, -24.87802], [25.84295, -24.78661], [25.8515, -24.75727], [26.39409, -24.63468], [26.46346, -24.60358], [26.51667, -24.47219], [26.84165, -24.24885], [26.99749, -23.65486], [27.33768, -23.40917], [27.52393, -23.37952], [27.6066, -23.21894], [27.74154, -23.2137], [27.93539, -23.04941], [27.93729, -22.96194], [28.04752, -22.90243], [28.04562, -22.8394], [28.34874, -22.5694], [28.63287, -22.55887], [28.91889, -22.44299], [29.0151, -22.22907], [29.10881, -22.21202], [29.15268, -22.21399], [29.18974, -22.18599], [29.21955, -22.17771], [29.37703, -22.19581], [29.3533, -22.18363], [29.24648, -22.05967], [29.1974, -22.07472], [29.14501, -22.07275], [29.08495, -22.04867], [29.04108, -22.00563], [29.02191, -21.95665], [29.02191, -21.90647], [29.04023, -21.85864], [29.07763, -21.81877], [28.58114, -21.63455], [28.49942, -21.66634], [28.29416, -21.59037], [28.01669, -21.57624], [27.91407, -21.31621], [27.69171, -21.08409], [27.72972, -20.51735], [27.69361, -20.48531], [27.28865, -20.49873], [27.29831, -20.28935], [27.21278, -20.08244], [26.72246, -19.92707], [26.17227, -19.53709], [25.96226, -19.08152], [25.99837, -19.02943], [25.94326, -18.90362], [25.82353, -18.82808], [25.79217, -18.6355], [25.68859, -18.56165], [25.53465, -18.39041], [25.39972, -18.12691], [25.31799, -18.07091], [25.23909, -17.90832], [25.26433, -17.79571]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BY\", iso1A3: \"BLR\", iso1N3: \"112\", wikidata: \"Q184\", nameEn: \"Belarus\", groups: [\"151\", \"150\", \"UN\"], callingCodes: [\"375\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[28.15217, 56.16964], [27.97865, 56.11849], [27.63065, 55.89687], [27.61683, 55.78558], [27.3541, 55.8089], [27.27804, 55.78299], [27.1559, 55.85032], [26.97153, 55.8102], [26.87448, 55.7172], [26.76872, 55.67658], [26.71802, 55.70645], [26.64888, 55.70515], [26.63231, 55.67968], [26.63167, 55.57887], [26.55094, 55.5093], [26.5522, 55.40277], [26.44937, 55.34832], [26.5709, 55.32572], [26.6714, 55.33902], [26.80929, 55.31642], [26.83266, 55.30444], [26.835, 55.28182], [26.73017, 55.24226], [26.72983, 55.21788], [26.68075, 55.19787], [26.69243, 55.16718], [26.54753, 55.14181], [26.51481, 55.16051], [26.46249, 55.12814], [26.35121, 55.1525], [26.30628, 55.12536], [26.23202, 55.10439], [26.26941, 55.08032], [26.20397, 54.99729], [26.13386, 54.98924], [26.05907, 54.94631], [25.99129, 54.95705], [25.89462, 54.93438], [25.74122, 54.80108], [25.75977, 54.57252], [25.68045, 54.5321], [25.64813, 54.48704], [25.62203, 54.4656], [25.63371, 54.42075], [25.5376, 54.33158], [25.55425, 54.31591], [25.68513, 54.31727], [25.78553, 54.23327], [25.78563, 54.15747], [25.71084, 54.16704], [25.64875, 54.1259], [25.54724, 54.14925], [25.51452, 54.17799], [25.56823, 54.25212], [25.509, 54.30267], [25.35559, 54.26544], [25.22705, 54.26271], [25.19199, 54.219], [25.0728, 54.13419], [24.991, 54.14241], [24.96894, 54.17589], [24.77131, 54.11091], [24.85311, 54.02862], [24.74279, 53.96663], [24.69185, 53.96543], [24.69652, 54.01901], [24.62275, 54.00217], [24.44411, 53.90076], [24.34128, 53.90076], [24.19638, 53.96405], [23.98837, 53.92554], [23.95098, 53.9613], [23.81309, 53.94205], [23.80543, 53.89558], [23.71726, 53.93379], [23.61677, 53.92691], [23.51284, 53.95052], [23.62004, 53.60942], [23.81995, 53.24131], [23.85657, 53.22923], [23.91393, 53.16469], [23.87548, 53.0831], [23.92184, 53.02079], [23.94689, 52.95919], [23.91805, 52.94016], [23.93763, 52.71332], [23.73615, 52.6149], [23.58296, 52.59868], [23.45112, 52.53774], [23.34141, 52.44845], [23.18196, 52.28812], [23.20071, 52.22848], [23.47859, 52.18215], [23.54314, 52.12148], [23.61, 52.11264], [23.64066, 52.07626], [23.68733, 51.9906], [23.61523, 51.92066], [23.62691, 51.78208], [23.53198, 51.74298], [23.57053, 51.55938], [23.56236, 51.53673], [23.62751, 51.50512], [23.6736, 51.50255], [23.60906, 51.62122], [23.7766, 51.66809], [23.91118, 51.63316], [23.8741, 51.59734], [23.99907, 51.58369], [24.13075, 51.66979], [24.3163, 51.75063], [24.29021, 51.80841], [24.37123, 51.88222], [24.98784, 51.91273], [25.20228, 51.97143], [25.46163, 51.92205], [25.73673, 51.91973], [25.80574, 51.94556], [25.83217, 51.92587], [26.00408, 51.92967], [26.19084, 51.86781], [26.39367, 51.87315], [26.46962, 51.80501], [26.69759, 51.82284], [26.80043, 51.75777], [26.9489, 51.73788], [26.99422, 51.76933], [27.20602, 51.77291], [27.20948, 51.66713], [27.26613, 51.65957], [27.24828, 51.60161], [27.47212, 51.61184], [27.51058, 51.5854], [27.55727, 51.63486], [27.71932, 51.60672], [27.67125, 51.50854], [27.76052, 51.47604], [27.85253, 51.62293], [27.91844, 51.61952], [27.95827, 51.56065], [28.10658, 51.57857], [28.23452, 51.66988], [28.37592, 51.54505], [28.47051, 51.59734], [28.64429, 51.5664], [28.69161, 51.44695], [28.73143, 51.46236], [28.75615, 51.41442], [28.78224, 51.45294], [28.76027, 51.48802], [28.81795, 51.55552], [28.95528, 51.59222], [28.99098, 51.56833], [29.1187, 51.65872], [29.16402, 51.64679], [29.20659, 51.56918], [29.25603, 51.57089], [29.25191, 51.49828], [29.32881, 51.37843], [29.42357, 51.4187], [29.49773, 51.39814], [29.54372, 51.48372], [29.7408, 51.53417], [29.77376, 51.4461], [30.17888, 51.51025], [30.34642, 51.42555], [30.36153, 51.33984], [30.56203, 51.25655], [30.64992, 51.35014], [30.51946, 51.59649], [30.68804, 51.82806], [30.76443, 51.89739], [30.90897, 52.00699], [30.95589, 52.07775], [31.13332, 52.1004], [31.25142, 52.04131], [31.38326, 52.12991], [31.7822, 52.11406], [31.77877, 52.18636], [31.6895, 52.1973], [31.70735, 52.26711], [31.57971, 52.32146], [31.62084, 52.33849], [31.61397, 52.48843], [31.56316, 52.51518], [31.63869, 52.55361], [31.50406, 52.69707], [31.57277, 52.71613], [31.592, 52.79011], [31.35667, 52.97854], [31.24147, 53.031], [31.32283, 53.04101], [31.33519, 53.08805], [31.3915, 53.09712], [31.36403, 53.13504], [31.40523, 53.21406], [31.56316, 53.19432], [31.62496, 53.22886], [31.787, 53.18033], [31.82373, 53.10042], [32.15368, 53.07594], [32.40773, 53.18856], [32.51725, 53.28431], [32.73257, 53.33494], [32.74968, 53.45597], [32.47777, 53.5548], [32.40499, 53.6656], [32.50112, 53.68594], [32.45717, 53.74039], [32.36663, 53.7166], [32.12621, 53.81586], [31.89137, 53.78099], [31.77028, 53.80015], [31.85019, 53.91801], [31.88744, 54.03653], [31.89599, 54.0837], [31.57002, 54.14535], [31.30791, 54.25315], [31.3177, 54.34067], [31.22945, 54.46585], [31.08543, 54.50361], [31.21399, 54.63113], [31.19339, 54.66947], [30.99187, 54.67046], [30.98226, 54.68872], [31.0262, 54.70698], [30.97127, 54.71967], [30.95479, 54.74346], [30.75165, 54.80699], [30.8264, 54.90062], [30.81759, 54.94064], [30.93144, 54.9585], [30.95754, 54.98609], [30.9081, 55.02232], [30.94243, 55.03964], [31.00972, 55.02783], [31.02071, 55.06167], [30.97369, 55.17134], [30.87944, 55.28223], [30.81946, 55.27931], [30.8257, 55.3313], [30.93144, 55.3914], [30.90123, 55.46621], [30.95204, 55.50667], [30.93419, 55.6185], [30.86003, 55.63169], [30.7845, 55.58514], [30.72957, 55.66268], [30.67464, 55.64176], [30.63344, 55.73079], [30.51037, 55.76568], [30.51346, 55.78982], [30.48257, 55.81066], [30.30987, 55.83592], [30.27776, 55.86819], [30.12136, 55.8358], [29.97975, 55.87281], [29.80672, 55.79569], [29.61446, 55.77716], [29.51283, 55.70294], [29.3604, 55.75862], [29.44692, 55.95978], [29.21717, 55.98971], [29.08299, 56.03427], [28.73418, 55.97131], [28.63668, 56.07262], [28.68337, 56.10173], [28.5529, 56.11705], [28.43068, 56.09407], [28.37987, 56.11399], [28.36888, 56.05805], [28.30571, 56.06035], [28.15217, 56.16964]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"BZ\", iso1A3: \"BLZ\", iso1N3: \"084\", wikidata: \"Q242\", nameEn: \"Belize\", groups: [\"013\", \"003\", \"419\", \"019\", \"UN\"], roadSpeedUnit: \"mph\", callingCodes: [\"501\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-88.3268, 18.49048], [-88.48242, 18.49164], [-88.71505, 18.0707], [-88.8716, 17.89535], [-89.03839, 18.0067], [-89.15105, 17.95104], [-89.14985, 17.81563], [-89.15025, 17.04813], [-89.22683, 15.88619], [-89.17418, 15.90898], [-89.02415, 15.9063], [-88.95358, 15.88698], [-88.40779, 16.09624], [-86.92368, 17.61462], [-87.84815, 18.18511], [-87.85693, 18.18266], [-87.86657, 18.19971], [-87.87604, 18.18313], [-87.90671, 18.15213], [-88.03165, 18.16657], [-88.03238, 18.41778], [-88.26593, 18.47617], [-88.29909, 18.47591], [-88.3268, 18.49048]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CA\", iso1A3: \"CAN\", iso1N3: \"124\", wikidata: \"Q16\", nameEn: \"Canada\", groups: [\"021\", \"003\", \"019\", \"UN\"], callingCodes: [\"1\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-67.20349, 45.1722], [-67.19603, 45.16771], [-67.15965, 45.16179], [-67.11316, 45.11176], [-67.0216, 44.95333], [-66.96824, 44.90965], [-66.98249, 44.87071], [-66.96824, 44.83078], [-66.93432, 44.82597], [-67.16117, 44.20069], [-61.98255, 37.34815], [-56.27503, 47.39728], [-53.12387, 41.40385], [-46.37635, 57.3249], [-77.52957, 77.23408], [-68.21821, 80.48551], [-49.33696, 84.57952], [-140.97446, 84.39275], [-141.00116, 60.30648], [-140.5227, 60.22077], [-140.45648, 60.30919], [-139.98024, 60.18027], [-139.68991, 60.33693], [-139.05831, 60.35205], [-139.20603, 60.08896], [-139.05365, 59.99655], [-138.71149, 59.90728], [-138.62145, 59.76431], [-137.60623, 59.24465], [-137.4925, 58.89415], [-136.82619, 59.16198], [-136.52365, 59.16752], [-136.47323, 59.46617], [-136.33727, 59.44466], [-136.22381, 59.55526], [-136.31566, 59.59083], [-135.48007, 59.79937], [-135.03069, 59.56208], [-135.00267, 59.28745], [-134.7047, 59.2458], [-134.55699, 59.1297], [-134.48059, 59.13231], [-134.27175, 58.8634], [-133.84645, 58.73543], [-133.38523, 58.42773], [-131.8271, 56.62247], [-130.77769, 56.36185], [-130.33965, 56.10849], [-130.10173, 56.12178], [-130.00093, 56.00325], [-130.00857, 55.91344], [-130.15373, 55.74895], [-129.97513, 55.28029], [-130.08035, 55.21556], [-130.18765, 55.07744], [-130.27203, 54.97174], [-130.44184, 54.85377], [-130.64499, 54.76912], [-130.61931, 54.70835], [-133.92876, 54.62289], [-133.36909, 48.51151], [-125.03842, 48.53282], [-123.50039, 48.21223], [-123.15614, 48.35395], [-123.26565, 48.6959], [-123.0093, 48.76586], [-123.0093, 48.83186], [-123.32163, 49.00419], [-95.15355, 48.9996], [-95.15357, 49.384], [-95.12903, 49.37056], [-95.05825, 49.35311], [-95.01419, 49.35647], [-94.99532, 49.36579], [-94.95681, 49.37035], [-94.85381, 49.32492], [-94.8159, 49.32299], [-94.82487, 49.29483], [-94.77355, 49.11998], [-94.75017, 49.09931], [-94.687, 48.84077], [-94.70087, 48.8339], [-94.70486, 48.82365], [-94.69669, 48.80918], [-94.69335, 48.77883], [-94.58903, 48.71803], [-94.54885, 48.71543], [-94.53826, 48.70216], [-94.44258, 48.69223], [-94.4174, 48.71049], [-94.27153, 48.70232], [-94.25172, 48.68404], [-94.25104, 48.65729], [-94.23215, 48.65202], [-93.85769, 48.63284], [-93.83288, 48.62745], [-93.80676, 48.58232], [-93.80939, 48.52439], [-93.79267, 48.51631], [-93.66382, 48.51845], [-93.47022, 48.54357], [-93.44472, 48.59147], [-93.40693, 48.60948], [-93.39758, 48.60364], [-93.3712, 48.60599], [-93.33946, 48.62787], [-93.25391, 48.64266], [-92.94973, 48.60866], [-92.7287, 48.54005], [-92.6342, 48.54133], [-92.62747, 48.50278], [-92.69927, 48.49573], [-92.71323, 48.46081], [-92.65606, 48.43471], [-92.50712, 48.44921], [-92.45588, 48.40624], [-92.48147, 48.36609], [-92.37185, 48.22259], [-92.27167, 48.25046], [-92.30939, 48.31251], [-92.26662, 48.35651], [-92.202, 48.35252], [-92.14732, 48.36578], [-92.05339, 48.35958], [-91.98929, 48.25409], [-91.86125, 48.21278], [-91.71231, 48.19875], [-91.70451, 48.11805], [-91.55649, 48.10611], [-91.58025, 48.04339], [-91.45829, 48.07454], [-91.43248, 48.04912], [-91.25025, 48.08522], [-91.08016, 48.18096], [-90.87588, 48.2484], [-90.75045, 48.09143], [-90.56444, 48.12184], [-90.56312, 48.09488], [-90.07418, 48.11043], [-89.89974, 47.98109], [-89.77248, 48.02607], [-89.57972, 48.00023], [-89.48837, 48.01412], [-88.37033, 48.30586], [-84.85871, 46.88881], [-84.55635, 46.45974], [-84.47607, 46.45225], [-84.4481, 46.48972], [-84.42101, 46.49853], [-84.34174, 46.50683], [-84.29893, 46.49127], [-84.26351, 46.49508], [-84.2264, 46.53337], [-84.1945, 46.54061], [-84.17723, 46.52753], [-84.12885, 46.53068], [-84.11196, 46.50248], [-84.13451, 46.39218], [-84.11254, 46.32329], [-84.11615, 46.2681], [-84.09756, 46.25512], [-84.1096, 46.23987], [-83.95399, 46.05634], [-83.90453, 46.05922], [-83.83329, 46.12169], [-83.57017, 46.105], [-83.43746, 45.99749], [-83.59589, 45.82131], [-82.48419, 45.30225], [-82.42469, 42.992], [-82.4146, 42.97626], [-82.4253, 42.95423], [-82.45331, 42.93139], [-82.4826, 42.8068], [-82.46613, 42.76615], [-82.51063, 42.66025], [-82.51858, 42.611], [-82.57583, 42.5718], [-82.58873, 42.54984], [-82.64242, 42.55594], [-82.82964, 42.37355], [-83.02253, 42.33045], [-83.07837, 42.30978], [-83.09837, 42.28877], [-83.12724, 42.2376], [-83.14962, 42.04089], [-83.11184, 41.95671], [-82.67862, 41.67615], [-78.93684, 42.82887], [-78.90712, 42.89733], [-78.90905, 42.93022], [-78.93224, 42.95229], [-78.96312, 42.95509], [-78.98126, 42.97], [-79.02074, 42.98444], [-79.02424, 43.01983], [-78.99941, 43.05612], [-79.01055, 43.06659], [-79.07486, 43.07845], [-79.05671, 43.10937], [-79.06881, 43.12029], [-79.0427, 43.13934], [-79.04652, 43.16396], [-79.05384, 43.17418], [-79.05002, 43.20133], [-79.05544, 43.21224], [-79.05512, 43.25375], [-79.06921, 43.26183], [-79.25796, 43.54052], [-76.79706, 43.63099], [-76.43859, 44.09393], [-76.35324, 44.13493], [-76.31222, 44.19894], [-76.244, 44.19643], [-76.1664, 44.23051], [-76.16285, 44.28262], [-76.00018, 44.34896], [-75.95947, 44.34463], [-75.8217, 44.43176], [-75.76813, 44.51537], [-75.41441, 44.76614], [-75.2193, 44.87821], [-75.01363, 44.95608], [-74.99101, 44.98051], [-74.8447, 45.00606], [-74.66689, 45.00646], [-74.32699, 44.99029], [-73.35025, 45.00942], [-71.50067, 45.01357], [-71.48735, 45.07784], [-71.42778, 45.12624], [-71.40364, 45.21382], [-71.44252, 45.2361], [-71.37133, 45.24624], [-71.29371, 45.29996], [-71.22338, 45.25184], [-71.19723, 45.25438], [-71.14568, 45.24128], [-71.08364, 45.30623], [-71.01866, 45.31573], [-71.0107, 45.34819], [-70.95193, 45.33895], [-70.91169, 45.29849], [-70.89864, 45.2398], [-70.84816, 45.22698], [-70.80236, 45.37444], [-70.82638, 45.39828], [-70.78372, 45.43269], [-70.65383, 45.37592], [-70.62518, 45.42286], [-70.72651, 45.49771], [-70.68516, 45.56964], [-70.54019, 45.67291], [-70.38934, 45.73215], [-70.41523, 45.79497], [-70.25976, 45.89675], [-70.24694, 45.95138], [-70.31025, 45.96424], [-70.23855, 46.1453], [-70.29078, 46.18832], [-70.18547, 46.35357], [-70.05812, 46.41768], [-69.99966, 46.69543], [-69.22119, 47.46461], [-69.05148, 47.42012], [-69.05073, 47.30076], [-69.05039, 47.2456], [-68.89222, 47.1807], [-68.70125, 47.24399], [-68.60575, 47.24659], [-68.57914, 47.28431], [-68.38332, 47.28723], [-68.37458, 47.35851], [-68.23244, 47.35712], [-67.94843, 47.1925], [-67.87993, 47.10377], [-67.78578, 47.06473], [-67.78111, 45.9392], [-67.75196, 45.91814], [-67.80961, 45.87531], [-67.75654, 45.82324], [-67.80653, 45.80022], [-67.80705, 45.69528], [-67.6049, 45.60725], [-67.43815, 45.59162], [-67.42144, 45.50584], [-67.50578, 45.48971], [-67.42394, 45.37969], [-67.48201, 45.27351], [-67.34927, 45.122], [-67.29754, 45.14865], [-67.29748, 45.18173], [-67.27039, 45.1934], [-67.22751, 45.16344], [-67.20349, 45.1722]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CC\", iso1A3: \"CCK\", iso1N3: \"166\", wikidata: \"Q36004\", nameEn: \"Cocos (Keeling) Islands\", country: \"AU\", groups: [\"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"61\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[96.61846, -10.82438], [96.02343, -12.68334], [97.93979, -12.33309], [96.61846, -10.82438]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CD\", iso1A3: \"COD\", iso1N3: \"180\", wikidata: \"Q974\", nameEn: \"Democratic Republic of the Congo\", aliases: [\"ZR\"], groups: [\"017\", \"202\", \"002\", \"UN\"], callingCodes: [\"243\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[27.44012, 5.07349], [27.09575, 5.22305], [26.93064, 5.13535], [26.85579, 5.03887], [26.74572, 5.10685], [26.48595, 5.04984], [26.13371, 5.25594], [25.86073, 5.19455], [25.53271, 5.37431], [25.34558, 5.29101], [25.31256, 5.03668], [24.71816, 4.90509], [24.46719, 5.0915], [23.38847, 4.60013], [22.94817, 4.82392], [22.89094, 4.79321], [22.84691, 4.69887], [22.78526, 4.71423], [22.6928, 4.47285], [22.60915, 4.48821], [22.5431, 4.22041], [22.45504, 4.13039], [22.27682, 4.11347], [22.10721, 4.20723], [21.6405, 4.317], [21.55904, 4.25553], [21.25744, 4.33676], [21.21341, 4.29285], [21.11214, 4.33895], [21.08793, 4.39603], [20.90383, 4.44877], [20.60184, 4.42394], [18.62755, 3.47564], [18.63857, 3.19342], [18.10683, 2.26876], [18.08034, 1.58553], [17.85887, 1.04327], [17.86989, 0.58873], [17.95255, 0.48128], [17.93877, 0.32424], [17.81204, 0.23884], [17.66051, -0.26535], [17.72112, -0.52707], [17.32438, -0.99265], [16.97999, -1.12762], [16.70724, -1.45815], [16.50336, -1.8795], [16.16173, -2.16586], [16.22785, -2.59528], [16.1755, -3.25014], [16.21407, -3.2969], [15.89448, -3.9513], [15.53081, -4.042], [15.48121, -4.22062], [15.41785, -4.28381], [15.32693, -4.27282], [15.25411, -4.31121], [15.1978, -4.32388], [14.83101, -4.80838], [14.67948, -4.92093], [14.5059, -4.84956], [14.41499, -4.8825], [14.37366, -4.56125], [14.47284, -4.42941], [14.3957, -4.36623], [14.40672, -4.28381], [13.9108, -4.50906], [13.81162, -4.41842], [13.71794, -4.44864], [13.70417, -4.72601], [13.50305, -4.77818], [13.41764, -4.89897], [13.11182, -4.5942], [13.09648, -4.63739], [13.11195, -4.67745], [12.8733, -4.74346], [12.70868, -4.95505], [12.63465, -4.94632], [12.60251, -5.01715], [12.46297, -5.09408], [12.49815, -5.14058], [12.51589, -5.1332], [12.53586, -5.14658], [12.53599, -5.1618], [12.52301, -5.17481], [12.52318, -5.74353], [12.26557, -5.74031], [12.20376, -5.76338], [11.95767, -5.94705], [12.42245, -6.07585], [13.04371, -5.87078], [16.55507, -5.85631], [16.96282, -7.21787], [17.5828, -8.13784], [18.33635, -8.00126], [19.33698, -7.99743], [19.5469, -7.00195], [20.30218, -6.98955], [20.31846, -6.91953], [20.61689, -6.90876], [20.56263, -7.28566], [21.79824, -7.29628], [21.84856, -9.59871], [22.19039, -9.94628], [22.32604, -10.76291], [22.17954, -10.85884], [22.25951, -11.24911], [22.54205, -11.05784], [23.16602, -11.10577], [23.45631, -10.946], [23.86868, -11.02856], [24.00027, -10.89356], [24.34528, -11.06816], [24.42612, -11.44975], [25.34069, -11.19707], [25.33058, -11.65767], [26.01777, -11.91488], [26.88687, -12.01868], [27.04351, -11.61312], [27.22541, -11.60323], [27.21025, -11.76157], [27.59932, -12.22123], [28.33199, -12.41375], [29.01918, -13.41353], [29.60531, -13.21685], [29.65078, -13.41844], [29.81551, -13.44683], [29.8139, -12.14898], [29.48404, -12.23604], [29.4992, -12.43843], [29.18592, -12.37921], [28.48357, -11.87532], [28.37241, -11.57848], [28.65032, -10.65133], [28.62795, -9.92942], [28.68532, -9.78], [28.56208, -9.49122], [28.51627, -9.44726], [28.52636, -9.35379], [28.36562, -9.30091], [28.38526, -9.23393], [28.9711, -8.66935], [28.88917, -8.4831], [30.79243, -8.27382], [30.2567, -7.14121], [29.52552, -6.2731], [29.43673, -4.44845], [29.23708, -3.75856], [29.21463, -3.3514], [29.25633, -3.05471], [29.17258, -2.99385], [29.16037, -2.95457], [29.09797, -2.91935], [29.09119, -2.87871], [29.0505, -2.81774], [29.00404, -2.81978], [29.00167, -2.78523], [29.04081, -2.7416], [29.00357, -2.70596], [28.94346, -2.69124], [28.89793, -2.66111], [28.90226, -2.62385], [28.89288, -2.55848], [28.87943, -2.55165], [28.86193, -2.53185], [28.86209, -2.5231], [28.87497, -2.50887], [28.88846, -2.50493], [28.89342, -2.49017], [28.89132, -2.47557], [28.86846, -2.44866], [28.86826, -2.41888], [28.89601, -2.37321], [28.95642, -2.37321], [29.00051, -2.29001], [29.105, -2.27043], [29.17562, -2.12278], [29.11847, -1.90576], [29.24458, -1.69663], [29.24323, -1.66826], [29.36322, -1.50887], [29.45038, -1.5054], [29.53062, -1.40499], [29.59061, -1.39016], [29.58388, -0.89821], [29.63006, -0.8997], [29.62708, -0.71055], [29.67176, -0.55714], [29.67474, -0.47969], [29.65091, -0.46777], [29.72687, -0.08051], [29.7224, 0.07291], [29.77454, 0.16675], [29.81922, 0.16824], [29.87284, 0.39166], [29.97413, 0.52124], [29.95477, 0.64486], [29.98307, 0.84295], [30.1484, 0.89805], [30.22139, 0.99635], [30.24671, 1.14974], [30.48503, 1.21675], [31.30127, 2.11006], [31.28042, 2.17853], [31.20148, 2.2217], [31.1985, 2.29462], [31.12104, 2.27676], [31.07934, 2.30207], [31.06593, 2.35862], [30.96911, 2.41071], [30.91102, 2.33332], [30.83059, 2.42559], [30.74271, 2.43601], [30.75612, 2.5863], [30.8857, 2.83923], [30.8574, 2.9508], [30.77101, 3.04897], [30.84251, 3.26908], [30.93486, 3.40737], [30.94081, 3.50847], [30.85153, 3.48867], [30.85997, 3.5743], [30.80713, 3.60506], [30.78512, 3.67097], [30.56277, 3.62703], [30.57378, 3.74567], [30.55396, 3.84451], [30.47691, 3.83353], [30.27658, 3.95653], [30.22374, 3.93896], [30.1621, 4.10586], [30.06964, 4.13221], [29.79666, 4.37809], [29.82087, 4.56246], [29.49726, 4.7007], [29.43341, 4.50101], [29.22207, 4.34297], [29.03054, 4.48784], [28.8126, 4.48784], [28.6651, 4.42638], [28.20719, 4.35614], [27.79551, 4.59976], [27.76469, 4.79284], [27.65462, 4.89375], [27.56656, 4.89375], [27.44012, 5.07349]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CF\", iso1A3: \"CAF\", iso1N3: \"140\", wikidata: \"Q929\", nameEn: \"Central African Republic\", groups: [\"017\", \"202\", \"002\", \"UN\"], callingCodes: [\"236\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[22.87758, 10.91915], [22.45889, 11.00246], [21.72139, 10.64136], [21.71479, 10.29932], [21.63553, 10.217], [21.52766, 10.2105], [21.34934, 9.95907], [21.26348, 9.97642], [20.82979, 9.44696], [20.36748, 9.11019], [19.06421, 9.00367], [18.86388, 8.87971], [19.11044, 8.68172], [18.79783, 8.25929], [18.67455, 8.22226], [18.62612, 8.14163], [18.64153, 8.08714], [18.6085, 8.05009], [18.02731, 8.01085], [17.93926, 7.95853], [17.67288, 7.98905], [16.8143, 7.53971], [16.6668, 7.67281], [16.658, 7.75353], [16.59415, 7.76444], [16.58315, 7.88657], [16.41583, 7.77971], [16.40703, 7.68809], [15.79942, 7.44149], [15.73118, 7.52006], [15.49743, 7.52179], [15.23397, 7.25135], [15.04717, 6.77085], [14.96311, 6.75693], [14.79966, 6.39043], [14.80122, 6.34866], [14.74206, 6.26356], [14.56149, 6.18928], [14.43073, 6.08867], [14.42917, 6.00508], [14.49455, 5.91683], [14.60974, 5.91838], [14.62375, 5.70466], [14.58951, 5.59777], [14.62531, 5.51411], [14.52724, 5.28319], [14.57083, 5.23979], [14.65489, 5.21343], [14.73383, 4.6135], [15.00825, 4.41458], [15.08609, 4.30282], [15.10644, 4.1362], [15.17482, 4.05131], [15.07686, 4.01805], [15.73522, 3.24348], [15.77725, 3.26835], [16.05449, 3.02306], [16.08252, 2.45708], [16.19357, 2.21537], [16.50126, 2.84739], [16.46701, 2.92512], [16.57598, 3.47999], [16.68283, 3.54257], [17.01746, 3.55136], [17.35649, 3.63045], [17.46876, 3.70515], [17.60966, 3.63705], [17.83421, 3.61068], [17.85842, 3.53378], [18.05656, 3.56893], [18.14902, 3.54476], [18.17323, 3.47665], [18.24148, 3.50302], [18.2723, 3.57992], [18.39558, 3.58212], [18.49245, 3.63924], [18.58711, 3.49423], [18.62755, 3.47564], [20.60184, 4.42394], [20.90383, 4.44877], [21.08793, 4.39603], [21.11214, 4.33895], [21.21341, 4.29285], [21.25744, 4.33676], [21.55904, 4.25553], [21.6405, 4.317], [22.10721, 4.20723], [22.27682, 4.11347], [22.45504, 4.13039], [22.5431, 4.22041], [22.60915, 4.48821], [22.6928, 4.47285], [22.78526, 4.71423], [22.84691, 4.69887], [22.89094, 4.79321], [22.94817, 4.82392], [23.38847, 4.60013], [24.46719, 5.0915], [24.71816, 4.90509], [25.31256, 5.03668], [25.34558, 5.29101], [25.53271, 5.37431], [25.86073, 5.19455], [26.13371, 5.25594], [26.48595, 5.04984], [26.74572, 5.10685], [26.85579, 5.03887], [26.93064, 5.13535], [27.09575, 5.22305], [27.44012, 5.07349], [27.26886, 5.25876], [27.23017, 5.37167], [27.28621, 5.56382], [27.22705, 5.62889], [27.22705, 5.71254], [26.51721, 6.09655], [26.58259, 6.1987], [26.32729, 6.36272], [26.38022, 6.63493], [25.90076, 7.09549], [25.37461, 7.33024], [25.35281, 7.42595], [25.20337, 7.50312], [25.20649, 7.61115], [25.29214, 7.66675], [25.25319, 7.8487], [24.98855, 7.96588], [24.85156, 8.16933], [24.35965, 8.26177], [24.13238, 8.36959], [24.25691, 8.69288], [23.51905, 8.71749], [23.59065, 8.99743], [23.44744, 8.99128], [23.4848, 9.16959], [23.56263, 9.19418], [23.64358, 9.28637], [23.64981, 9.44303], [23.62179, 9.53823], [23.69155, 9.67566], [23.67164, 9.86923], [23.3128, 10.45214], [23.02221, 10.69235], [22.87758, 10.91915]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CG\", iso1A3: \"COG\", iso1N3: \"178\", wikidata: \"Q971\", nameEn: \"Republic of the Congo\", groups: [\"017\", \"202\", \"002\", \"UN\"], callingCodes: [\"242\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[18.62755, 3.47564], [18.58711, 3.49423], [18.49245, 3.63924], [18.39558, 3.58212], [18.2723, 3.57992], [18.24148, 3.50302], [18.17323, 3.47665], [18.14902, 3.54476], [18.05656, 3.56893], [17.85842, 3.53378], [17.83421, 3.61068], [17.60966, 3.63705], [17.46876, 3.70515], [17.35649, 3.63045], [17.01746, 3.55136], [16.68283, 3.54257], [16.57598, 3.47999], [16.46701, 2.92512], [16.50126, 2.84739], [16.19357, 2.21537], [16.15568, 2.18955], [16.08563, 2.19733], [16.05294, 1.9811], [16.14634, 1.70259], [16.02647, 1.65591], [16.02959, 1.76483], [15.48942, 1.98265], [15.34776, 1.91264], [15.22634, 2.03243], [15.00996, 1.98887], [14.61145, 2.17866], [13.29457, 2.16106], [13.13461, 1.57238], [13.25447, 1.32339], [13.15519, 1.23368], [13.89582, 1.4261], [14.25186, 1.39842], [14.48179, 0.9152], [14.26066, 0.57255], [14.10909, 0.58563], [13.88648, 0.26652], [13.90632, -0.2287], [14.06862, -0.20826], [14.2165, -0.38261], [14.41887, -0.44799], [14.52569, -0.57818], [14.41838, -1.89412], [14.25932, -1.97624], [14.23518, -2.15671], [14.16202, -2.23916], [14.23829, -2.33715], [14.10442, -2.49268], [13.85846, -2.46935], [13.92073, -2.35581], [13.75884, -2.09293], [13.47977, -2.43224], [13.02759, -2.33098], [12.82172, -1.91091], [12.61312, -1.8129], [12.44656, -1.92025], [12.47925, -2.32626], [12.04895, -2.41704], [11.96866, -2.33559], [11.74605, -2.39936], [11.57637, -2.33379], [11.64487, -2.61865], [11.5359, -2.85654], [11.64798, -2.81146], [11.80365, -3.00424], [11.70558, -3.0773], [11.70227, -3.17465], [11.96554, -3.30267], [11.8318, -3.5812], [11.92719, -3.62768], [11.87083, -3.71571], [11.68608, -3.68942], [11.57949, -3.52798], [11.48764, -3.51089], [11.22301, -3.69888], [11.12647, -3.94169], [10.75913, -4.39519], [11.50888, -5.33417], [12.00924, -5.02627], [12.16068, -4.90089], [12.20901, -4.75642], [12.25587, -4.79437], [12.32324, -4.78415], [12.40964, -4.60609], [12.64835, -4.55937], [12.76844, -4.38709], [12.87096, -4.40315], [12.91489, -4.47907], [13.09648, -4.63739], [13.11182, -4.5942], [13.41764, -4.89897], [13.50305, -4.77818], [13.70417, -4.72601], [13.71794, -4.44864], [13.81162, -4.41842], [13.9108, -4.50906], [14.40672, -4.28381], [14.3957, -4.36623], [14.47284, -4.42941], [14.37366, -4.56125], [14.41499, -4.8825], [14.5059, -4.84956], [14.67948, -4.92093], [14.83101, -4.80838], [15.1978, -4.32388], [15.25411, -4.31121], [15.32693, -4.27282], [15.41785, -4.28381], [15.48121, -4.22062], [15.53081, -4.042], [15.89448, -3.9513], [16.21407, -3.2969], [16.1755, -3.25014], [16.22785, -2.59528], [16.16173, -2.16586], [16.50336, -1.8795], [16.70724, -1.45815], [16.97999, -1.12762], [17.32438, -0.99265], [17.72112, -0.52707], [17.66051, -0.26535], [17.81204, 0.23884], [17.93877, 0.32424], [17.95255, 0.48128], [17.86989, 0.58873], [17.85887, 1.04327], [18.08034, 1.58553], [18.10683, 2.26876], [18.63857, 3.19342], [18.62755, 3.47564]]]] } },\n  { type: \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: [[[[8.72809, 47.69282], [8.72617, 47.69651], [8.73671, 47.7169], [8.70543, 47.73121], [8.74251, 47.75168], [8.71778, 47.76571], [8.68985, 47.75686], [8.68022, 47.78599], [8.65292, 47.80066], [8.64425, 47.76398], [8.62408, 47.7626], [8.61657, 47.79998], [8.56415, 47.80633], [8.56814, 47.78001], [8.48868, 47.77215], [8.45771, 47.7493], [8.44807, 47.72426], [8.40569, 47.69855], [8.4211, 47.68407], [8.40473, 47.67499], [8.41346, 47.66676], [8.42264, 47.66667], [8.44711, 47.65379], [8.4667, 47.65747], [8.46605, 47.64103], [8.49656, 47.64709], [8.5322, 47.64687], [8.52801, 47.66059], [8.56141, 47.67088], [8.57683, 47.66158], [8.6052, 47.67258], [8.61113, 47.66332], [8.62884, 47.65098], [8.62049, 47.63757], [8.60412, 47.63735], [8.61471, 47.64514], [8.60701, 47.65271], [8.59545, 47.64298], [8.60348, 47.61204], [8.57586, 47.59537], [8.55756, 47.62394], [8.51686, 47.63476], [8.50747, 47.61897], [8.45578, 47.60121], [8.46637, 47.58389], [8.48949, 47.588], [8.49431, 47.58107], [8.43235, 47.56617], [8.39477, 47.57826], [8.38273, 47.56608], [8.35512, 47.57014], [8.32735, 47.57133], [8.30277, 47.58607], [8.29524, 47.5919], [8.29722, 47.60603], [8.2824, 47.61225], [8.26313, 47.6103], [8.25863, 47.61571], [8.23809, 47.61204], [8.22577, 47.60385], [8.22011, 47.6181], [8.20617, 47.62141], [8.19378, 47.61636], [8.1652, 47.5945], [8.14947, 47.59558], [8.13823, 47.59147], [8.13662, 47.58432], [8.11543, 47.5841], [8.10395, 47.57918], [8.10002, 47.56504], [8.08557, 47.55768], [8.06663, 47.56374], [8.04383, 47.55443], [8.02136, 47.55096], [8.00113, 47.55616], [7.97581, 47.55493], [7.95682, 47.55789], [7.94494, 47.54511], [7.91251, 47.55031], [7.90673, 47.57674], [7.88664, 47.58854], [7.84412, 47.5841], [7.81901, 47.58798], [7.79486, 47.55691], [7.75261, 47.54599], [7.71961, 47.54219], [7.69642, 47.53297], [7.68101, 47.53232], [7.6656, 47.53752], [7.66174, 47.54554], [7.65083, 47.54662], [7.63338, 47.56256], [7.67655, 47.56435], [7.68904, 47.57133], [7.67115, 47.5871], [7.68486, 47.59601], [7.69385, 47.60099], [7.68229, 47.59905], [7.67395, 47.59212], [7.64599, 47.59695], [7.64213, 47.5944], [7.64309, 47.59151], [7.61929, 47.57683], [7.60459, 47.57869], [7.60523, 47.58519], [7.58945, 47.59017], [7.58386, 47.57536], [7.56684, 47.57785], [7.56548, 47.57617], [7.55689, 47.57232], [7.55652, 47.56779], [7.53634, 47.55553], [7.52831, 47.55347], [7.51723, 47.54578], [7.50873, 47.54546], [7.49691, 47.53821], [7.50588, 47.52856], [7.51904, 47.53515], [7.53199, 47.5284], [7.5229, 47.51644], [7.49804, 47.51798], [7.51076, 47.49651], [7.47534, 47.47932], [7.43356, 47.49712], [7.42923, 47.48628], [7.4583, 47.47216], [7.4462, 47.46264], [7.43088, 47.45846], [7.40308, 47.43638], [7.35603, 47.43432], [7.33526, 47.44186], [7.24669, 47.4205], [7.17026, 47.44312], [7.19583, 47.49455], [7.16249, 47.49025], [7.12781, 47.50371], [7.07425, 47.48863], [7.0231, 47.50522], [6.98425, 47.49432], [7.0024, 47.45264], [6.93953, 47.43388], [6.93744, 47.40714], [6.88542, 47.37262], [6.87959, 47.35335], [7.03125, 47.36996], [7.0564, 47.35134], [7.05305, 47.33304], [6.94316, 47.28747], [6.95108, 47.26428], [6.9508, 47.24338], [6.8489, 47.15933], [6.76788, 47.1208], [6.68823, 47.06616], [6.71531, 47.0494], [6.43341, 46.92703], [6.46456, 46.88865], [6.43216, 46.80336], [6.45209, 46.77502], [6.38351, 46.73171], [6.27135, 46.68251], [6.11084, 46.57649], [6.1567, 46.54402], [6.07269, 46.46244], [6.08427, 46.44305], [6.06407, 46.41676], [6.09926, 46.40768], [6.15016, 46.3778], [6.15985, 46.37721], [6.16987, 46.36759], [6.15738, 46.3491], [6.13876, 46.33844], [6.1198, 46.31157], [6.11697, 46.29547], [6.1013, 46.28512], [6.11926, 46.2634], [6.12446, 46.25059], [6.10071, 46.23772], [6.08563, 46.24651], [6.07072, 46.24085], [6.0633, 46.24583], [6.05029, 46.23518], [6.04602, 46.23127], [6.03342, 46.2383], [6.02461, 46.23313], [5.97542, 46.21525], [5.96515, 46.19638], [5.99573, 46.18587], [5.98846, 46.17046], [5.98188, 46.17392], [5.97508, 46.15863], [5.9641, 46.14412], [5.95781, 46.12925], [5.97893, 46.13303], [5.9871, 46.14499], [6.01791, 46.14228], [6.03614, 46.13712], [6.04564, 46.14031], [6.05203, 46.15191], [6.07491, 46.14879], [6.09199, 46.15191], [6.09926, 46.14373], [6.13397, 46.1406], [6.15305, 46.15194], [6.18116, 46.16187], [6.18871, 46.16644], [6.18707, 46.17999], [6.19552, 46.18401], [6.19807, 46.18369], [6.20539, 46.19163], [6.21114, 46.1927], [6.21273, 46.19409], [6.21603, 46.19507], [6.21844, 46.19837], [6.22222, 46.19888], [6.22175, 46.20045], [6.23544, 46.20714], [6.23913, 46.20511], [6.24821, 46.20531], [6.26007, 46.21165], [6.27694, 46.21566], [6.29663, 46.22688], [6.31041, 46.24417], [6.29474, 46.26221], [6.26749, 46.24745], [6.24952, 46.26255], [6.23775, 46.27822], [6.25137, 46.29014], [6.24826, 46.30175], [6.21981, 46.31304], [6.25432, 46.3632], [6.53358, 46.45431], [6.82312, 46.42661], [6.8024, 46.39171], [6.77152, 46.34784], [6.86052, 46.28512], [6.78968, 46.14058], [6.89321, 46.12548], [6.87868, 46.03855], [6.93862, 46.06502], [7.00946, 45.9944], [7.04151, 45.92435], [7.10685, 45.85653], [7.56343, 45.97421], [7.85949, 45.91485], [7.9049, 45.99945], [7.98881, 45.99867], [8.02906, 46.10331], [8.11383, 46.11577], [8.16866, 46.17817], [8.08814, 46.26692], [8.31162, 46.38044], [8.30648, 46.41587], [8.42464, 46.46367], [8.46317, 46.43712], [8.45032, 46.26869], [8.62242, 46.12112], [8.75697, 46.10395], [8.80778, 46.10085], [8.85617, 46.0748], [8.79414, 46.00913], [8.78585, 45.98973], [8.79362, 45.99207], [8.8319, 45.9879], [8.85121, 45.97239], [8.86688, 45.96135], [8.88904, 45.95465], [8.93649, 45.86775], [8.94372, 45.86587], [8.93504, 45.86245], [8.91129, 45.8388], [8.94737, 45.84285], [8.9621, 45.83707], [8.99663, 45.83466], [9.00324, 45.82055], [9.0298, 45.82127], [9.03279, 45.82865], [9.03793, 45.83548], [9.03505, 45.83976], [9.04059, 45.8464], [9.04546, 45.84968], [9.06642, 45.8761], [9.09065, 45.89906], [8.99257, 45.9698], [9.01618, 46.04928], [9.24503, 46.23616], [9.29226, 46.32717], [9.25502, 46.43743], [9.28136, 46.49685], [9.36128, 46.5081], [9.40487, 46.46621], [9.45936, 46.50873], [9.46117, 46.37481], [9.57015, 46.2958], [9.71273, 46.29266], [9.73086, 46.35071], [9.95249, 46.38045], [10.07055, 46.21668], [10.14439, 46.22992], [10.17862, 46.25626], [10.10506, 46.3372], [10.165, 46.41051], [10.03715, 46.44479], [10.10307, 46.61003], [10.23674, 46.63484], [10.25309, 46.57432], [10.46136, 46.53164], [10.49375, 46.62049], [10.44686, 46.64162], [10.40475, 46.63671], [10.38659, 46.67847], [10.47197, 46.85698], [10.48376, 46.93891], [10.36933, 47.00212], [10.30031, 46.92093], [10.24128, 46.93147], [10.22675, 46.86942], [10.10715, 46.84296], [9.98058, 46.91434], [9.88266, 46.93343], [9.87935, 47.01337], [9.60717, 47.06091], [9.55721, 47.04762], [9.54041, 47.06495], [9.47548, 47.05257], [9.47139, 47.06402], [9.51362, 47.08505], [9.52089, 47.10019], [9.51044, 47.13727], [9.48774, 47.17402], [9.4891, 47.19346], [9.50318, 47.22153], [9.52406, 47.24959], [9.53116, 47.27029], [9.54773, 47.2809], [9.55857, 47.29919], [9.58513, 47.31334], [9.59978, 47.34671], [9.62476, 47.36639], [9.65427, 47.36824], [9.66243, 47.37136], [9.6711, 47.37824], [9.67445, 47.38429], [9.67334, 47.39191], [9.6629, 47.39591], [9.65136, 47.40504], [9.65043, 47.41937], [9.6446, 47.43233], [9.64483, 47.43842], [9.65863, 47.44847], [9.65728, 47.45383], [9.6423, 47.45599], [9.62475, 47.45685], [9.62158, 47.45858], [9.60841, 47.47178], [9.60484, 47.46358], [9.60205, 47.46165], [9.59482, 47.46305], [9.58208, 47.48344], [9.56312, 47.49495], [9.55125, 47.53629], [9.25619, 47.65939], [9.18203, 47.65598], [9.17593, 47.65399], [9.1755, 47.65584], [9.1705, 47.65513], [9.15181, 47.66904], [9.13845, 47.66389], [9.09891, 47.67801], [9.02093, 47.6868], [8.94093, 47.65596], [8.89946, 47.64769], [8.87625, 47.65441], [8.87383, 47.67045], [8.85065, 47.68209], [8.86989, 47.70504], [8.82002, 47.71458], [8.80663, 47.73821], [8.77309, 47.72059], [8.76965, 47.7075], [8.79966, 47.70222], [8.79511, 47.67462], [8.75856, 47.68969], [8.72809, 47.69282]], [[8.95861, 45.96485], [8.96668, 45.98436], [8.97741, 45.98317], [8.97604, 45.96151], [8.95861, 45.96485]], [[8.70847, 47.68904], [8.68985, 47.69552], [8.66837, 47.68437], [8.65769, 47.68928], [8.67508, 47.6979], [8.66416, 47.71367], [8.70237, 47.71453], [8.71773, 47.69088], [8.70847, 47.68904]]]] }, properties: { iso1A2: \"CH\", iso1A3: \"CHE\", iso1N3: \"756\", wikidata: \"Q39\", nameEn: \"Switzerland\", groups: [\"155\", \"150\", \"UN\"], callingCodes: [\"41\"] } },\n  { type: \"Feature\", properties: { iso1A2: \"CI\", iso1A3: \"CIV\", iso1N3: \"384\", wikidata: \"Q1008\", nameEn: \"C\\xF4te d'Ivoire\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"225\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-7.52774, 3.7105], [-3.34019, 4.17519], [-3.10675, 5.08515], [-3.11073, 5.12675], [-3.063, 5.13665], [-2.96554, 5.10397], [-2.95261, 5.12477], [-2.75502, 5.10657], [-2.73074, 5.1364], [-2.77625, 5.34621], [-2.72737, 5.34789], [-2.76614, 5.60963], [-2.85378, 5.65156], [-2.93132, 5.62137], [-2.96671, 5.6415], [-2.95323, 5.71865], [-3.01896, 5.71697], [-3.25999, 6.62521], [-3.21954, 6.74407], [-3.23327, 6.81744], [-2.95438, 7.23737], [-2.97822, 7.27165], [-2.92339, 7.60847], [-2.79467, 7.86002], [-2.78395, 7.94974], [-2.74819, 7.92613], [-2.67787, 8.02055], [-2.61232, 8.02645], [-2.62901, 8.11495], [-2.49037, 8.20872], [-2.58243, 8.7789], [-2.66357, 9.01771], [-2.77799, 9.04949], [-2.69814, 9.22717], [-2.68802, 9.49343], [-2.76494, 9.40778], [-2.93012, 9.57403], [-3.00765, 9.74019], [-3.16609, 9.85147], [-3.19306, 9.93781], [-3.27228, 9.84981], [-3.31779, 9.91125], [-3.69703, 9.94279], [-4.25999, 9.76012], [-4.31392, 9.60062], [-4.6426, 9.70696], [-4.96621, 9.89132], [-4.96453, 9.99923], [-5.12465, 10.29788], [-5.39602, 10.2929], [-5.51058, 10.43177], [-5.65135, 10.46767], [-5.78124, 10.43952], [-5.99478, 10.19694], [-6.18851, 10.24244], [-6.1731, 10.46983], [-6.24795, 10.74248], [-6.325, 10.68624], [-6.40646, 10.69922], [-6.42847, 10.5694], [-6.52974, 10.59104], [-6.63541, 10.66893], [-6.68164, 10.35074], [-6.93921, 10.35291], [-7.01186, 10.25111], [-6.97444, 10.21644], [-7.00966, 10.15794], [-7.0603, 10.14711], [-7.13331, 10.24877], [-7.3707, 10.24677], [-7.44555, 10.44602], [-7.52261, 10.4655], [-7.54462, 10.40921], [-7.63048, 10.46334], [-7.92107, 10.15577], [-7.97971, 10.17117], [-8.01225, 10.1021], [-8.11921, 10.04577], [-8.15652, 9.94288], [-8.09434, 9.86936], [-8.14657, 9.55062], [-8.03463, 9.39604], [-7.85056, 9.41812], [-7.90777, 9.20456], [-7.73862, 9.08422], [-7.92518, 8.99332], [-7.95503, 8.81146], [-7.69882, 8.66148], [-7.65653, 8.36873], [-7.92518, 8.50652], [-8.22991, 8.48438], [-8.2411, 8.24196], [-8.062, 8.16071], [-7.98675, 8.20134], [-7.99919, 8.11023], [-7.94695, 8.00925], [-8.06449, 8.04989], [-8.13414, 7.87991], [-8.09931, 7.78626], [-8.21374, 7.54466], [-8.4003, 7.6285], [-8.47114, 7.55676], [-8.41935, 7.51203], [-8.37458, 7.25794], [-8.29249, 7.1691], [-8.31736, 6.82837], [-8.59456, 6.50612], [-8.48652, 6.43797], [-8.45666, 6.49977], [-8.38453, 6.35887], [-8.3298, 6.36381], [-8.17557, 6.28222], [-8.00642, 6.31684], [-7.90692, 6.27728], [-7.83478, 6.20309], [-7.8497, 6.08932], [-7.79747, 6.07696], [-7.78254, 5.99037], [-7.70294, 5.90625], [-7.67309, 5.94337], [-7.48155, 5.80974], [-7.46165, 5.84934], [-7.43677, 5.84687], [-7.43926, 5.74787], [-7.37209, 5.61173], [-7.43428, 5.42355], [-7.36463, 5.32944], [-7.46165, 5.26256], [-7.48901, 5.14118], [-7.55369, 5.08667], [-7.53876, 4.94294], [-7.59349, 4.8909], [-7.53259, 4.35145], [-7.52774, 3.7105]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CK\", iso1A3: \"COK\", iso1N3: \"184\", wikidata: \"Q26988\", nameEn: \"Cook Islands\", country: \"NZ\", groups: [\"061\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"682\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-168.15106, -10.26955], [-156.45576, -31.75456], [-156.48634, -15.52824], [-156.50903, -7.4975], [-168.15106, -10.26955]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CL\", iso1A3: \"CHL\", iso1N3: \"152\", wikidata: \"Q298\", nameEn: \"Chile\", groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"56\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-68.60702, -52.65781], [-68.41683, -52.33516], [-69.97824, -52.00845], [-71.99889, -51.98018], [-72.33873, -51.59954], [-72.31343, -50.58411], [-73.15765, -50.78337], [-73.55259, -49.92488], [-73.45156, -49.79461], [-73.09655, -49.14342], [-72.56894, -48.81116], [-72.54042, -48.52392], [-72.27662, -48.28727], [-72.50478, -47.80586], [-71.94152, -47.13595], [-71.68577, -46.55385], [-71.75614, -45.61611], [-71.35687, -45.22075], [-72.06985, -44.81756], [-71.26418, -44.75684], [-71.16436, -44.46244], [-71.81318, -44.38097], [-71.64206, -43.64774], [-72.14828, -42.85321], [-72.15541, -42.15941], [-71.74901, -42.11711], [-71.92726, -40.72714], [-71.37826, -38.91474], [-70.89532, -38.6923], [-71.24279, -37.20264], [-70.95047, -36.4321], [-70.38008, -36.02375], [-70.49416, -35.24145], [-69.87386, -34.13344], [-69.88099, -33.34489], [-70.55832, -31.51559], [-70.14479, -30.36595], [-69.8596, -30.26131], [-69.99507, -29.28351], [-69.80969, -29.07185], [-69.66709, -28.44055], [-69.22504, -27.95042], [-68.77586, -27.16029], [-68.43363, -27.08414], [-68.27677, -26.90626], [-68.59048, -26.49861], [-68.56909, -26.28146], [-68.38372, -26.15353], [-68.57622, -25.32505], [-68.38372, -25.08636], [-68.56909, -24.69831], [-68.24825, -24.42596], [-67.33563, -24.04237], [-66.99632, -22.99839], [-67.18382, -22.81525], [-67.54284, -22.89771], [-67.85114, -22.87076], [-68.18816, -21.28614], [-68.40403, -20.94562], [-68.53957, -20.91542], [-68.55383, -20.7355], [-68.44023, -20.62701], [-68.7276, -20.46178], [-68.74273, -20.08817], [-68.57132, -20.03134], [-68.54611, -19.84651], [-68.66761, -19.72118], [-68.41218, -19.40499], [-68.61989, -19.27584], [-68.80602, -19.08355], [-68.87082, -19.06003], [-68.94987, -18.93302], [-69.07432, -18.28259], [-69.14807, -18.16893], [-69.07496, -18.03715], [-69.28671, -17.94844], [-69.34126, -17.72753], [-69.46623, -17.60518], [-69.46897, -17.4988], [-69.66483, -17.65083], [-69.79087, -17.65563], [-69.82868, -17.72048], [-69.75305, -17.94605], [-69.81607, -18.12582], [-69.96732, -18.25992], [-70.16394, -18.31737], [-70.31267, -18.31258], [-70.378, -18.3495], [-70.59118, -18.35072], [-113.52687, -26.52828], [-68.11646, -58.14883], [-66.07313, -55.19618], [-67.11046, -54.94199], [-67.46182, -54.92205], [-68.01394, -54.8753], [-68.60733, -54.9125], [-68.60702, -52.65781]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CM\", iso1A3: \"CMR\", iso1N3: \"120\", wikidata: \"Q1009\", nameEn: \"Cameroon\", groups: [\"017\", \"202\", \"002\", \"UN\"], callingCodes: [\"237\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[14.83314, 12.62963], [14.55058, 12.78256], [14.56101, 12.91036], [14.46881, 13.08259], [14.08251, 13.0797], [14.20204, 12.53405], [14.17523, 12.41916], [14.22215, 12.36533], [14.4843, 12.35223], [14.6474, 12.17466], [14.61612, 11.7798], [14.55207, 11.72001], [14.64591, 11.66166], [14.6124, 11.51283], [14.17821, 11.23831], [13.97489, 11.30258], [13.78945, 11.00154], [13.7403, 11.00593], [13.70753, 10.94451], [13.73434, 10.9255], [13.54964, 10.61236], [13.5705, 10.53183], [13.43644, 10.13326], [13.34111, 10.12299], [13.25025, 10.03647], [13.25323, 10.00127], [13.286, 9.9822], [13.27409, 9.93232], [13.24132, 9.91031], [13.25025, 9.86042], [13.29941, 9.8296], [13.25472, 9.76795], [13.22642, 9.57266], [13.02385, 9.49334], [12.85628, 9.36698], [12.91958, 9.33905], [12.90022, 9.11411], [12.81085, 8.91992], [12.79, 8.75361], [12.71701, 8.7595], [12.68722, 8.65938], [12.44146, 8.6152], [12.4489, 8.52536], [12.26123, 8.43696], [12.24782, 8.17904], [12.19271, 8.10826], [12.20909, 7.97553], [11.99908, 7.67302], [12.01844, 7.52981], [11.93205, 7.47812], [11.84864, 7.26098], [11.87396, 7.09398], [11.63117, 6.9905], [11.55818, 6.86186], [11.57755, 6.74059], [11.51499, 6.60892], [11.42264, 6.5882], [11.42041, 6.53789], [11.09495, 6.51717], [11.09644, 6.68437], [10.94302, 6.69325], [10.8179, 6.83377], [10.83727, 6.9358], [10.60789, 7.06885], [10.59746, 7.14719], [10.57214, 7.16345], [10.53639, 6.93432], [10.21466, 6.88996], [10.15135, 7.03781], [9.86314, 6.77756], [9.77824, 6.79088], [9.70674, 6.51717], [9.51757, 6.43874], [8.84209, 5.82562], [8.88156, 5.78857], [8.83687, 5.68483], [8.92029, 5.58403], [8.78027, 5.1243], [8.60302, 4.87353], [8.34397, 4.30689], [9.22018, 3.72052], [9.81162, 2.33797], [9.82123, 2.35097], [9.83754, 2.32428], [9.83238, 2.29079], [9.84716, 2.24676], [9.89012, 2.20457], [9.90749, 2.20049], [9.991, 2.16561], [11.3561, 2.17217], [11.37116, 2.29975], [13.28534, 2.25716], [13.29457, 2.16106], [14.61145, 2.17866], [15.00996, 1.98887], [15.22634, 2.03243], [15.34776, 1.91264], [15.48942, 1.98265], [16.02959, 1.76483], [16.02647, 1.65591], [16.14634, 1.70259], [16.05294, 1.9811], [16.08563, 2.19733], [16.15568, 2.18955], [16.19357, 2.21537], [16.08252, 2.45708], [16.05449, 3.02306], [15.77725, 3.26835], [15.73522, 3.24348], [15.07686, 4.01805], [15.17482, 4.05131], [15.10644, 4.1362], [15.08609, 4.30282], [15.00825, 4.41458], [14.73383, 4.6135], [14.65489, 5.21343], [14.57083, 5.23979], [14.52724, 5.28319], [14.62531, 5.51411], [14.58951, 5.59777], [14.62375, 5.70466], [14.60974, 5.91838], [14.49455, 5.91683], [14.42917, 6.00508], [14.43073, 6.08867], [14.56149, 6.18928], [14.74206, 6.26356], [14.80122, 6.34866], [14.79966, 6.39043], [14.96311, 6.75693], [15.04717, 6.77085], [15.23397, 7.25135], [15.49743, 7.52179], [15.56964, 7.58936], [15.59272, 7.7696], [15.50743, 7.79302], [15.20426, 8.50892], [15.09484, 8.65982], [14.83566, 8.80557], [14.35707, 9.19611], [14.37094, 9.2954], [13.97544, 9.6365], [14.01793, 9.73169], [14.1317, 9.82413], [14.20411, 10.00055], [14.4673, 10.00264], [14.80082, 9.93818], [14.95722, 9.97926], [15.05999, 9.94845], [15.14043, 9.99246], [15.24618, 9.99246], [15.41408, 9.92876], [15.68761, 9.99344], [15.50535, 10.1098], [15.30874, 10.31063], [15.23724, 10.47764], [15.14936, 10.53915], [15.15532, 10.62846], [15.06737, 10.80921], [15.09127, 10.87431], [15.04957, 11.02347], [15.10021, 11.04101], [15.0585, 11.40481], [15.13149, 11.5537], [15.06595, 11.71126], [15.11579, 11.79313], [15.04808, 11.8731], [15.05786, 12.0608], [15.0349, 12.10698], [15.00146, 12.1223], [14.96952, 12.0925], [14.89019, 12.16593], [14.90827, 12.3269], [14.83314, 12.62963]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CN\", iso1A3: \"CHN\", iso1N3: \"156\", wikidata: \"Q148\", nameEn: \"People's Republic of China\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"CO\", iso1A3: \"COL\", iso1N3: \"170\", wikidata: \"Q739\", nameEn: \"Colombia\", groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"57\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-71.19849, 12.65801], [-81.58685, 18.0025], [-82.06974, 14.49418], [-82.56142, 11.91792], [-78.79327, 9.93766], [-77.58292, 9.22278], [-77.32389, 8.81247], [-77.45064, 8.49991], [-77.17257, 7.97422], [-77.57185, 7.51147], [-77.72514, 7.72348], [-77.72157, 7.47612], [-77.81426, 7.48319], [-77.89178, 7.22681], [-78.06168, 7.07793], [-82.12561, 4.00341], [-78.87137, 1.47457], [-78.42749, 1.15389], [-77.85677, 0.80197], [-77.7148, 0.85003], [-77.68613, 0.83029], [-77.66416, 0.81604], [-77.67815, 0.73863], [-77.49984, 0.64476], [-77.52001, 0.40782], [-76.89177, 0.24736], [-76.4094, 0.24015], [-76.41215, 0.38228], [-76.23441, 0.42294], [-75.82927, 0.09578], [-75.25764, -0.11943], [-75.18513, -0.0308], [-74.42701, -0.50218], [-74.26675, -0.97229], [-73.65312, -1.26222], [-72.92587, -2.44514], [-71.75223, -2.15058], [-70.94377, -2.23142], [-70.04609, -2.73906], [-70.71396, -3.7921], [-70.52393, -3.87553], [-70.3374, -3.79505], [-69.94708, -4.2431], [-69.43395, -1.42219], [-69.4215, -1.01853], [-69.59796, -0.75136], [-69.603, -0.51947], [-70.03658, -0.19681], [-70.04162, 0.55437], [-69.47696, 0.71065], [-69.20976, 0.57958], [-69.14422, 0.84172], [-69.26017, 1.06856], [-69.82987, 1.07864], [-69.83491, 1.69353], [-69.53746, 1.76408], [-69.38621, 1.70865], [-68.18128, 1.72881], [-68.26699, 1.83463], [-68.18632, 2.00091], [-67.9292, 1.82455], [-67.40488, 2.22258], [-67.299, 1.87494], [-67.15784, 1.80439], [-67.08222, 1.17441], [-66.85795, 1.22998], [-67.21967, 2.35778], [-67.65696, 2.81691], [-67.85862, 2.79173], [-67.85862, 2.86727], [-67.30945, 3.38393], [-67.50067, 3.75812], [-67.62671, 3.74303], [-67.85358, 4.53249], [-67.83341, 5.31104], [-67.59141, 5.5369], [-67.63914, 5.64963], [-67.58558, 5.84537], [-67.43513, 5.98835], [-67.4625, 6.20625], [-67.60654, 6.2891], [-69.41843, 6.1072], [-70.10716, 6.96516], [-70.7596, 7.09799], [-71.03941, 6.98163], [-71.37234, 7.01588], [-71.42212, 7.03854], [-71.44118, 7.02116], [-71.82441, 7.04314], [-72.04895, 7.03837], [-72.19437, 7.37034], [-72.43132, 7.40034], [-72.47415, 7.48928], [-72.45321, 7.57232], [-72.47827, 7.65604], [-72.46763, 7.79518], [-72.44454, 7.86031], [-72.46183, 7.90682], [-72.45806, 7.91141], [-72.47042, 7.92306], [-72.48183, 7.92909], [-72.48801, 7.94329], [-72.47213, 7.96106], [-72.39137, 8.03534], [-72.35163, 8.01163], [-72.36987, 8.19976], [-72.4042, 8.36513], [-72.65474, 8.61428], [-72.77415, 9.10165], [-72.94052, 9.10663], [-73.02119, 9.27584], [-73.36905, 9.16636], [-72.98085, 9.85253], [-72.88002, 10.44309], [-72.4767, 11.1117], [-72.24983, 11.14138], [-71.9675, 11.65536], [-71.3275, 11.85], [-70.92579, 11.96275], [-71.19849, 12.65801]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CP\", iso1A3: \"CPT\", wikidata: \"Q161258\", nameEn: \"Clipperton Island\", country: \"FR\", groups: [\"EU\", \"013\", \"003\", \"019\", \"UN\"], isoStatus: \"excRes\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-110.36279, 9.79626], [-108.755, 9.84085], [-109.04145, 11.13245], [-110.36279, 9.79626]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CR\", iso1A3: \"CRI\", iso1N3: \"188\", wikidata: \"Q800\", nameEn: \"Costa Rica\", groups: [\"013\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"506\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-83.68276, 11.01562], [-83.66597, 10.79916], [-83.90838, 10.71161], [-84.68197, 11.07568], [-84.92439, 10.9497], [-85.60529, 11.22607], [-85.71223, 11.06868], [-86.14524, 11.09059], [-87.41779, 5.02401], [-82.94503, 7.93865], [-82.89978, 8.04083], [-82.89137, 8.05755], [-82.88641, 8.10219], [-82.9388, 8.26634], [-83.05209, 8.33394], [-82.93056, 8.43465], [-82.8679, 8.44042], [-82.8382, 8.48117], [-82.83322, 8.52464], [-82.83975, 8.54755], [-82.82739, 8.60153], [-82.8794, 8.6981], [-82.92068, 8.74832], [-82.91377, 8.774], [-82.88253, 8.83331], [-82.72126, 8.97125], [-82.93516, 9.07687], [-82.93516, 9.46741], [-82.84871, 9.4973], [-82.87919, 9.62645], [-82.77206, 9.59573], [-82.66667, 9.49746], [-82.61345, 9.49881], [-82.56507, 9.57279], [-82.51044, 9.65379], [-83.54024, 10.96805], [-83.68276, 11.01562]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CU\", iso1A3: \"CUB\", iso1N3: \"192\", wikidata: \"Q241\", nameEn: \"Cuba\", groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"53\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-73.62304, 20.6935], [-82.02215, 24.23074], [-85.77883, 21.92705], [-74.81171, 18.82201], [-73.62304, 20.6935]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CV\", iso1A3: \"CPV\", iso1N3: \"132\", wikidata: \"Q1011\", nameEn: \"Cape Verde\", groups: [\"Q105472\", \"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"238\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-28.81604, 14.57305], [-20.39702, 14.12816], [-23.37101, 19.134], [-28.81604, 14.57305]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CW\", iso1A3: \"CUW\", iso1N3: \"531\", wikidata: \"Q25279\", nameEn: \"Cura\\xE7ao\", aliases: [\"NL-CW\"], country: \"NL\", groups: [\"Q1451600\", \"029\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"599\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-68.90012, 12.62309], [-69.59009, 12.46019], [-68.99639, 11.79035], [-68.33524, 11.78151], [-68.90012, 12.62309]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CX\", iso1A3: \"CXR\", iso1N3: \"162\", wikidata: \"Q31063\", nameEn: \"Christmas Island\", country: \"AU\", groups: [\"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"61\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[105.66835, -9.31927], [104.67494, -11.2566], [106.66176, -11.14349], [105.66835, -9.31927]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CY\", iso1A3: \"CYP\", iso1N3: \"196\", wikidata: \"Q229\", nameEn: \"Republic of Cyprus\", groups: [\"Q644636\", \"EU\", \"145\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"357\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[32.46489, 35.48584], [30.15137, 34.08517], [32.74412, 34.43926], [32.75515, 34.64985], [32.76136, 34.68318], [32.79433, 34.67883], [32.82717, 34.70622], [32.86014, 34.70585], [32.86167, 34.68734], [32.9068, 34.66102], [32.91398, 34.67343], [32.93043, 34.67091], [32.92807, 34.66736], [32.93449, 34.66241], [32.93693, 34.67027], [32.94379, 34.67111], [32.94683, 34.67907], [32.95539, 34.68471], [32.99135, 34.68061], [32.98668, 34.67268], [32.99014, 34.65518], [32.97736, 34.65277], [32.97079, 34.66112], [32.95325, 34.66462], [32.94796, 34.6587], [32.94976, 34.65204], [32.95471, 34.64528], [32.95323, 34.64075], [32.95891, 34.62919], [32.96718, 34.63446], [32.96968, 34.64046], [33.0138, 34.64424], [33.26744, 34.49942], [33.83531, 34.73974], [33.70575, 34.97947], [33.70639, 34.99303], [33.71514, 35.00294], [33.69731, 35.01754], [33.69938, 35.03123], [33.67678, 35.03866], [33.63765, 35.03869], [33.61215, 35.0527], [33.59658, 35.03635], [33.567, 35.04803], [33.57478, 35.06049], [33.53975, 35.08151], [33.48915, 35.06594], [33.47666, 35.00701], [33.45256, 35.00288], [33.45178, 35.02078], [33.47825, 35.04103], [33.48136, 35.0636], [33.46813, 35.10564], [33.41675, 35.16325], [33.4076, 35.20062], [33.38575, 35.2018], [33.37248, 35.18698], [33.3717, 35.1788], [33.36569, 35.17479], [33.35612, 35.17402], [33.35596, 35.17942], [33.34964, 35.17803], [33.35056, 35.18328], [33.31955, 35.18096], [33.3072, 35.16816], [33.27068, 35.16815], [33.15138, 35.19504], [33.11105, 35.15639], [33.08249, 35.17319], [33.01192, 35.15639], [32.94471, 35.09422], [32.86406, 35.1043], [32.85733, 35.07742], [32.70779, 35.14127], [32.70947, 35.18328], [32.64864, 35.19967], [32.60361, 35.16647], [32.46489, 35.48584]]], [[[33.74144, 35.01053], [33.7492, 35.01319], [33.74983, 35.02274], [33.74265, 35.02329], [33.73781, 35.02181], [33.7343, 35.01178], [33.74144, 35.01053]]], [[[33.77312, 34.9976], [33.75994, 35.00113], [33.75682, 34.99916], [33.76605, 34.99543], [33.76738, 34.99188], [33.7778, 34.98981], [33.77843, 34.988], [33.78149, 34.98854], [33.78318, 34.98699], [33.78571, 34.98951], [33.78917, 34.98854], [33.79191, 34.98914], [33.78516, 34.99582], [33.77553, 34.99518], [33.77312, 34.9976]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"CZ\", iso1A3: \"CZE\", iso1N3: \"203\", wikidata: \"Q213\", nameEn: \"Czechia\", groups: [\"EU\", \"151\", \"150\", \"UN\"], callingCodes: [\"420\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[14.82803, 50.86966], [14.79139, 50.81438], [14.70661, 50.84096], [14.61993, 50.86049], [14.63434, 50.8883], [14.65259, 50.90513], [14.64802, 50.93241], [14.58024, 50.91443], [14.56374, 50.922], [14.59702, 50.96148], [14.59908, 50.98685], [14.58215, 50.99306], [14.56432, 51.01008], [14.53438, 51.00374], [14.53321, 51.01679], [14.49873, 51.02242], [14.50809, 51.0427], [14.49991, 51.04692], [14.49154, 51.04382], [14.49202, 51.02286], [14.45827, 51.03712], [14.41335, 51.02086], [14.30098, 51.05515], [14.25665, 50.98935], [14.28776, 50.97718], [14.32353, 50.98556], [14.32793, 50.97379], [14.30251, 50.96606], [14.31422, 50.95243], [14.39848, 50.93866], [14.38691, 50.89907], [14.30098, 50.88448], [14.27123, 50.89386], [14.24314, 50.88761], [14.22331, 50.86049], [14.02982, 50.80662], [13.98864, 50.8177], [13.89113, 50.78533], [13.89444, 50.74142], [13.82942, 50.7251], [13.76316, 50.73487], [13.70204, 50.71771], [13.65977, 50.73096], [13.52474, 50.70394], [13.53748, 50.67654], [13.5226, 50.64721], [13.49742, 50.63133], [13.46413, 50.60102], [13.42189, 50.61243], [13.37485, 50.64931], [13.37805, 50.627], [13.32264, 50.60317], [13.32594, 50.58009], [13.29454, 50.57904], [13.25158, 50.59268], [13.19043, 50.50237], [13.13424, 50.51709], [13.08301, 50.50132], [13.0312, 50.50944], [13.02038, 50.4734], [13.02147, 50.44763], [12.98433, 50.42016], [12.94058, 50.40944], [12.82465, 50.45738], [12.73476, 50.43237], [12.73044, 50.42268], [12.70731, 50.39948], [12.67261, 50.41949], [12.51356, 50.39694], [12.48747, 50.37278], [12.49214, 50.35228], [12.48256, 50.34784], [12.46643, 50.35527], [12.43722, 50.33774], [12.43371, 50.32506], [12.39924, 50.32302], [12.40158, 50.29521], [12.36594, 50.28289], [12.35425, 50.23993], [12.33263, 50.24367], [12.32445, 50.20442], [12.33847, 50.19432], [12.32596, 50.17146], [12.29232, 50.17524], [12.28063, 50.19544], [12.28755, 50.22429], [12.23943, 50.24594], [12.24791, 50.25525], [12.26953, 50.25189], [12.25119, 50.27079], [12.20823, 50.2729], [12.18013, 50.32146], [12.10907, 50.32041], [12.13716, 50.27396], [12.09287, 50.25032], [12.19335, 50.19997], [12.21484, 50.16399], [12.1917, 50.13434], [12.2073, 50.10315], [12.23709, 50.10213], [12.27433, 50.0771], [12.26111, 50.06331], [12.30798, 50.05719], [12.49908, 49.97305], [12.47264, 49.94222], [12.55197, 49.92094], [12.48256, 49.83575], [12.46603, 49.78882], [12.40489, 49.76321], [12.4462, 49.70233], [12.52553, 49.68415], [12.53544, 49.61888], [12.56188, 49.6146], [12.60155, 49.52887], [12.64782, 49.52565], [12.64121, 49.47628], [12.669, 49.42935], [12.71227, 49.42363], [12.75854, 49.3989], [12.78168, 49.34618], [12.88414, 49.33541], [12.88249, 49.35479], [12.94859, 49.34079], [13.03618, 49.30417], [13.02957, 49.27399], [13.05883, 49.26259], [13.17665, 49.16713], [13.17019, 49.14339], [13.20405, 49.12303], [13.23689, 49.11412], [13.28242, 49.1228], [13.39479, 49.04812], [13.40802, 48.98851], [13.50221, 48.93752], [13.50552, 48.97441], [13.58319, 48.96899], [13.61624, 48.9462], [13.67739, 48.87886], [13.73854, 48.88538], [13.76994, 48.83537], [13.78977, 48.83319], [13.8096, 48.77877], [13.84023, 48.76988], [14.06151, 48.66873], [14.01482, 48.63788], [14.09104, 48.5943], [14.20691, 48.5898], [14.33909, 48.55852], [14.43076, 48.58855], [14.4587, 48.64695], [14.56139, 48.60429], [14.60808, 48.62881], [14.66762, 48.58215], [14.71794, 48.59794], [14.72756, 48.69502], [14.80584, 48.73489], [14.80821, 48.77711], [14.81545, 48.7874], [14.94773, 48.76268], [14.95641, 48.75915], [14.9758, 48.76857], [14.98112, 48.77524], [14.9782, 48.7766], [14.98032, 48.77959], [14.95072, 48.79101], [14.98917, 48.90082], [14.97612, 48.96983], [14.99878, 49.01444], [15.15534, 48.99056], [15.16358, 48.94278], [15.26177, 48.95766], [15.28305, 48.98831], [15.34823, 48.98444], [15.48027, 48.94481], [15.51357, 48.91549], [15.61622, 48.89541], [15.6921, 48.85973], [15.75341, 48.8516], [15.78087, 48.87644], [15.84404, 48.86921], [16.06034, 48.75436], [16.37345, 48.729], [16.40915, 48.74576], [16.46134, 48.80865], [16.67008, 48.77699], [16.68518, 48.7281], [16.71883, 48.73806], [16.79779, 48.70998], [16.90354, 48.71541], [16.93955, 48.60371], [17.00215, 48.70887], [17.11202, 48.82925], [17.19355, 48.87602], [17.29054, 48.85546], [17.3853, 48.80936], [17.45671, 48.85004], [17.5295, 48.81117], [17.7094, 48.86721], [17.73126, 48.87885], [17.77944, 48.92318], [17.87831, 48.92679], [17.91814, 49.01784], [18.06885, 49.03157], [18.1104, 49.08624], [18.15022, 49.24518], [18.18456, 49.28909], [18.36446, 49.3267], [18.4139, 49.36517], [18.4084, 49.40003], [18.44686, 49.39467], [18.54848, 49.47059], [18.53063, 49.49022], [18.57183, 49.51162], [18.6144, 49.49824], [18.67757, 49.50895], [18.74761, 49.492], [18.84521, 49.51672], [18.84786, 49.5446], [18.80479, 49.6815], [18.72838, 49.68163], [18.69817, 49.70473], [18.62676, 49.71983], [18.62943, 49.74603], [18.62645, 49.75002], [18.61368, 49.75426], [18.61278, 49.7618], [18.57183, 49.83334], [18.60341, 49.86256], [18.57045, 49.87849], [18.57697, 49.91565], [18.54299, 49.92537], [18.54495, 49.9079], [18.53423, 49.89906], [18.41604, 49.93498], [18.33562, 49.94747], [18.33278, 49.92415], [18.31914, 49.91565], [18.27794, 49.93863], [18.27107, 49.96779], [18.21752, 49.97309], [18.20241, 49.99958], [18.10628, 50.00223], [18.07898, 50.04535], [18.03212, 50.06574], [18.00396, 50.04954], [18.04585, 50.03311], [18.04585, 50.01194], [18.00191, 50.01723], [17.86886, 49.97452], [17.77669, 50.02253], [17.7506, 50.07896], [17.6888, 50.12037], [17.66683, 50.10275], [17.59404, 50.16437], [17.70528, 50.18812], [17.76296, 50.23382], [17.72176, 50.25665], [17.74648, 50.29966], [17.69292, 50.32859], [17.67764, 50.28977], [17.58889, 50.27837], [17.3702, 50.28123], [17.34548, 50.2628], [17.34273, 50.32947], [17.27681, 50.32246], [17.19991, 50.3654], [17.19579, 50.38817], [17.14498, 50.38117], [17.1224, 50.39494], [16.89229, 50.45117], [16.85933, 50.41093], [16.90877, 50.38642], [16.94448, 50.31281], [16.99803, 50.30316], [17.02138, 50.27772], [16.99803, 50.25753], [17.02825, 50.23118], [17.00353, 50.21449], [16.98018, 50.24172], [16.8456, 50.20834], [16.7014, 50.09659], [16.63137, 50.1142], [16.55446, 50.16613], [16.56407, 50.21009], [16.42674, 50.32509], [16.39379, 50.3207], [16.3622, 50.34875], [16.36495, 50.37679], [16.30289, 50.38292], [16.28118, 50.36891], [16.22821, 50.41054], [16.21585, 50.40627], [16.19526, 50.43291], [16.31413, 50.50274], [16.34572, 50.49575], [16.44597, 50.58041], [16.33611, 50.66579], [16.23174, 50.67101], [16.20839, 50.63096], [16.10265, 50.66405], [16.02437, 50.60046], [15.98317, 50.61528], [16.0175, 50.63009], [15.97219, 50.69799], [15.87331, 50.67188], [15.81683, 50.75666], [15.73186, 50.73885], [15.43798, 50.80833], [15.3803, 50.77187], [15.36656, 50.83956], [15.2773, 50.8907], [15.27043, 50.97724], [15.2361, 50.99886], [15.1743, 50.9833], [15.16744, 51.01959], [15.11937, 50.99021], [15.10152, 51.01095], [15.06218, 51.02269], [15.03895, 51.0123], [15.02433, 51.0242], [14.96419, 50.99108], [15.01088, 50.97984], [14.99852, 50.86817], [14.82803, 50.86966]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"DE\", iso1A3: \"DEU\", iso1N3: \"276\", wikidata: \"Q183\", nameEn: \"Germany\", groups: [\"EU\", \"155\", \"150\", \"UN\"], callingCodes: [\"49\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[8.70847, 47.68904], [8.71773, 47.69088], [8.70237, 47.71453], [8.66416, 47.71367], [8.67508, 47.6979], [8.65769, 47.68928], [8.66837, 47.68437], [8.68985, 47.69552], [8.70847, 47.68904]]], [[[8.72617, 47.69651], [8.72809, 47.69282], [8.75856, 47.68969], [8.79511, 47.67462], [8.79966, 47.70222], [8.76965, 47.7075], [8.77309, 47.72059], [8.80663, 47.73821], [8.82002, 47.71458], [8.86989, 47.70504], [8.85065, 47.68209], [8.87383, 47.67045], [8.87625, 47.65441], [8.89946, 47.64769], [8.94093, 47.65596], [9.02093, 47.6868], [9.09891, 47.67801], [9.13845, 47.66389], [9.15181, 47.66904], [9.1705, 47.65513], [9.1755, 47.65584], [9.17593, 47.65399], [9.18203, 47.65598], [9.25619, 47.65939], [9.55125, 47.53629], [9.72736, 47.53457], [9.76748, 47.5934], [9.80254, 47.59419], [9.82591, 47.58158], [9.8189, 47.54688], [9.87499, 47.52953], [9.87733, 47.54688], [9.92407, 47.53111], [9.96029, 47.53899], [10.00003, 47.48216], [10.03859, 47.48927], [10.07131, 47.45531], [10.09001, 47.46005], [10.1052, 47.4316], [10.06897, 47.40709], [10.09819, 47.35724], [10.11805, 47.37228], [10.16362, 47.36674], [10.17648, 47.38889], [10.2127, 47.38019], [10.22774, 47.38904], [10.23757, 47.37609], [10.19998, 47.32832], [10.2147, 47.31014], [10.17648, 47.29149], [10.17531, 47.27167], [10.23257, 47.27088], [10.33424, 47.30813], [10.39851, 47.37623], [10.4324, 47.38494], [10.4359, 47.41183], [10.47446, 47.43318], [10.46278, 47.47901], [10.44291, 47.48453], [10.4324, 47.50111], [10.44992, 47.5524], [10.43473, 47.58394], [10.47329, 47.58552], [10.48849, 47.54057], [10.56912, 47.53584], [10.60337, 47.56755], [10.63456, 47.5591], [10.68832, 47.55752], [10.6965, 47.54253], [10.7596, 47.53228], [10.77596, 47.51729], [10.88814, 47.53701], [10.91268, 47.51334], [10.86945, 47.5015], [10.87061, 47.4786], [10.90918, 47.48571], [10.93839, 47.48018], [10.92437, 47.46991], [10.98513, 47.42882], [10.97111, 47.41617], [10.97111, 47.39561], [11.11835, 47.39719], [11.12536, 47.41222], [11.20482, 47.43198], [11.25157, 47.43277], [11.22002, 47.3964], [11.27844, 47.39956], [11.29597, 47.42566], [11.33804, 47.44937], [11.4175, 47.44621], [11.38128, 47.47465], [11.4362, 47.51413], [11.52618, 47.50939], [11.58578, 47.52281], [11.58811, 47.55515], [11.60681, 47.57881], [11.63934, 47.59202], [11.84052, 47.58354], [11.85572, 47.60166], [12.0088, 47.62451], [12.02282, 47.61033], [12.05788, 47.61742], [12.13734, 47.60639], [12.17824, 47.61506], [12.18145, 47.61019], [12.17737, 47.60121], [12.18568, 47.6049], [12.20398, 47.60667], [12.20801, 47.61082], [12.19895, 47.64085], [12.18507, 47.65984], [12.18347, 47.66663], [12.16769, 47.68167], [12.16217, 47.70105], [12.18303, 47.70065], [12.22571, 47.71776], [12.2542, 47.7433], [12.26238, 47.73544], [12.24017, 47.69534], [12.26004, 47.67725], [12.27991, 47.68827], [12.336, 47.69534], [12.37222, 47.68433], [12.43883, 47.6977], [12.44117, 47.6741], [12.50076, 47.62293], [12.53816, 47.63553], [12.57438, 47.63238], [12.6071, 47.6741], [12.7357, 47.6787], [12.77777, 47.66689], [12.76492, 47.64485], [12.82101, 47.61493], [12.77427, 47.58025], [12.80699, 47.54477], [12.84672, 47.54556], [12.85256, 47.52741], [12.9624, 47.47452], [12.98344, 47.48716], [12.9998, 47.46267], [13.04537, 47.49426], [13.03252, 47.53373], [13.05355, 47.56291], [13.04537, 47.58183], [13.06641, 47.58577], [13.06407, 47.60075], [13.09562, 47.63304], [13.07692, 47.68814], [13.01382, 47.72116], [12.98578, 47.7078], [12.92969, 47.71094], [12.91333, 47.7178], [12.90274, 47.72513], [12.91711, 47.74026], [12.9353, 47.74788], [12.94371, 47.76281], [12.93202, 47.77302], [12.96311, 47.79957], [12.98543, 47.82896], [13.00588, 47.84374], [12.94163, 47.92927], [12.93886, 47.94046], [12.93642, 47.94436], [12.93419, 47.94063], [12.92668, 47.93879], [12.91985, 47.94069], [12.9211, 47.95135], [12.91683, 47.95647], [12.87476, 47.96195], [12.8549, 48.01122], [12.76141, 48.07373], [12.74973, 48.10885], [12.7617, 48.12796], [12.78595, 48.12445], [12.80676, 48.14979], [12.82673, 48.15245], [12.8362, 48.15876], [12.836, 48.1647], [12.84475, 48.16556], [12.87126, 48.20318], [12.95306, 48.20629], [13.02083, 48.25689], [13.0851, 48.27711], [13.126, 48.27867], [13.18093, 48.29577], [13.26039, 48.29422], [13.30897, 48.31575], [13.40709, 48.37292], [13.43929, 48.43386], [13.42527, 48.45711], [13.45727, 48.51092], [13.43695, 48.55776], [13.45214, 48.56472], [13.46967, 48.55157], [13.50663, 48.57506], [13.50131, 48.58091], [13.51291, 48.59023], [13.57535, 48.55912], [13.59705, 48.57013], [13.62508, 48.55501], [13.65186, 48.55092], [13.66113, 48.53558], [13.72802, 48.51208], [13.74816, 48.53058], [13.7513, 48.5624], [13.76921, 48.55324], [13.80519, 48.58026], [13.80038, 48.59487], [13.82609, 48.62345], [13.81901, 48.6761], [13.81283, 48.68426], [13.81791, 48.69832], [13.79337, 48.71375], [13.81863, 48.73257], [13.82266, 48.75544], [13.84023, 48.76988], [13.8096, 48.77877], [13.78977, 48.83319], [13.76994, 48.83537], [13.73854, 48.88538], [13.67739, 48.87886], [13.61624, 48.9462], [13.58319, 48.96899], [13.50552, 48.97441], [13.50221, 48.93752], [13.40802, 48.98851], [13.39479, 49.04812], [13.28242, 49.1228], [13.23689, 49.11412], [13.20405, 49.12303], [13.17019, 49.14339], [13.17665, 49.16713], [13.05883, 49.26259], [13.02957, 49.27399], [13.03618, 49.30417], [12.94859, 49.34079], [12.88249, 49.35479], [12.88414, 49.33541], [12.78168, 49.34618], [12.75854, 49.3989], [12.71227, 49.42363], [12.669, 49.42935], [12.64121, 49.47628], [12.64782, 49.52565], [12.60155, 49.52887], [12.56188, 49.6146], [12.53544, 49.61888], [12.52553, 49.68415], [12.4462, 49.70233], [12.40489, 49.76321], [12.46603, 49.78882], [12.48256, 49.83575], [12.55197, 49.92094], [12.47264, 49.94222], [12.49908, 49.97305], [12.30798, 50.05719], [12.26111, 50.06331], [12.27433, 50.0771], [12.23709, 50.10213], [12.2073, 50.10315], [12.1917, 50.13434], [12.21484, 50.16399], [12.19335, 50.19997], [12.09287, 50.25032], [12.13716, 50.27396], [12.10907, 50.32041], [12.18013, 50.32146], [12.20823, 50.2729], [12.25119, 50.27079], [12.26953, 50.25189], [12.24791, 50.25525], [12.23943, 50.24594], [12.28755, 50.22429], [12.28063, 50.19544], [12.29232, 50.17524], [12.32596, 50.17146], [12.33847, 50.19432], [12.32445, 50.20442], [12.33263, 50.24367], [12.35425, 50.23993], [12.36594, 50.28289], [12.40158, 50.29521], [12.39924, 50.32302], [12.43371, 50.32506], [12.43722, 50.33774], [12.46643, 50.35527], [12.48256, 50.34784], [12.49214, 50.35228], [12.48747, 50.37278], [12.51356, 50.39694], [12.67261, 50.41949], [12.70731, 50.39948], [12.73044, 50.42268], [12.73476, 50.43237], [12.82465, 50.45738], [12.94058, 50.40944], [12.98433, 50.42016], [13.02147, 50.44763], [13.02038, 50.4734], [13.0312, 50.50944], [13.08301, 50.50132], [13.13424, 50.51709], [13.19043, 50.50237], [13.25158, 50.59268], [13.29454, 50.57904], [13.32594, 50.58009], [13.32264, 50.60317], [13.37805, 50.627], [13.37485, 50.64931], [13.42189, 50.61243], [13.46413, 50.60102], [13.49742, 50.63133], [13.5226, 50.64721], [13.53748, 50.67654], [13.52474, 50.70394], [13.65977, 50.73096], [13.70204, 50.71771], [13.76316, 50.73487], [13.82942, 50.7251], [13.89444, 50.74142], [13.89113, 50.78533], [13.98864, 50.8177], [14.02982, 50.80662], [14.22331, 50.86049], [14.24314, 50.88761], [14.27123, 50.89386], [14.30098, 50.88448], [14.38691, 50.89907], [14.39848, 50.93866], [14.31422, 50.95243], [14.30251, 50.96606], [14.32793, 50.97379], [14.32353, 50.98556], [14.28776, 50.97718], [14.25665, 50.98935], [14.30098, 51.05515], [14.41335, 51.02086], [14.45827, 51.03712], [14.49202, 51.02286], [14.49154, 51.04382], [14.49991, 51.04692], [14.50809, 51.0427], [14.49873, 51.02242], [14.53321, 51.01679], [14.53438, 51.00374], [14.56432, 51.01008], [14.58215, 50.99306], [14.59908, 50.98685], [14.59702, 50.96148], [14.56374, 50.922], [14.58024, 50.91443], [14.64802, 50.93241], [14.65259, 50.90513], [14.63434, 50.8883], [14.61993, 50.86049], [14.70661, 50.84096], [14.79139, 50.81438], [14.82803, 50.86966], [14.81664, 50.88148], [14.89681, 50.9422], [14.89252, 50.94999], [14.92942, 50.99744], [14.95529, 51.04552], [14.97938, 51.07742], [14.98229, 51.11354], [14.99689, 51.12205], [14.99079, 51.14284], [14.99646, 51.14365], [15.00083, 51.14974], [14.99414, 51.15813], [14.99311, 51.16249], [15.0047, 51.16874], [15.01242, 51.21285], [15.04288, 51.28387], [14.98008, 51.33449], [14.96899, 51.38367], [14.9652, 51.44793], [14.94749, 51.47155], [14.73219, 51.52922], [14.72652, 51.53902], [14.73047, 51.54606], [14.71125, 51.56209], [14.7727, 51.61263], [14.75759, 51.62318], [14.75392, 51.67445], [14.69065, 51.70842], [14.66386, 51.73282], [14.64625, 51.79472], [14.60493, 51.80473], [14.59089, 51.83302], [14.6588, 51.88359], [14.6933, 51.9044], [14.70601, 51.92944], [14.7177, 51.94048], [14.72163, 51.95188], [14.71836, 51.95606], [14.7139, 51.95643], [14.70488, 51.97679], [14.71339, 52.00337], [14.76026, 52.06624], [14.72971, 52.09167], [14.6917, 52.10283], [14.67683, 52.13936], [14.70616, 52.16927], [14.68344, 52.19612], [14.71319, 52.22144], [14.70139, 52.25038], [14.58149, 52.28007], [14.56378, 52.33838], [14.55228, 52.35264], [14.54423, 52.42568], [14.63056, 52.48993], [14.60081, 52.53116], [14.6289, 52.57136], [14.61073, 52.59847], [14.22071, 52.81175], [14.13806, 52.82392], [14.12256, 52.84311], [14.15873, 52.87715], [14.14056, 52.95786], [14.25954, 53.00264], [14.35044, 53.05829], [14.38679, 53.13669], [14.36696, 53.16444], [14.37853, 53.20405], [14.40662, 53.21098], [14.45125, 53.26241], [14.44133, 53.27427], [14.4215, 53.27724], [14.35209, 53.49506], [14.3273, 53.50587], [14.30416, 53.55499], [14.31904, 53.61581], [14.2853, 53.63392], [14.28477, 53.65955], [14.27133, 53.66613], [14.2836, 53.67721], [14.26782, 53.69866], [14.27249, 53.74464], [14.21323, 53.8664], [14.20823, 53.90776], [14.18544, 53.91258], [14.20647, 53.91671], [14.22634, 53.9291], [14.20811, 54.12784], [13.93395, 54.84044], [12.85844, 54.82438], [11.90309, 54.38543], [11.00303, 54.63689], [10.31111, 54.65968], [10.16755, 54.73883], [9.89314, 54.84171], [9.73563, 54.8247], [9.61187, 54.85548], [9.62734, 54.88057], [9.58937, 54.88785], [9.4659, 54.83131], [9.43155, 54.82586], [9.41213, 54.84254], [9.38532, 54.83968], [9.36496, 54.81749], [9.33849, 54.80233], [9.32771, 54.80602], [9.2474, 54.8112], [9.23445, 54.83432], [9.24631, 54.84726], [9.20571, 54.85841], [9.14275, 54.87421], [9.04629, 54.87249], [8.92795, 54.90452], [8.81178, 54.90518], [8.76387, 54.8948], [8.63979, 54.91069], [8.55769, 54.91837], [8.45719, 55.06747], [8.02459, 55.09613], [5.45168, 54.20039], [6.91025, 53.44221], [7.00198, 53.32672], [7.19052, 53.31866], [7.21679, 53.20058], [7.22681, 53.18165], [7.17898, 53.13817], [7.21694, 53.00742], [7.07253, 52.81083], [7.04557, 52.63318], [6.77307, 52.65375], [6.71641, 52.62905], [6.69507, 52.488], [6.94293, 52.43597], [6.99041, 52.47235], [7.03417, 52.40237], [7.07044, 52.37805], [7.02703, 52.27941], [7.06365, 52.23789], [7.03729, 52.22695], [6.9897, 52.2271], [6.97189, 52.20329], [6.83984, 52.11728], [6.76117, 52.11895], [6.68128, 52.05052], [6.83035, 51.9905], [6.82357, 51.96711], [6.72319, 51.89518], [6.68386, 51.91861], [6.58556, 51.89386], [6.50231, 51.86313], [6.47179, 51.85395], [6.38815, 51.87257], [6.40704, 51.82771], [6.30593, 51.84998], [6.29872, 51.86801], [6.21443, 51.86801], [6.15349, 51.90439], [6.11551, 51.89769], [6.16902, 51.84094], [6.10337, 51.84829], [6.06705, 51.86136], [5.99848, 51.83195], [5.94568, 51.82786], [5.98665, 51.76944], [5.95003, 51.7493], [6.04091, 51.71821], [6.02767, 51.6742], [6.11759, 51.65609], [6.09055, 51.60564], [6.18017, 51.54096], [6.21724, 51.48568], [6.20654, 51.40049], [6.22641, 51.39948], [6.22674, 51.36135], [6.16977, 51.33169], [6.07889, 51.24432], [6.07889, 51.17038], [6.17384, 51.19589], [6.16706, 51.15677], [5.98292, 51.07469], [5.9541, 51.03496], [5.9134, 51.06736], [5.86735, 51.05182], [5.87849, 51.01969], [5.90493, 51.00198], [5.90296, 50.97356], [5.95282, 50.98728], [6.02697, 50.98303], [6.01615, 50.93367], [6.09297, 50.92066], [6.07486, 50.89307], [6.08805, 50.87223], [6.07693, 50.86025], [6.07431, 50.84674], [6.05702, 50.85179], [6.05623, 50.8572], [6.01921, 50.84435], [6.02328, 50.81694], [6.00462, 50.80065], [5.98404, 50.80988], [5.97497, 50.79992], [6.02624, 50.77453], [6.01976, 50.75398], [6.03889, 50.74618], [6.0326, 50.72647], [6.0406, 50.71848], [6.04428, 50.72861], [6.11707, 50.72231], [6.17852, 50.6245], [6.26957, 50.62444], [6.2476, 50.60392], [6.24888, 50.59869], [6.24005, 50.58732], [6.22581, 50.5907], [6.20281, 50.56952], [6.17739, 50.55875], [6.17802, 50.54179], [6.19735, 50.53576], [6.19579, 50.5313], [6.18716, 50.52653], [6.19193, 50.5212], [6.20599, 50.52089], [6.22335, 50.49578], [6.26637, 50.50272], [6.30809, 50.50058], [6.3465, 50.48833], [6.34005, 50.46083], [6.37219, 50.45397], [6.36852, 50.40776], [6.34406, 50.37994], [6.3688, 50.35898], [6.40785, 50.33557], [6.40641, 50.32425], [6.35701, 50.31139], [6.32488, 50.32333], [6.29949, 50.30887], [6.28797, 50.27458], [6.208, 50.25179], [6.16853, 50.2234], [6.18364, 50.20815], [6.18739, 50.1822], [6.14588, 50.17106], [6.14132, 50.14971], [6.15298, 50.14126], [6.1379, 50.12964], [6.12055, 50.09171], [6.11274, 50.05916], [6.13458, 50.04141], [6.13044, 50.02929], [6.14666, 50.02207], [6.13794, 50.01466], [6.13273, 50.02019], [6.1295, 50.01849], [6.13806, 50.01056], [6.14948, 50.00908], [6.14147, 49.99563], [6.1701, 49.98518], [6.16466, 49.97086], [6.17872, 49.9537], [6.18554, 49.95622], [6.18045, 49.96611], [6.19089, 49.96991], [6.19856, 49.95053], [6.22094, 49.94955], [6.22608, 49.929], [6.21882, 49.92403], [6.22926, 49.92096], [6.23496, 49.89972], [6.26146, 49.88203], [6.28874, 49.87592], [6.29692, 49.86685], [6.30963, 49.87021], [6.32303, 49.85133], [6.32098, 49.83728], [6.33585, 49.83785], [6.34267, 49.84974], [6.36576, 49.85032], [6.40022, 49.82029], [6.42521, 49.81591], [6.42905, 49.81091], [6.44131, 49.81443], [6.45425, 49.81164], [6.47111, 49.82263], [6.48718, 49.81267], [6.50647, 49.80916], [6.51215, 49.80124], [6.52121, 49.81338], [6.53122, 49.80666], [6.52169, 49.79787], [6.50534, 49.78952], [6.51669, 49.78336], [6.51056, 49.77515], [6.51828, 49.76855], [6.51646, 49.75961], [6.50174, 49.75292], [6.50193, 49.73291], [6.51805, 49.72425], [6.51397, 49.72058], [6.50261, 49.72718], [6.49535, 49.72645], [6.49694, 49.72205], [6.5042, 49.71808], [6.50647, 49.71353], [6.49785, 49.71118], [6.48014, 49.69767], [6.46048, 49.69092], [6.44654, 49.67799], [6.42937, 49.66857], [6.42726, 49.66078], [6.43768, 49.66021], [6.4413, 49.65722], [6.41861, 49.61723], [6.39822, 49.60081], [6.385, 49.59946], [6.37464, 49.58886], [6.38342, 49.5799], [6.38024, 49.57593], [6.36676, 49.57813], [6.35825, 49.57053], [6.38228, 49.55855], [6.38072, 49.55171], [6.35666, 49.52931], [6.36788, 49.50377], [6.36907, 49.48931], [6.36778, 49.46937], [6.38352, 49.46463], [6.39168, 49.4667], [6.40274, 49.46546], [6.42432, 49.47683], [6.55404, 49.42464], [6.533, 49.40748], [6.60091, 49.36864], [6.58807, 49.35358], [6.572, 49.35027], [6.60186, 49.31055], [6.66583, 49.28065], [6.69274, 49.21661], [6.71843, 49.2208], [6.73256, 49.20486], [6.71137, 49.18808], [6.73765, 49.16375], [6.78265, 49.16793], [6.83385, 49.15162], [6.84703, 49.15734], [6.86225, 49.18185], [6.85016, 49.19354], [6.85119, 49.20038], [6.83555, 49.21249], [6.85939, 49.22376], [6.89298, 49.20863], [6.91875, 49.22261], [6.93831, 49.2223], [6.94028, 49.21641], [6.95963, 49.203], [6.97273, 49.2099], [7.01318, 49.19018], [7.03459, 49.19096], [7.0274, 49.17042], [7.03178, 49.15734], [7.04662, 49.13724], [7.04409, 49.12123], [7.04843, 49.11422], [7.05548, 49.11185], [7.06642, 49.11415], [7.07162, 49.1255], [7.09007, 49.13094], [7.07859, 49.15031], [7.10715, 49.15631], [7.10384, 49.13787], [7.12504, 49.14253], [7.1358, 49.1282], [7.1593, 49.1204], [7.23473, 49.12971], [7.29514, 49.11426], [7.3195, 49.14231], [7.35995, 49.14399], [7.3662, 49.17308], [7.44052, 49.18354], [7.44455, 49.16765], [7.49473, 49.17], [7.49172, 49.13915], [7.53012, 49.09818], [7.56416, 49.08136], [7.62575, 49.07654], [7.63618, 49.05428], [7.75948, 49.04562], [7.79557, 49.06583], [7.86386, 49.03499], [7.93641, 49.05544], [7.97783, 49.03161], [8.14189, 48.97833], [8.22604, 48.97352], [8.20031, 48.95856], [8.19989, 48.95825], [8.12813, 48.87985], [8.10253, 48.81829], [8.06802, 48.78957], [8.0326, 48.79017], [8.01534, 48.76085], [7.96994, 48.75606], [7.96812, 48.72491], [7.89002, 48.66317], [7.84098, 48.64217], [7.80057, 48.5857], [7.80167, 48.54758], [7.80647, 48.51239], [7.76833, 48.48945], [7.73109, 48.39192], [7.74562, 48.32736], [7.69022, 48.30018], [7.6648, 48.22219], [7.57137, 48.12292], [7.56966, 48.03265], [7.62302, 47.97898], [7.55673, 47.87371], [7.52921, 47.77747], [7.54761, 47.72912], [7.53722, 47.71635], [7.51266, 47.70197], [7.51915, 47.68335], [7.52067, 47.66437], [7.53384, 47.65115], [7.5591, 47.63849], [7.57423, 47.61628], [7.58851, 47.60794], [7.59301, 47.60058], [7.58945, 47.59017], [7.60523, 47.58519], [7.60459, 47.57869], [7.61929, 47.57683], [7.64309, 47.59151], [7.64213, 47.5944], [7.64599, 47.59695], [7.67395, 47.59212], [7.68229, 47.59905], [7.69385, 47.60099], [7.68486, 47.59601], [7.67115, 47.5871], [7.68904, 47.57133], [7.67655, 47.56435], [7.63338, 47.56256], [7.65083, 47.54662], [7.66174, 47.54554], [7.6656, 47.53752], [7.68101, 47.53232], [7.69642, 47.53297], [7.71961, 47.54219], [7.75261, 47.54599], [7.79486, 47.55691], [7.81901, 47.58798], [7.84412, 47.5841], [7.88664, 47.58854], [7.90673, 47.57674], [7.91251, 47.55031], [7.94494, 47.54511], [7.95682, 47.55789], [7.97581, 47.55493], [8.00113, 47.55616], [8.02136, 47.55096], [8.04383, 47.55443], [8.06663, 47.56374], [8.08557, 47.55768], [8.10002, 47.56504], [8.10395, 47.57918], [8.11543, 47.5841], [8.13662, 47.58432], [8.13823, 47.59147], [8.14947, 47.59558], [8.1652, 47.5945], [8.19378, 47.61636], [8.20617, 47.62141], [8.22011, 47.6181], [8.22577, 47.60385], [8.23809, 47.61204], [8.25863, 47.61571], [8.26313, 47.6103], [8.2824, 47.61225], [8.29722, 47.60603], [8.29524, 47.5919], [8.30277, 47.58607], [8.32735, 47.57133], [8.35512, 47.57014], [8.38273, 47.56608], [8.39477, 47.57826], [8.43235, 47.56617], [8.49431, 47.58107], [8.48949, 47.588], [8.46637, 47.58389], [8.45578, 47.60121], [8.50747, 47.61897], [8.51686, 47.63476], [8.55756, 47.62394], [8.57586, 47.59537], [8.60348, 47.61204], [8.59545, 47.64298], [8.60701, 47.65271], [8.61471, 47.64514], [8.60412, 47.63735], [8.62049, 47.63757], [8.62884, 47.65098], [8.61113, 47.66332], [8.6052, 47.67258], [8.57683, 47.66158], [8.56141, 47.67088], [8.52801, 47.66059], [8.5322, 47.64687], [8.49656, 47.64709], [8.46605, 47.64103], [8.4667, 47.65747], [8.44711, 47.65379], [8.42264, 47.66667], [8.41346, 47.66676], [8.40473, 47.67499], [8.4211, 47.68407], [8.40569, 47.69855], [8.44807, 47.72426], [8.45771, 47.7493], [8.48868, 47.77215], [8.56814, 47.78001], [8.56415, 47.80633], [8.61657, 47.79998], [8.62408, 47.7626], [8.64425, 47.76398], [8.65292, 47.80066], [8.68022, 47.78599], [8.68985, 47.75686], [8.71778, 47.76571], [8.74251, 47.75168], [8.70543, 47.73121], [8.73671, 47.7169], [8.72617, 47.69651]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"DG\", iso1A3: \"DGA\", wikidata: \"Q184851\", nameEn: \"Diego Garcia\", country: \"GB\", groups: [\"IO\", \"BOTS\", \"014\", \"202\", \"002\", \"UN\"], isoStatus: \"excRes\", callingCodes: [\"246\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[73.14823, -7.76302], [73.09982, -6.07324], [71.43792, -7.73904], [73.14823, -7.76302]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"DJ\", iso1A3: \"DJI\", iso1N3: \"262\", wikidata: \"Q977\", nameEn: \"Djibouti\", groups: [\"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"253\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[43.90659, 12.3823], [43.90659, 12.3823], [43.32909, 12.59711], [43.29075, 12.79154], [42.86195, 12.58747], [42.7996, 12.42629], [42.6957, 12.36201], [42.46941, 12.52661], [42.4037, 12.46478], [41.95461, 11.81157], [41.82878, 11.72361], [41.77727, 11.49902], [41.8096, 11.33606], [41.80056, 10.97127], [42.06302, 10.92599], [42.13691, 10.97586], [42.42669, 10.98493], [42.62989, 11.09711], [42.75111, 11.06992], [42.79037, 10.98493], [42.95776, 10.98533], [43.90659, 12.3823]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"DK\", iso1A3: \"DNK\", iso1N3: \"208\", wikidata: \"Q756617\", nameEn: \"Kingdom of Denmark\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"DM\", iso1A3: \"DMA\", iso1N3: \"212\", wikidata: \"Q784\", nameEn: \"Dominica\", groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", callingCodes: [\"1 767\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-61.32485, 14.91445], [-60.86656, 15.82603], [-61.95646, 15.5094], [-61.32485, 14.91445]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"DO\", iso1A3: \"DOM\", iso1N3: \"214\", wikidata: \"Q786\", nameEn: \"Dominican Republic\", groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"1 809\", \"1 829\", \"1 849\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-67.87844, 21.7938], [-72.38946, 20.27111], [-71.77419, 19.73128], [-71.75865, 19.70231], [-71.7429, 19.58445], [-71.71449, 19.55364], [-71.71268, 19.53374], [-71.6802, 19.45008], [-71.69448, 19.37866], [-71.77766, 19.33823], [-71.73229, 19.26686], [-71.62642, 19.21212], [-71.65337, 19.11759], [-71.69938, 19.10916], [-71.71088, 19.08353], [-71.74088, 19.0437], [-71.88102, 18.95007], [-71.77766, 18.95007], [-71.72624, 18.87802], [-71.71885, 18.78423], [-71.82556, 18.62551], [-71.95412, 18.64939], [-72.00201, 18.62312], [-71.88102, 18.50125], [-71.90875, 18.45821], [-71.69952, 18.34101], [-71.78271, 18.18302], [-71.75465, 18.14405], [-71.74994, 18.11115], [-71.73783, 18.07177], [-71.75671, 18.03456], [-72.29523, 17.48026], [-68.39466, 16.14167], [-67.87844, 21.7938]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"DZ\", iso1A3: \"DZA\", iso1N3: \"012\", wikidata: \"Q262\", nameEn: \"Algeria\", groups: [\"015\", \"002\", \"UN\"], callingCodes: [\"213\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[8.59123, 37.14286], [5.10072, 39.89531], [-2.27707, 35.35051], [-2.21248, 35.08532], [-2.21445, 35.04378], [-2.04734, 34.93218], [-1.97833, 34.93218], [-1.97469, 34.886], [-1.73707, 34.74226], [-1.84569, 34.61907], [-1.69788, 34.48056], [-1.78042, 34.39018], [-1.64666, 34.10405], [-1.73494, 33.71721], [-1.59508, 33.59929], [-1.67067, 33.27084], [-1.46249, 33.0499], [-1.54244, 32.95499], [-1.37794, 32.73628], [-0.9912, 32.52467], [-1.24998, 32.32993], [-1.24453, 32.1917], [-1.15735, 32.12096], [-1.22829, 32.07832], [-2.46166, 32.16603], [-2.93873, 32.06557], [-2.82784, 31.79459], [-3.66314, 31.6339], [-3.66386, 31.39202], [-3.77647, 31.31912], [-3.77103, 31.14984], [-3.54944, 31.0503], [-3.65418, 30.85566], [-3.64735, 30.67539], [-4.31774, 30.53229], [-4.6058, 30.28343], [-5.21671, 29.95253], [-5.58831, 29.48103], [-5.72121, 29.52322], [-5.75616, 29.61407], [-6.69965, 29.51623], [-6.78351, 29.44634], [-6.95824, 29.50924], [-7.61585, 29.36252], [-8.6715, 28.71194], [-8.66879, 27.6666], [-8.66674, 27.31569], [-4.83423, 24.99935], [1.15698, 21.12843], [1.20992, 20.73533], [3.24648, 19.81703], [3.12501, 19.1366], [3.36082, 18.9745], [4.26651, 19.14224], [5.8153, 19.45101], [7.38361, 20.79165], [7.48273, 20.87258], [11.96886, 23.51735], [11.62498, 24.26669], [11.41061, 24.21456], [10.85323, 24.5595], [10.33159, 24.5465], [10.02432, 24.98124], [10.03146, 25.35635], [9.38834, 26.19288], [9.51696, 26.39148], [9.89569, 26.57696], [9.78136, 29.40961], [9.3876, 30.16738], [9.55544, 30.23971], [9.07483, 32.07865], [8.35999, 32.50101], [8.31895, 32.83483], [8.1179, 33.05086], [8.11433, 33.10175], [7.83028, 33.18851], [7.73687, 33.42114], [7.54088, 33.7726], [7.52851, 34.06493], [7.66174, 34.20167], [7.74207, 34.16492], [7.81242, 34.21841], [7.86264, 34.3987], [8.20482, 34.57575], [8.29655, 34.72798], [8.25189, 34.92009], [8.30727, 34.95378], [8.3555, 35.10007], [8.47318, 35.23376], [8.30329, 35.29884], [8.36086, 35.47774], [8.35371, 35.66373], [8.26472, 35.73669], [8.2626, 35.91733], [8.40731, 36.42208], [8.18936, 36.44939], [8.16167, 36.48817], [8.47609, 36.66607], [8.46537, 36.7706], [8.57613, 36.78062], [8.67706, 36.8364], [8.62972, 36.86499], [8.64044, 36.9401], [8.59123, 37.14286]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"EA\", wikidata: \"Q28868874\", nameEn: \"Ceuta, Melilla\", country: \"ES\", level: \"territory\", isoStatus: \"excRes\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"EC\", iso1A3: \"ECU\", iso1N3: \"218\", wikidata: \"Q736\", nameEn: \"Ecuador\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"EE\", iso1A3: \"EST\", iso1N3: \"233\", wikidata: \"Q191\", nameEn: \"Estonia\", aliases: [\"EW\"], groups: [\"EU\", \"154\", \"150\", \"UN\"], callingCodes: [\"372\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[26.32936, 60.00121], [20.5104, 59.15546], [19.84909, 57.57876], [22.80496, 57.87798], [23.20055, 57.56697], [24.26221, 57.91787], [24.3579, 57.87471], [25.19484, 58.0831], [25.28237, 57.98539], [25.29581, 58.08288], [25.73499, 57.90193], [26.05949, 57.84744], [26.0324, 57.79037], [26.02456, 57.78342], [26.027, 57.78158], [26.0266, 57.77441], [26.02069, 57.77169], [26.02415, 57.76865], [26.03332, 57.7718], [26.0543, 57.76105], [26.08098, 57.76619], [26.2029, 57.7206], [26.1866, 57.6849], [26.29253, 57.59244], [26.46527, 57.56885], [26.54675, 57.51813], [26.90364, 57.62823], [27.34698, 57.52242], [27.31919, 57.57672], [27.40393, 57.62125], [27.3746, 57.66834], [27.52615, 57.72843], [27.50171, 57.78842], [27.56689, 57.83356], [27.78526, 57.83963], [27.81841, 57.89244], [27.67282, 57.92627], [27.62393, 58.09462], [27.48541, 58.22615], [27.55489, 58.39525], [27.36366, 58.78381], [27.74429, 58.98351], [27.80482, 59.1116], [27.87978, 59.18097], [27.90911, 59.24353], [28.00689, 59.28351], [28.14215, 59.28934], [28.19284, 59.35791], [28.20537, 59.36491], [28.21137, 59.38058], [28.19061, 59.39962], [28.04187, 59.47017], [27.85643, 59.58538], [26.90044, 59.63819], [26.32936, 60.00121]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"EG\", iso1A3: \"EGY\", iso1N3: \"818\", wikidata: \"Q79\", nameEn: \"Egypt\", groups: [\"015\", \"002\", \"UN\"], callingCodes: [\"20\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[33.62659, 31.82938], [26.92891, 33.39516], [24.8458, 31.39877], [25.01077, 30.73861], [24.71117, 30.17441], [24.99968, 29.24574], [24.99885, 21.99535], [33.17563, 22.00405], [34.0765, 22.00501], [37.8565, 22.00903], [34.4454, 27.91479], [34.8812, 29.36878], [34.92298, 29.45305], [34.26742, 31.21998], [34.24012, 31.29591], [34.23572, 31.2966], [34.21853, 31.32363], [34.052, 31.46619], [33.62659, 31.82938]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"EH\", iso1A3: \"ESH\", iso1N3: \"732\", wikidata: \"Q6250\", nameEn: \"Western Sahara\", groups: [\"015\", \"002\"], callingCodes: [\"212\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-8.66879, 27.6666], [-8.77527, 27.66663], [-8.71787, 26.9898], [-9.08698, 26.98639], [-9.56957, 26.90042], [-9.81998, 26.71379], [-10.68417, 26.90984], [-11.35695, 26.8505], [-11.23622, 26.72023], [-11.38635, 26.611], [-11.62052, 26.05229], [-12.06001, 26.04442], [-12.12281, 25.13682], [-12.92147, 24.39502], [-13.00628, 24.01923], [-13.75627, 23.77231], [-14.10361, 22.75501], [-14.1291, 22.41636], [-14.48112, 22.00886], [-14.47329, 21.63839], [-14.78487, 21.36587], [-16.44269, 21.39745], [-16.9978, 21.36239], [-17.02707, 21.34022], [-17.21511, 21.34226], [-17.35589, 20.80492], [-17.0471, 20.76408], [-17.0695, 20.85742], [-17.06781, 20.92697], [-17.0396, 20.9961], [-17.0357, 21.05368], [-16.99806, 21.12142], [-16.95474, 21.33997], [-13.01525, 21.33343], [-13.08438, 22.53866], [-13.15313, 22.75649], [-13.10753, 22.89493], [-13.00412, 23.02297], [-12.5741, 23.28975], [-12.36213, 23.3187], [-12.14969, 23.41935], [-12.00251, 23.4538], [-12.0002, 25.9986], [-8.66721, 25.99918], [-8.66674, 27.31569], [-8.66879, 27.6666]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"ER\", iso1A3: \"ERI\", iso1N3: \"232\", wikidata: \"Q986\", nameEn: \"Eritrea\", groups: [\"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"291\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[40.99158, 15.81743], [39.63762, 18.37348], [38.57727, 17.98125], [38.45916, 17.87167], [38.37133, 17.66269], [38.13362, 17.53906], [37.50967, 17.32199], [37.42694, 17.04041], [36.99777, 17.07172], [36.92193, 16.23451], [36.76371, 15.80831], [36.69761, 15.75323], [36.54276, 15.23478], [36.44337, 15.14963], [36.54376, 14.25597], [36.56536, 14.26177], [36.55659, 14.28237], [36.63364, 14.31172], [36.85787, 14.32201], [37.01622, 14.2561], [37.09486, 14.27155], [37.13206, 14.40746], [37.3106, 14.44657], [37.47319, 14.2149], [37.528, 14.18413], [37.91287, 14.89447], [38.0364, 14.72745], [38.25562, 14.67287], [38.3533, 14.51323], [38.45748, 14.41445], [38.78306, 14.4754], [38.98058, 14.54895], [39.02834, 14.63717], [39.16074, 14.65187], [39.14772, 14.61827], [39.19547, 14.56996], [39.23888, 14.56365], [39.26927, 14.48801], [39.2302, 14.44598], [39.2519, 14.40393], [39.37685, 14.54402], [39.52756, 14.49011], [39.50585, 14.55735], [39.58182, 14.60987], [39.76632, 14.54264], [39.9443, 14.41024], [40.07236, 14.54264], [40.14649, 14.53969], [40.21128, 14.39342], [40.25686, 14.41445], [40.9167, 14.11152], [41.25097, 13.60787], [41.62864, 13.38626], [42.05841, 12.80912], [42.21469, 12.75832], [42.2798, 12.6355], [42.4037, 12.46478], [42.46941, 12.52661], [42.6957, 12.36201], [42.7996, 12.42629], [42.86195, 12.58747], [43.29075, 12.79154], [40.99158, 15.81743]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"ES\", iso1A3: \"ESP\", iso1N3: \"724\", wikidata: \"Q29\", nameEn: \"Spain\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"ET\", iso1A3: \"ETH\", iso1N3: \"231\", wikidata: \"Q115\", nameEn: \"Ethiopia\", groups: [\"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"251\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[42.4037, 12.46478], [42.2798, 12.6355], [42.21469, 12.75832], [42.05841, 12.80912], [41.62864, 13.38626], [41.25097, 13.60787], [40.9167, 14.11152], [40.25686, 14.41445], [40.21128, 14.39342], [40.14649, 14.53969], [40.07236, 14.54264], [39.9443, 14.41024], [39.76632, 14.54264], [39.58182, 14.60987], [39.50585, 14.55735], [39.52756, 14.49011], [39.37685, 14.54402], [39.2519, 14.40393], [39.2302, 14.44598], [39.26927, 14.48801], [39.23888, 14.56365], [39.19547, 14.56996], [39.14772, 14.61827], [39.16074, 14.65187], [39.02834, 14.63717], [38.98058, 14.54895], [38.78306, 14.4754], [38.45748, 14.41445], [38.3533, 14.51323], [38.25562, 14.67287], [38.0364, 14.72745], [37.91287, 14.89447], [37.528, 14.18413], [37.47319, 14.2149], [37.3106, 14.44657], [37.13206, 14.40746], [37.09486, 14.27155], [37.01622, 14.2561], [36.85787, 14.32201], [36.63364, 14.31172], [36.55659, 14.28237], [36.56536, 14.26177], [36.54376, 14.25597], [36.44653, 13.95666], [36.48824, 13.83954], [36.38993, 13.56459], [36.24545, 13.36759], [36.13374, 12.92665], [36.16651, 12.88019], [36.14268, 12.70879], [36.01458, 12.72478], [35.70476, 12.67101], [35.24302, 11.91132], [35.11492, 11.85156], [35.05832, 11.71158], [35.09556, 11.56278], [34.95704, 11.24448], [35.01215, 11.19626], [34.93172, 10.95946], [34.97789, 10.91559], [34.97491, 10.86147], [34.86916, 10.78832], [34.86618, 10.74588], [34.77532, 10.69027], [34.77383, 10.74588], [34.59062, 10.89072], [34.4372, 10.781], [34.2823, 10.53508], [34.34783, 10.23914], [34.32102, 10.11599], [34.22718, 10.02506], [34.20484, 9.9033], [34.13186, 9.7492], [34.08717, 9.55243], [34.10229, 9.50238], [34.14304, 9.04654], [34.14453, 8.60204], [34.01346, 8.50041], [33.89579, 8.4842], [33.87195, 8.41938], [33.71407, 8.3678], [33.66938, 8.44442], [33.54575, 8.47094], [33.3119, 8.45474], [33.19721, 8.40317], [33.1853, 8.29264], [33.18083, 8.13047], [33.08401, 8.05822], [33.0006, 7.90333], [33.04944, 7.78989], [33.24637, 7.77939], [33.32531, 7.71297], [33.44745, 7.7543], [33.71407, 7.65983], [33.87642, 7.5491], [34.02984, 7.36449], [34.03878, 7.27437], [34.01495, 7.25664], [34.19369, 7.12807], [34.19369, 7.04382], [34.35753, 6.91963], [34.47669, 6.91076], [34.53925, 6.82794], [34.53776, 6.74808], [34.65096, 6.72589], [34.77459, 6.5957], [34.87736, 6.60161], [35.01738, 6.46991], [34.96227, 6.26415], [35.00546, 5.89387], [35.12611, 5.68937], [35.13058, 5.62118], [35.31188, 5.50106], [35.29938, 5.34042], [35.50792, 5.42431], [35.8576, 5.33413], [35.81968, 5.10757], [35.82118, 4.77382], [35.9419, 4.61933], [35.95449, 4.53244], [36.03924, 4.44406], [36.84474, 4.44518], [37.07724, 4.33503], [38.14168, 3.62487], [38.45812, 3.60445], [38.52336, 3.62551], [38.91938, 3.51198], [39.07736, 3.5267], [39.19954, 3.47834], [39.49444, 3.45521], [39.51551, 3.40895], [39.55132, 3.39634], [39.58339, 3.47434], [39.76808, 3.67058], [39.86043, 3.86974], [40.77498, 4.27683], [41.1754, 3.94079], [41.89488, 3.97375], [42.07619, 4.17667], [42.55853, 4.20518], [42.84526, 4.28357], [42.97746, 4.44032], [43.04177, 4.57923], [43.40263, 4.79289], [44.02436, 4.9451], [44.98104, 4.91821], [47.97917, 8.00124], [47.92477, 8.00111], [46.99339, 7.9989], [44.19222, 8.93028], [43.32613, 9.59205], [43.23518, 9.84605], [43.0937, 9.90579], [42.87643, 10.18441], [42.69452, 10.62672], [42.95776, 10.98533], [42.79037, 10.98493], [42.75111, 11.06992], [42.62989, 11.09711], [42.42669, 10.98493], [42.13691, 10.97586], [42.06302, 10.92599], [41.80056, 10.97127], [41.8096, 11.33606], [41.77727, 11.49902], [41.82878, 11.72361], [41.95461, 11.81157], [42.4037, 12.46478]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"EU\", iso1A3: \"EUE\", wikidata: \"Q458\", nameEn: \"European Union\", level: \"union\", isoStatus: \"excRes\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"FI\", iso1A3: \"FIN\", iso1N3: \"246\", wikidata: \"Q33\", nameEn: \"Finland\", aliases: [\"SF\"] }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"FJ\", iso1A3: \"FJI\", iso1N3: \"242\", wikidata: \"Q712\", nameEn: \"Fiji\", groups: [\"054\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"679\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[174.245, -23.1974], [179.99999, -22.5], [179.99999, -11.5], [174, -11.5], [174.245, -23.1974]]], [[[-176.76826, -14.95183], [-180, -14.96041], [-180, -22.90585], [-176.74538, -22.89767], [-176.76826, -14.95183]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"FK\", iso1A3: \"FLK\", iso1N3: \"238\", wikidata: \"Q9648\", nameEn: \"Falkland Islands\", country: \"GB\", groups: [\"BOTS\", \"005\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"500\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-63.67376, -55.11859], [-54.56126, -51.26248], [-61.26735, -50.63919], [-63.67376, -55.11859]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"FM\", iso1A3: \"FSM\", iso1N3: \"583\", wikidata: \"Q702\", nameEn: \"Federated States of Micronesia\", groups: [\"057\", \"009\", \"UN\"], roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"691\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[138.20583, 13.3783], [136.27107, 6.73747], [156.88247, -1.39237], [165.19726, 6.22546], [138.20583, 13.3783]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"FO\", iso1A3: \"FRO\", iso1N3: \"234\", wikidata: \"Q4628\", nameEn: \"Faroe Islands\", country: \"DK\", groups: [\"154\", \"150\", \"UN\"], callingCodes: [\"298\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-8.51774, 62.35338], [-6.51083, 60.95272], [-5.70102, 62.77194], [-8.51774, 62.35338]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"FR\", iso1A3: \"FRA\", iso1N3: \"250\", wikidata: \"Q142\", nameEn: \"France\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"FX\", iso1A3: \"FXX\", iso1N3: \"249\", wikidata: \"Q212429\", nameEn: \"Metropolitan France\", country: \"FR\", groups: [\"EU\", \"155\", \"150\", \"UN\"], isoStatus: \"excRes\", callingCodes: [\"33\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[2.55904, 51.07014], [2.18458, 51.52087], [1.17405, 50.74239], [-2.02963, 49.91866], [-2.09454, 49.46288], [-1.83944, 49.23037], [-2.00491, 48.86706], [-2.65349, 49.15373], [-6.28985, 48.93406], [-1.81005, 43.59738], [-1.77289, 43.38957], [-1.79319, 43.37497], [-1.78332, 43.36399], [-1.78714, 43.35476], [-1.77068, 43.34396], [-1.75334, 43.34107], [-1.75079, 43.3317], [-1.7397, 43.32979], [-1.73074, 43.29481], [-1.69407, 43.31378], [-1.62481, 43.30726], [-1.63052, 43.28591], [-1.61341, 43.25269], [-1.57674, 43.25269], [-1.55963, 43.28828], [-1.50992, 43.29481], [-1.45289, 43.27049], [-1.40942, 43.27272], [-1.3758, 43.24511], [-1.41562, 43.12815], [-1.47555, 43.08372], [-1.44067, 43.047], [-1.35272, 43.02658], [-1.34419, 43.09665], [-1.32209, 43.1127], [-1.27118, 43.11961], [-1.30052, 43.09581], [-1.30531, 43.06859], [-1.25244, 43.04164], [-1.22881, 43.05534], [-1.10333, 43.0059], [-1.00963, 42.99279], [-0.97133, 42.96239], [-0.81652, 42.95166], [-0.75478, 42.96916], [-0.72037, 42.92541], [-0.73422, 42.91228], [-0.72608, 42.89318], [-0.69837, 42.87945], [-0.67637, 42.88303], [-0.55497, 42.77846], [-0.50863, 42.82713], [-0.44334, 42.79939], [-0.41319, 42.80776], [-0.38833, 42.80132], [-0.3122, 42.84788], [-0.17939, 42.78974], [-0.16141, 42.79535], [-0.10519, 42.72761], [-0.02468, 42.68513], [0.17569, 42.73424], [0.25336, 42.7174], [0.29407, 42.67431], [0.36251, 42.72282], [0.40214, 42.69779], [0.67873, 42.69458], [0.65421, 42.75872], [0.66121, 42.84021], [0.711, 42.86372], [0.93089, 42.79154], [0.96166, 42.80629], [0.98292, 42.78754], [1.0804, 42.78569], [1.15928, 42.71407], [1.35562, 42.71944], [1.44197, 42.60217], [1.47986, 42.61346], [1.46718, 42.63296], [1.48043, 42.65203], [1.50867, 42.64483], [1.55418, 42.65669], [1.60085, 42.62703], [1.63485, 42.62957], [1.6625, 42.61982], [1.68267, 42.62533], [1.73452, 42.61515], [1.72588, 42.59098], [1.7858, 42.57698], [1.73683, 42.55492], [1.72515, 42.50338], [1.76335, 42.48863], [1.83037, 42.48395], [1.88853, 42.4501], [1.93663, 42.45439], [1.94292, 42.44316], [1.94061, 42.43333], [1.94084, 42.43039], [1.9574, 42.42401], [1.96482, 42.37787], [2.00488, 42.35399], [2.06241, 42.35906], [2.11621, 42.38393], [2.12789, 42.41291], [2.16599, 42.42314], [2.20578, 42.41633], [2.25551, 42.43757], [2.38504, 42.39977], [2.43299, 42.39423], [2.43508, 42.37568], [2.48457, 42.33933], [2.54382, 42.33406], [2.55516, 42.35351], [2.57934, 42.35808], [2.6747, 42.33974], [2.65311, 42.38771], [2.72056, 42.42298], [2.75497, 42.42578], [2.77464, 42.41046], [2.84335, 42.45724], [2.85675, 42.45444], [2.86983, 42.46843], [2.88413, 42.45938], [2.92107, 42.4573], [2.94283, 42.48174], [2.96518, 42.46692], [3.03734, 42.47363], [3.08167, 42.42748], [3.10027, 42.42621], [3.11379, 42.43646], [3.17156, 42.43545], [3.75438, 42.33445], [7.60802, 41.05927], [10.09675, 41.44089], [9.56115, 43.20816], [7.50102, 43.51859], [7.42422, 43.72209], [7.40903, 43.7296], [7.41113, 43.73156], [7.41291, 43.73168], [7.41298, 43.73311], [7.41233, 43.73439], [7.42062, 43.73977], [7.42299, 43.74176], [7.42443, 43.74087], [7.42809, 43.74396], [7.43013, 43.74895], [7.43624, 43.75014], [7.43708, 43.75197], [7.4389, 43.75151], [7.4379, 43.74963], [7.47823, 43.73341], [7.53006, 43.78405], [7.50423, 43.84345], [7.49355, 43.86551], [7.51162, 43.88301], [7.56075, 43.89932], [7.56858, 43.94506], [7.60771, 43.95772], [7.65266, 43.9763], [7.66848, 43.99943], [7.6597, 44.03009], [7.72508, 44.07578], [7.66878, 44.12795], [7.68694, 44.17487], [7.63245, 44.17877], [7.62155, 44.14881], [7.36364, 44.11882], [7.34547, 44.14359], [7.27827, 44.1462], [7.16929, 44.20352], [7.00764, 44.23736], [6.98221, 44.28289], [6.89171, 44.36637], [6.88784, 44.42043], [6.94504, 44.43112], [6.86233, 44.49834], [6.85507, 44.53072], [6.96042, 44.62129], [6.95133, 44.66264], [7.00582, 44.69364], [7.07484, 44.68073], [7.00401, 44.78782], [7.02217, 44.82519], [6.93499, 44.8664], [6.90774, 44.84322], [6.75518, 44.89915], [6.74519, 44.93661], [6.74791, 45.01939], [6.66981, 45.02324], [6.62803, 45.11175], [6.7697, 45.16044], [6.85144, 45.13226], [6.96706, 45.20841], [7.07074, 45.21228], [7.13115, 45.25386], [7.10572, 45.32924], [7.18019, 45.40071], [7.00037, 45.509], [6.98948, 45.63869], [6.80785, 45.71864], [6.80785, 45.83265], [6.95315, 45.85163], [7.04151, 45.92435], [7.00946, 45.9944], [6.93862, 46.06502], [6.87868, 46.03855], [6.89321, 46.12548], [6.78968, 46.14058], [6.86052, 46.28512], [6.77152, 46.34784], [6.8024, 46.39171], [6.82312, 46.42661], [6.53358, 46.45431], [6.25432, 46.3632], [6.21981, 46.31304], [6.24826, 46.30175], [6.25137, 46.29014], [6.23775, 46.27822], [6.24952, 46.26255], [6.26749, 46.24745], [6.29474, 46.26221], [6.31041, 46.24417], [6.29663, 46.22688], [6.27694, 46.21566], [6.26007, 46.21165], [6.24821, 46.20531], [6.23913, 46.20511], [6.23544, 46.20714], [6.22175, 46.20045], [6.22222, 46.19888], [6.21844, 46.19837], [6.21603, 46.19507], [6.21273, 46.19409], [6.21114, 46.1927], [6.20539, 46.19163], [6.19807, 46.18369], [6.19552, 46.18401], [6.18707, 46.17999], [6.18871, 46.16644], [6.18116, 46.16187], [6.15305, 46.15194], [6.13397, 46.1406], [6.09926, 46.14373], [6.09199, 46.15191], [6.07491, 46.14879], [6.05203, 46.15191], [6.04564, 46.14031], [6.03614, 46.13712], [6.01791, 46.14228], [5.9871, 46.14499], [5.97893, 46.13303], [5.95781, 46.12925], [5.9641, 46.14412], [5.97508, 46.15863], [5.98188, 46.17392], [5.98846, 46.17046], [5.99573, 46.18587], [5.96515, 46.19638], [5.97542, 46.21525], [6.02461, 46.23313], [6.03342, 46.2383], [6.04602, 46.23127], [6.05029, 46.23518], [6.0633, 46.24583], [6.07072, 46.24085], [6.08563, 46.24651], [6.10071, 46.23772], [6.12446, 46.25059], [6.11926, 46.2634], [6.1013, 46.28512], [6.11697, 46.29547], [6.1198, 46.31157], [6.13876, 46.33844], [6.15738, 46.3491], [6.16987, 46.36759], [6.15985, 46.37721], [6.15016, 46.3778], [6.09926, 46.40768], [6.06407, 46.41676], [6.08427, 46.44305], [6.07269, 46.46244], [6.1567, 46.54402], [6.11084, 46.57649], [6.27135, 46.68251], [6.38351, 46.73171], [6.45209, 46.77502], [6.43216, 46.80336], [6.46456, 46.88865], [6.43341, 46.92703], [6.71531, 47.0494], [6.68823, 47.06616], [6.76788, 47.1208], [6.8489, 47.15933], [6.9508, 47.24338], [6.95108, 47.26428], [6.94316, 47.28747], [7.05305, 47.33304], [7.0564, 47.35134], [7.03125, 47.36996], [6.87959, 47.35335], [6.88542, 47.37262], [6.93744, 47.40714], [6.93953, 47.43388], [7.0024, 47.45264], [6.98425, 47.49432], [7.0231, 47.50522], [7.07425, 47.48863], [7.12781, 47.50371], [7.16249, 47.49025], [7.19583, 47.49455], [7.17026, 47.44312], [7.24669, 47.4205], [7.33526, 47.44186], [7.35603, 47.43432], [7.40308, 47.43638], [7.43088, 47.45846], [7.4462, 47.46264], [7.4583, 47.47216], [7.42923, 47.48628], [7.43356, 47.49712], [7.47534, 47.47932], [7.51076, 47.49651], [7.49804, 47.51798], [7.5229, 47.51644], [7.53199, 47.5284], [7.51904, 47.53515], [7.50588, 47.52856], [7.49691, 47.53821], [7.50873, 47.54546], [7.51723, 47.54578], [7.52831, 47.55347], [7.53634, 47.55553], [7.55652, 47.56779], [7.55689, 47.57232], [7.56548, 47.57617], [7.56684, 47.57785], [7.58386, 47.57536], [7.58945, 47.59017], [7.59301, 47.60058], [7.58851, 47.60794], [7.57423, 47.61628], [7.5591, 47.63849], [7.53384, 47.65115], [7.52067, 47.66437], [7.51915, 47.68335], [7.51266, 47.70197], [7.53722, 47.71635], [7.54761, 47.72912], [7.52921, 47.77747], [7.55673, 47.87371], [7.62302, 47.97898], [7.56966, 48.03265], [7.57137, 48.12292], [7.6648, 48.22219], [7.69022, 48.30018], [7.74562, 48.32736], [7.73109, 48.39192], [7.76833, 48.48945], [7.80647, 48.51239], [7.80167, 48.54758], [7.80057, 48.5857], [7.84098, 48.64217], [7.89002, 48.66317], [7.96812, 48.72491], [7.96994, 48.75606], [8.01534, 48.76085], [8.0326, 48.79017], [8.06802, 48.78957], [8.10253, 48.81829], [8.12813, 48.87985], [8.19989, 48.95825], [8.20031, 48.95856], [8.22604, 48.97352], [8.14189, 48.97833], [7.97783, 49.03161], [7.93641, 49.05544], [7.86386, 49.03499], [7.79557, 49.06583], [7.75948, 49.04562], [7.63618, 49.05428], [7.62575, 49.07654], [7.56416, 49.08136], [7.53012, 49.09818], [7.49172, 49.13915], [7.49473, 49.17], [7.44455, 49.16765], [7.44052, 49.18354], [7.3662, 49.17308], [7.35995, 49.14399], [7.3195, 49.14231], [7.29514, 49.11426], [7.23473, 49.12971], [7.1593, 49.1204], [7.1358, 49.1282], [7.12504, 49.14253], [7.10384, 49.13787], [7.10715, 49.15631], [7.07859, 49.15031], [7.09007, 49.13094], [7.07162, 49.1255], [7.06642, 49.11415], [7.05548, 49.11185], [7.04843, 49.11422], [7.04409, 49.12123], [7.04662, 49.13724], [7.03178, 49.15734], [7.0274, 49.17042], [7.03459, 49.19096], [7.01318, 49.19018], [6.97273, 49.2099], [6.95963, 49.203], [6.94028, 49.21641], [6.93831, 49.2223], [6.91875, 49.22261], [6.89298, 49.20863], [6.85939, 49.22376], [6.83555, 49.21249], [6.85119, 49.20038], [6.85016, 49.19354], [6.86225, 49.18185], [6.84703, 49.15734], [6.83385, 49.15162], [6.78265, 49.16793], [6.73765, 49.16375], [6.71137, 49.18808], [6.73256, 49.20486], [6.71843, 49.2208], [6.69274, 49.21661], [6.66583, 49.28065], [6.60186, 49.31055], [6.572, 49.35027], [6.58807, 49.35358], [6.60091, 49.36864], [6.533, 49.40748], [6.55404, 49.42464], [6.42432, 49.47683], [6.40274, 49.46546], [6.39168, 49.4667], [6.38352, 49.46463], [6.36778, 49.46937], [6.3687, 49.4593], [6.28818, 49.48465], [6.27875, 49.503], [6.25029, 49.50609], [6.2409, 49.51408], [6.19543, 49.50536], [6.17386, 49.50934], [6.15366, 49.50226], [6.16115, 49.49297], [6.14321, 49.48796], [6.12814, 49.49365], [6.12346, 49.4735], [6.10325, 49.4707], [6.09845, 49.46351], [6.10072, 49.45268], [6.08373, 49.45594], [6.07887, 49.46399], [6.05553, 49.46663], [6.04176, 49.44801], [6.02743, 49.44845], [6.02648, 49.45451], [5.97693, 49.45513], [5.96876, 49.49053], [5.94224, 49.49608], [5.94128, 49.50034], [5.86571, 49.50015], [5.83389, 49.52152], [5.83467, 49.52717], [5.84466, 49.53027], [5.83648, 49.5425], [5.81664, 49.53775], [5.80871, 49.5425], [5.81838, 49.54777], [5.79195, 49.55228], [5.77435, 49.56298], [5.7577, 49.55915], [5.75649, 49.54321], [5.64505, 49.55146], [5.60909, 49.51228], [5.55001, 49.52729], [5.46541, 49.49825], [5.46734, 49.52648], [5.43713, 49.5707], [5.3974, 49.61596], [5.34837, 49.62889], [5.33851, 49.61599], [5.3137, 49.61225], [5.30214, 49.63055], [5.33039, 49.6555], [5.31465, 49.66846], [5.26232, 49.69456], [5.14545, 49.70287], [5.09249, 49.76193], [4.96714, 49.79872], [4.85464, 49.78995], [4.86965, 49.82271], [4.85134, 49.86457], [4.88529, 49.9236], [4.78827, 49.95609], [4.8382, 50.06738], [4.88602, 50.15182], [4.83279, 50.15331], [4.82438, 50.16878], [4.75237, 50.11314], [4.70064, 50.09384], [4.68695, 49.99685], [4.5414, 49.96911], [4.51098, 49.94659], [4.43488, 49.94122], [4.35051, 49.95315], [4.31963, 49.97043], [4.20532, 49.95803], [4.14239, 49.98034], [4.13508, 50.01976], [4.16294, 50.04719], [4.23101, 50.06945], [4.20147, 50.13535], [4.13561, 50.13078], [4.16014, 50.19239], [4.15524, 50.21103], [4.21945, 50.25539], [4.20651, 50.27333], [4.17861, 50.27443], [4.17347, 50.28838], [4.15524, 50.2833], [4.16808, 50.25786], [4.13665, 50.25609], [4.11954, 50.30425], [4.10957, 50.30234], [4.10237, 50.31247], [4.0689, 50.3254], [4.0268, 50.35793], [3.96771, 50.34989], [3.90781, 50.32814], [3.84314, 50.35219], [3.73911, 50.34809], [3.70987, 50.3191], [3.71009, 50.30305], [3.66976, 50.34563], [3.65709, 50.36873], [3.67262, 50.38663], [3.67494, 50.40239], [3.66153, 50.45165], [3.64426, 50.46275], [3.61014, 50.49568], [3.58361, 50.49049], [3.5683, 50.50192], [3.49509, 50.48885], [3.51564, 50.5256], [3.47385, 50.53397], [3.44629, 50.51009], [3.37693, 50.49538], [3.28575, 50.52724], [3.2729, 50.60718], [3.23951, 50.6585], [3.264, 50.67668], [3.2536, 50.68977], [3.26141, 50.69151], [3.26063, 50.70086], [3.24593, 50.71389], [3.22042, 50.71019], [3.20845, 50.71662], [3.19017, 50.72569], [3.20064, 50.73547], [3.18811, 50.74025], [3.18339, 50.74981], [3.16476, 50.76843], [3.15017, 50.79031], [3.1257, 50.78603], [3.11987, 50.79188], [3.11206, 50.79416], [3.10614, 50.78303], [3.09163, 50.77717], [3.04314, 50.77674], [3.00537, 50.76588], [2.96778, 50.75242], [2.95019, 50.75138], [2.90873, 50.702], [2.91036, 50.6939], [2.90069, 50.69263], [2.88504, 50.70656], [2.87937, 50.70298], [2.86985, 50.7033], [2.8483, 50.72276], [2.81056, 50.71773], [2.71165, 50.81295], [2.63331, 50.81457], [2.59093, 50.91751], [2.63074, 50.94746], [2.57551, 51.00326], [2.55904, 51.07014]], [[1.99838, 42.44682], [1.98378, 42.44697], [1.96125, 42.45364], [1.95606, 42.45785], [1.96215, 42.47854], [1.97003, 42.48081], [1.97227, 42.48487], [1.97697, 42.48568], [1.98022, 42.49569], [1.98916, 42.49351], [1.99766, 42.4858], [1.98579, 42.47486], [1.99216, 42.46208], [2.01564, 42.45171], [1.99838, 42.44682]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GA\", iso1A3: \"GAB\", iso1N3: \"266\", wikidata: \"Q1000\", nameEn: \"Gabon\", groups: [\"017\", \"202\", \"002\", \"UN\"], callingCodes: [\"241\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[13.29457, 2.16106], [13.28534, 2.25716], [11.37116, 2.29975], [11.3561, 2.17217], [11.35307, 1.00251], [9.79648, 1.0019], [9.75065, 1.06753], [9.66433, 1.06723], [7.24416, -0.64092], [10.75913, -4.39519], [11.12647, -3.94169], [11.22301, -3.69888], [11.48764, -3.51089], [11.57949, -3.52798], [11.68608, -3.68942], [11.87083, -3.71571], [11.92719, -3.62768], [11.8318, -3.5812], [11.96554, -3.30267], [11.70227, -3.17465], [11.70558, -3.0773], [11.80365, -3.00424], [11.64798, -2.81146], [11.5359, -2.85654], [11.64487, -2.61865], [11.57637, -2.33379], [11.74605, -2.39936], [11.96866, -2.33559], [12.04895, -2.41704], [12.47925, -2.32626], [12.44656, -1.92025], [12.61312, -1.8129], [12.82172, -1.91091], [13.02759, -2.33098], [13.47977, -2.43224], [13.75884, -2.09293], [13.92073, -2.35581], [13.85846, -2.46935], [14.10442, -2.49268], [14.23829, -2.33715], [14.16202, -2.23916], [14.23518, -2.15671], [14.25932, -1.97624], [14.41838, -1.89412], [14.52569, -0.57818], [14.41887, -0.44799], [14.2165, -0.38261], [14.06862, -0.20826], [13.90632, -0.2287], [13.88648, 0.26652], [14.10909, 0.58563], [14.26066, 0.57255], [14.48179, 0.9152], [14.25186, 1.39842], [13.89582, 1.4261], [13.15519, 1.23368], [13.25447, 1.32339], [13.13461, 1.57238], [13.29457, 2.16106]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GB\", iso1A3: \"GBR\", iso1N3: \"826\", wikidata: \"Q145\", ccTLD: \".uk\", nameEn: \"United Kingdom\", aliases: [\"UK\"] }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"GD\", iso1A3: \"GRD\", iso1N3: \"308\", wikidata: \"Q769\", nameEn: \"Grenada\", aliases: [\"WG\"], groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", callingCodes: [\"1 473\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-62.64026, 12.69984], [-61.77886, 11.36496], [-59.94058, 12.34011], [-62.64026, 12.69984]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GE\", iso1A3: \"GEO\", iso1N3: \"268\", wikidata: \"Q230\", nameEn: \"Georgia\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"995\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[46.42738, 41.91323], [45.61676, 42.20768], [45.78692, 42.48358], [45.36501, 42.55268], [45.15318, 42.70598], [44.88754, 42.74934], [44.80941, 42.61277], [44.70002, 42.74679], [44.54202, 42.75699], [43.95517, 42.55396], [43.73119, 42.62043], [43.81453, 42.74297], [43.0419, 43.02413], [43.03322, 43.08883], [42.75889, 43.19651], [42.66667, 43.13917], [42.40563, 43.23226], [41.64935, 43.22331], [40.65957, 43.56212], [40.10657, 43.57344], [40.04445, 43.47776], [40.03312, 43.44262], [40.01007, 43.42411], [40.01552, 43.42025], [40.00853, 43.40578], [40.0078, 43.38551], [39.81147, 43.06294], [40.89217, 41.72528], [41.54366, 41.52185], [41.7148, 41.4932], [41.7124, 41.47417], [41.81939, 41.43621], [41.95134, 41.52466], [42.26387, 41.49346], [42.51772, 41.43606], [42.59202, 41.58183], [42.72794, 41.59714], [42.84471, 41.58912], [42.78995, 41.50126], [42.84899, 41.47265], [42.8785, 41.50516], [43.02956, 41.37891], [43.21707, 41.30331], [43.13373, 41.25503], [43.1945, 41.25242], [43.23096, 41.17536], [43.36118, 41.2028], [43.44973, 41.17666], [43.4717, 41.12611], [43.67712, 41.13398], [43.74717, 41.1117], [43.84835, 41.16329], [44.16591, 41.19141], [44.18148, 41.24644], [44.32139, 41.2079], [44.34337, 41.20312], [44.34417, 41.2382], [44.46791, 41.18204], [44.59322, 41.1933], [44.61462, 41.24018], [44.72814, 41.20338], [44.82084, 41.21513], [44.87887, 41.20195], [44.89911, 41.21366], [44.84358, 41.23088], [44.81749, 41.23488], [44.80053, 41.25949], [44.81437, 41.30371], [44.93493, 41.25685], [45.0133, 41.29747], [45.09867, 41.34065], [45.1797, 41.42231], [45.26285, 41.46433], [45.31352, 41.47168], [45.4006, 41.42402], [45.45973, 41.45898], [45.68389, 41.3539], [45.71035, 41.36208], [45.75705, 41.35157], [45.69946, 41.29545], [45.80842, 41.2229], [45.95786, 41.17956], [46.13221, 41.19479], [46.27698, 41.19011], [46.37661, 41.10805], [46.456, 41.09984], [46.48558, 41.0576], [46.55096, 41.1104], [46.63969, 41.09515], [46.66148, 41.20533], [46.72375, 41.28609], [46.63658, 41.37727], [46.4669, 41.43331], [46.40307, 41.48464], [46.33925, 41.4963], [46.29794, 41.5724], [46.34126, 41.57454], [46.34039, 41.5947], [46.3253, 41.60912], [46.28182, 41.60089], [46.26531, 41.63339], [46.24429, 41.59883], [46.19759, 41.62327], [46.17891, 41.72094], [46.20538, 41.77205], [46.23962, 41.75811], [46.30863, 41.79133], [46.3984, 41.84399], [46.42738, 41.91323]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GF\", iso1A3: \"GUF\", iso1N3: \"254\", wikidata: \"Q3769\", nameEn: \"French Guiana\", country: \"FR\", groups: [\"Q3320166\", \"EU\", \"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"594\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-51.35485, 4.8383], [-53.7094, 6.2264], [-54.01074, 5.68785], [-54.01877, 5.52789], [-54.26916, 5.26909], [-54.4717, 4.91964], [-54.38444, 4.13222], [-54.19367, 3.84387], [-54.05128, 3.63557], [-53.98914, 3.627], [-53.9849, 3.58697], [-54.28534, 2.67798], [-54.42864, 2.42442], [-54.6084, 2.32856], [-54.16286, 2.10779], [-53.78743, 2.34412], [-52.96539, 2.1881], [-52.6906, 2.37298], [-52.31787, 3.17896], [-51.85573, 3.83427], [-51.82312, 3.85825], [-51.79599, 3.89336], [-51.61983, 4.14596], [-51.63798, 4.51394], [-51.35485, 4.8383]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GG\", iso1A3: \"GGY\", iso1N3: \"831\", wikidata: \"Q25230\", nameEn: \"Bailiwick of Guernsey\", country: \"GB\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"GH\", iso1A3: \"GHA\", iso1N3: \"288\", wikidata: \"Q117\", nameEn: \"Ghana\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"233\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-0.13493, 11.14075], [-0.27374, 11.17157], [-0.28566, 11.12713], [-0.35955, 11.07801], [-0.38219, 11.12596], [-0.42391, 11.11661], [-0.44298, 11.04292], [-0.61937, 10.91305], [-0.67143, 10.99811], [-2.83373, 11.0067], [-2.94232, 10.64281], [-2.83108, 10.40252], [-2.74174, 9.83172], [-2.76534, 9.56589], [-2.68802, 9.49343], [-2.69814, 9.22717], [-2.77799, 9.04949], [-2.66357, 9.01771], [-2.58243, 8.7789], [-2.49037, 8.20872], [-2.62901, 8.11495], [-2.61232, 8.02645], [-2.67787, 8.02055], [-2.74819, 7.92613], [-2.78395, 7.94974], [-2.79467, 7.86002], [-2.92339, 7.60847], [-2.97822, 7.27165], [-2.95438, 7.23737], [-3.23327, 6.81744], [-3.21954, 6.74407], [-3.25999, 6.62521], [-3.01896, 5.71697], [-2.95323, 5.71865], [-2.96671, 5.6415], [-2.93132, 5.62137], [-2.85378, 5.65156], [-2.76614, 5.60963], [-2.72737, 5.34789], [-2.77625, 5.34621], [-2.73074, 5.1364], [-2.75502, 5.10657], [-2.95261, 5.12477], [-2.96554, 5.10397], [-3.063, 5.13665], [-3.11073, 5.12675], [-3.10675, 5.08515], [-3.34019, 4.17519], [1.07031, 5.15655], [1.27574, 5.93551], [1.19771, 6.11522], [1.19966, 6.17069], [1.09187, 6.17074], [1.05969, 6.22998], [1.03108, 6.24064], [0.99652, 6.33779], [0.89283, 6.33779], [0.71048, 6.53083], [0.74862, 6.56517], [0.63659, 6.63857], [0.6497, 6.73682], [0.58176, 6.76049], [0.57406, 6.80348], [0.52853, 6.82921], [0.56508, 6.92971], [0.52098, 6.94391], [0.52217, 6.9723], [0.59606, 7.01252], [0.65327, 7.31643], [0.62943, 7.41099], [0.57223, 7.39326], [0.52455, 7.45354], [0.51979, 7.58706], [0.58295, 7.62368], [0.62943, 7.85751], [0.58891, 8.12779], [0.6056, 8.13959], [0.61156, 8.18324], [0.5913, 8.19622], [0.63897, 8.25873], [0.73432, 8.29529], [0.64731, 8.48866], [0.47211, 8.59945], [0.37319, 8.75262], [0.52455, 8.87746], [0.45424, 9.04581], [0.56388, 9.40697], [0.49118, 9.48339], [0.36485, 9.49749], [0.33148, 9.44812], [0.25758, 9.42696], [0.2254, 9.47869], [0.31241, 9.50337], [0.30406, 9.521], [0.2409, 9.52335], [0.23851, 9.57389], [0.38153, 9.58682], [0.36008, 9.6256], [0.29334, 9.59387], [0.26712, 9.66437], [0.28261, 9.69022], [0.32313, 9.6491], [0.34816, 9.66907], [0.34816, 9.71607], [0.32075, 9.72781], [0.36366, 10.03309], [0.41252, 10.02018], [0.41371, 10.06361], [0.35293, 10.09412], [0.39584, 10.31112], [0.33028, 10.30408], [0.29453, 10.41546], [0.18846, 10.4096], [0.12886, 10.53149], [-0.05945, 10.63458], [-0.09141, 10.7147], [-0.07327, 10.71845], [-0.07183, 10.76794], [-0.0228, 10.81916], [-0.02685, 10.8783], [-908e-5, 10.91644], [-63e-4, 10.96417], [0.03355, 10.9807], [0.02395, 11.06229], [342e-5, 11.08317], [-514e-5, 11.10763], [-0.0275, 11.11202], [-0.05733, 11.08628], [-0.14462, 11.10811], [-0.13493, 11.14075]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GI\", iso1A3: \"GIB\", iso1N3: \"292\", wikidata: \"Q1410\", nameEn: \"Gibraltar\", country: \"GB\", groups: [\"Q12837\", \"BOTS\", \"039\", \"150\", \"UN\"], callingCodes: [\"350\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-5.34064, 36.03744], [-5.27801, 36.14942], [-5.33822, 36.15272], [-5.34536, 36.15501], [-5.40526, 36.15488], [-5.34064, 36.03744]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GL\", iso1A3: \"GRL\", iso1N3: \"304\", wikidata: \"Q223\", nameEn: \"Greenland\", country: \"DK\", groups: [\"Q1451600\", \"021\", \"003\", \"019\", \"UN\"], callingCodes: [\"299\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-49.33696, 84.57952], [-68.21821, 80.48551], [-77.52957, 77.23408], [-46.37635, 57.3249], [-9.68082, 72.73731], [-5.7106, 84.28058], [-49.33696, 84.57952]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GM\", iso1A3: \"GMB\", iso1N3: \"270\", wikidata: \"Q1005\", nameEn: \"The Gambia\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"220\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-15.14917, 13.57989], [-14.36795, 13.23033], [-13.79409, 13.34472], [-13.8955, 13.59126], [-14.34721, 13.46578], [-14.93719, 13.80173], [-15.36504, 13.79313], [-15.47902, 13.58758], [-17.43598, 13.59273], [-17.43966, 13.04579], [-16.74676, 13.06025], [-16.69343, 13.16791], [-15.80355, 13.16729], [-15.80478, 13.34832], [-15.26908, 13.37768], [-15.14917, 13.57989]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GN\", iso1A3: \"GIN\", iso1N3: \"324\", wikidata: \"Q1006\", nameEn: \"Guinea\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"224\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-11.37536, 12.40788], [-11.46267, 12.44559], [-11.91331, 12.42008], [-12.35415, 12.32758], [-12.87336, 12.51892], [-13.06603, 12.49342], [-13.05296, 12.64003], [-13.70523, 12.68013], [-13.7039, 12.60313], [-13.65089, 12.49515], [-13.64168, 12.42764], [-13.70851, 12.24978], [-13.92745, 12.24077], [-13.94589, 12.16869], [-13.7039, 12.00869], [-13.7039, 11.70195], [-14.09799, 11.63649], [-14.26623, 11.67486], [-14.31513, 11.60713], [-14.51173, 11.49708], [-14.66677, 11.51188], [-14.77786, 11.36323], [-14.95993, 10.99244], [-15.07174, 10.89557], [-15.96748, 10.162], [-14.36218, 8.64107], [-13.29911, 9.04245], [-13.18586, 9.0925], [-13.08953, 9.0409], [-12.94095, 9.26335], [-12.76788, 9.3133], [-12.47254, 9.86834], [-12.24262, 9.92386], [-12.12634, 9.87203], [-11.91023, 9.93927], [-11.89624, 9.99763], [-11.2118, 10.00098], [-10.6534, 9.29919], [-10.74484, 9.07998], [-10.5783, 9.06386], [-10.56197, 8.81225], [-10.47707, 8.67669], [-10.61422, 8.5314], [-10.70565, 8.29235], [-10.63934, 8.35326], [-10.54891, 8.31174], [-10.37257, 8.48941], [-10.27575, 8.48711], [-10.203, 8.47991], [-10.14579, 8.52665], [-10.05375, 8.50697], [-10.05873, 8.42578], [-9.77763, 8.54633], [-9.47415, 8.35195], [-9.50898, 8.18455], [-9.41445, 8.02448], [-9.44928, 7.9284], [-9.35724, 7.74111], [-9.37465, 7.62032], [-9.48161, 7.37122], [-9.41943, 7.41809], [-9.305, 7.42056], [-9.20798, 7.38109], [-9.18311, 7.30461], [-9.09107, 7.1985], [-8.93435, 7.2824], [-8.85724, 7.26019], [-8.8448, 7.35149], [-8.72789, 7.51429], [-8.67814, 7.69428], [-8.55874, 7.70167], [-8.55874, 7.62525], [-8.47114, 7.55676], [-8.4003, 7.6285], [-8.21374, 7.54466], [-8.09931, 7.78626], [-8.13414, 7.87991], [-8.06449, 8.04989], [-7.94695, 8.00925], [-7.99919, 8.11023], [-7.98675, 8.20134], [-8.062, 8.16071], [-8.2411, 8.24196], [-8.22991, 8.48438], [-7.92518, 8.50652], [-7.65653, 8.36873], [-7.69882, 8.66148], [-7.95503, 8.81146], [-7.92518, 8.99332], [-7.73862, 9.08422], [-7.90777, 9.20456], [-7.85056, 9.41812], [-8.03463, 9.39604], [-8.14657, 9.55062], [-8.09434, 9.86936], [-8.15652, 9.94288], [-8.11921, 10.04577], [-8.01225, 10.1021], [-7.97971, 10.17117], [-7.9578, 10.2703], [-8.10207, 10.44649], [-8.22711, 10.41722], [-8.32614, 10.69273], [-8.2667, 10.91762], [-8.35083, 11.06234], [-8.66923, 10.99397], [-8.40058, 11.37466], [-8.80854, 11.66715], [-8.94784, 12.34842], [-9.13689, 12.50875], [-9.38067, 12.48446], [-9.32097, 12.29009], [-9.63938, 12.18312], [-9.714, 12.0226], [-10.30604, 12.24634], [-10.71897, 11.91552], [-10.80355, 12.1053], [-10.99758, 12.24634], [-11.24136, 12.01286], [-11.50006, 12.17826], [-11.37536, 12.40788]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GP\", iso1A3: \"GLP\", iso1N3: \"312\", wikidata: \"Q17012\", nameEn: \"Guadeloupe\", country: \"FR\", groups: [\"Q3320166\", \"EU\", \"029\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"590\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-60.03183, 16.1129], [-61.60296, 16.73066], [-63.00549, 15.26166], [-60.03183, 16.1129]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GQ\", iso1A3: \"GNQ\", iso1N3: \"226\", wikidata: \"Q983\", nameEn: \"Equatorial Guinea\", groups: [\"017\", \"202\", \"002\", \"UN\"], callingCodes: [\"240\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[9.22018, 3.72052], [8.34397, 4.30689], [7.71762, 0.6674], [3.35016, -3.29031], [9.66433, 1.06723], [9.75065, 1.06753], [9.79648, 1.0019], [11.35307, 1.00251], [11.3561, 2.17217], [9.991, 2.16561], [9.90749, 2.20049], [9.89012, 2.20457], [9.84716, 2.24676], [9.83238, 2.29079], [9.83754, 2.32428], [9.82123, 2.35097], [9.81162, 2.33797], [9.22018, 3.72052]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GR\", iso1A3: \"GRC\", iso1N3: \"300\", wikidata: \"Q41\", nameEn: \"Greece\", aliases: [\"EL\"], groups: [\"EU\", \"039\", \"150\", \"UN\"], callingCodes: [\"30\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[26.03489, 40.73051], [26.0754, 40.72772], [26.08638, 40.73214], [26.12495, 40.74283], [26.12854, 40.77339], [26.15685, 40.80709], [26.21351, 40.83298], [26.20856, 40.86048], [26.26169, 40.9168], [26.29441, 40.89119], [26.28623, 40.93005], [26.32259, 40.94042], [26.35894, 40.94292], [26.33297, 40.98388], [26.3606, 41.02027], [26.31928, 41.07386], [26.32259, 41.24929], [26.39861, 41.25053], [26.5209, 41.33993], [26.5837, 41.32131], [26.62997, 41.34613], [26.61767, 41.42281], [26.59742, 41.48058], [26.59196, 41.60491], [26.5209, 41.62592], [26.47958, 41.67037], [26.35957, 41.71149], [26.30255, 41.70925], [26.2654, 41.71544], [26.22888, 41.74139], [26.21325, 41.73223], [26.16841, 41.74858], [26.06148, 41.70345], [26.07083, 41.64584], [26.15146, 41.60828], [26.14328, 41.55496], [26.17951, 41.55409], [26.176, 41.50072], [26.14796, 41.47533], [26.20288, 41.43943], [26.16548, 41.42278], [26.12926, 41.35878], [25.87919, 41.30526], [25.8266, 41.34563], [25.70507, 41.29209], [25.66183, 41.31316], [25.61042, 41.30614], [25.55082, 41.31667], [25.52394, 41.2798], [25.48187, 41.28506], [25.28322, 41.23411], [25.11611, 41.34212], [24.942, 41.38685], [24.90928, 41.40876], [24.86136, 41.39298], [24.82514, 41.4035], [24.8041, 41.34913], [24.71529, 41.41928], [24.61129, 41.42278], [24.52599, 41.56808], [24.30513, 41.51297], [24.27124, 41.57682], [24.18126, 41.51735], [24.10063, 41.54796], [24.06323, 41.53222], [24.06908, 41.46132], [23.96975, 41.44118], [23.91483, 41.47971], [23.89613, 41.45257], [23.80148, 41.43943], [23.76525, 41.40175], [23.67644, 41.41139], [23.63203, 41.37632], [23.52453, 41.40262], [23.40416, 41.39999], [23.33639, 41.36317], [23.31301, 41.40525], [23.22771, 41.37106], [23.21953, 41.33773], [23.1833, 41.31755], [22.93334, 41.34104], [22.81199, 41.3398], [22.76408, 41.32225], [22.74538, 41.16321], [22.71266, 41.13945], [22.65306, 41.18168], [22.62852, 41.14385], [22.58295, 41.11568], [22.5549, 41.13065], [22.42285, 41.11921], [22.26744, 41.16409], [22.17629, 41.15969], [22.1424, 41.12449], [22.06527, 41.15617], [21.90869, 41.09191], [21.91102, 41.04786], [21.7556, 40.92525], [21.69601, 40.9429], [21.57448, 40.86076], [21.53007, 40.90759], [21.41555, 40.9173], [21.35595, 40.87578], [21.25779, 40.86165], [21.21105, 40.8855], [21.15262, 40.85546], [20.97887, 40.85475], [20.98396, 40.79109], [20.95752, 40.76982], [20.98134, 40.76046], [21.05833, 40.66586], [21.03932, 40.56299], [20.96908, 40.51526], [20.94925, 40.46625], [20.83688, 40.47882], [20.7906, 40.42726], [20.78234, 40.35803], [20.71789, 40.27739], [20.67162, 40.09433], [20.62566, 40.0897], [20.61081, 40.07866], [20.55593, 40.06524], [20.51297, 40.08168], [20.48487, 40.06271], [20.42373, 40.06777], [20.37911, 39.99058], [20.31135, 39.99438], [20.41546, 39.82832], [20.41475, 39.81437], [20.38572, 39.78516], [20.30804, 39.81563], [20.29152, 39.80421], [20.31961, 39.72799], [20.27412, 39.69884], [20.22707, 39.67459], [20.22376, 39.64532], [20.15988, 39.652], [20.12956, 39.65805], [20.05189, 39.69112], [20.00957, 39.69227], [19.98042, 39.6504], [19.92466, 39.69533], [19.97622, 39.78684], [19.95905, 39.82857], [19.0384, 40.35325], [19.20409, 39.7532], [22.5213, 33.45682], [29.73302, 35.92555], [29.69611, 36.10365], [29.61805, 36.14179], [29.61002, 36.1731], [29.48192, 36.18377], [29.30783, 36.01033], [28.23708, 36.56812], [27.95037, 36.46155], [27.89482, 36.69898], [27.46117, 36.53789], [27.24613, 36.71622], [27.45627, 36.9008], [27.20312, 36.94571], [27.14757, 37.32], [26.95583, 37.64989], [26.99377, 37.69034], [27.16428, 37.72343], [27.05537, 37.9131], [26.21136, 38.17558], [26.24183, 38.44695], [26.32173, 38.48731], [26.21136, 38.65436], [26.61814, 38.81372], [26.70773, 39.0312], [26.43357, 39.43096], [25.94257, 39.39358], [25.61285, 40.17161], [26.04292, 40.3958], [25.94795, 40.72797], [26.03489, 40.73051]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GS\", iso1A3: \"SGS\", iso1N3: \"239\", wikidata: \"Q35086\", nameEn: \"South Georgia and South Sandwich Islands\", country: \"GB\", groups: [\"BOTS\", \"005\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"500\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-35.26394, -43.68272], [-53.39656, -59.87088], [-22.31757, -59.85974], [-35.26394, -43.68272]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GT\", iso1A3: \"GTM\", iso1N3: \"320\", wikidata: \"Q774\", nameEn: \"Guatemala\", groups: [\"013\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"502\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-89.14985, 17.81563], [-90.98678, 17.81655], [-90.99199, 17.25192], [-91.43809, 17.25373], [-91.04436, 16.92175], [-90.69064, 16.70697], [-90.61212, 16.49832], [-90.40499, 16.40524], [-90.44567, 16.07573], [-91.73182, 16.07371], [-92.20983, 15.26077], [-92.0621, 15.07406], [-92.1454, 14.98143], [-92.1423, 14.88647], [-92.18161, 14.84147], [-92.1454, 14.6804], [-92.2261, 14.53423], [-92.37213, 14.39277], [-90.55276, 12.8866], [-90.11344, 13.73679], [-90.10505, 13.85104], [-89.88937, 14.0396], [-89.81807, 14.07073], [-89.76103, 14.02923], [-89.73251, 14.04133], [-89.75569, 14.07073], [-89.70756, 14.1537], [-89.61844, 14.21937], [-89.52397, 14.22628], [-89.50614, 14.26084], [-89.58814, 14.33165], [-89.57441, 14.41637], [-89.39028, 14.44561], [-89.34776, 14.43013], [-89.35189, 14.47553], [-89.23719, 14.58046], [-89.15653, 14.57802], [-89.13132, 14.71582], [-89.23467, 14.85596], [-89.15149, 14.97775], [-89.18048, 14.99967], [-89.15149, 15.07392], [-88.97343, 15.14039], [-88.32467, 15.63665], [-88.31459, 15.66942], [-88.24022, 15.69247], [-88.22552, 15.72294], [-88.20359, 16.03858], [-88.40779, 16.09624], [-88.95358, 15.88698], [-89.02415, 15.9063], [-89.17418, 15.90898], [-89.22683, 15.88619], [-89.15025, 17.04813], [-89.14985, 17.81563]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GU\", iso1A3: \"GUM\", iso1N3: \"316\", wikidata: \"Q16635\", nameEn: \"Guam\", aliases: [\"US-GU\"], country: \"US\", groups: [\"Q1352230\", \"Q153732\", \"057\", \"009\", \"UN\"], roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1 671\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[146.25931, 13.85876], [143.82485, 13.92273], [144.61642, 12.82462], [146.25931, 13.85876]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GW\", iso1A3: \"GNB\", iso1N3: \"624\", wikidata: \"Q1007\", nameEn: \"Guinea-Bissau\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"245\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-14.31513, 11.60713], [-14.26623, 11.67486], [-14.09799, 11.63649], [-13.7039, 11.70195], [-13.7039, 12.00869], [-13.94589, 12.16869], [-13.92745, 12.24077], [-13.70851, 12.24978], [-13.64168, 12.42764], [-13.65089, 12.49515], [-13.7039, 12.60313], [-13.70523, 12.68013], [-15.17582, 12.6847], [-15.67302, 12.42974], [-16.20591, 12.46157], [-16.38191, 12.36449], [-16.70562, 12.34803], [-17.4623, 11.92379], [-15.96748, 10.162], [-15.07174, 10.89557], [-14.95993, 10.99244], [-14.77786, 11.36323], [-14.66677, 11.51188], [-14.51173, 11.49708], [-14.31513, 11.60713]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"GY\", iso1A3: \"GUY\", iso1N3: \"328\", wikidata: \"Q734\", nameEn: \"Guyana\", groups: [\"005\", \"419\", \"019\", \"UN\"], driveSide: \"left\", callingCodes: [\"592\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-56.84822, 6.73257], [-59.54058, 8.6862], [-59.98508, 8.53046], [-59.85562, 8.35213], [-59.80661, 8.28906], [-59.83156, 8.23261], [-59.97059, 8.20791], [-60.02407, 8.04557], [-60.38056, 7.8302], [-60.51959, 7.83373], [-60.64793, 7.56877], [-60.71923, 7.55817], [-60.59802, 7.33194], [-60.63367, 7.25061], [-60.54098, 7.14804], [-60.44116, 7.20817], [-60.28074, 7.1162], [-60.39419, 6.94847], [-60.54873, 6.8631], [-61.13632, 6.70922], [-61.20762, 6.58174], [-61.15058, 6.19558], [-61.4041, 5.95304], [-60.73204, 5.20931], [-60.32352, 5.21299], [-60.20944, 5.28754], [-59.98129, 5.07097], [-60.04189, 4.69801], [-60.15953, 4.53456], [-59.78878, 4.45637], [-59.69361, 4.34069], [-59.73353, 4.20399], [-59.51963, 3.91951], [-59.86899, 3.57089], [-59.79769, 3.37162], [-59.99733, 2.92312], [-59.91177, 2.36759], [-59.7264, 2.27497], [-59.74066, 1.87596], [-59.25583, 1.40559], [-58.92072, 1.31293], [-58.84229, 1.17749], [-58.53571, 1.29154], [-58.4858, 1.48399], [-58.33887, 1.58014], [-58.01873, 1.51966], [-57.97336, 1.64566], [-57.77281, 1.73344], [-57.55743, 1.69605], [-57.35073, 1.98327], [-57.23981, 1.95808], [-57.09109, 2.01854], [-57.07092, 1.95304], [-56.7659, 1.89509], [-56.47045, 1.95135], [-56.55439, 2.02003], [-56.70519, 2.02964], [-57.35891, 3.32121], [-58.0307, 3.95513], [-57.8699, 4.89394], [-57.37442, 5.0208], [-57.22536, 5.15605], [-57.31629, 5.33714], [-56.84822, 6.73257]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"HK\", iso1A3: \"HKG\", iso1N3: \"344\", wikidata: \"Q8646\", nameEn: \"Hong Kong\", country: \"CN\", groups: [\"030\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"852\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[113.92195, 22.13873], [114.50148, 22.15017], [114.44998, 22.55977], [114.25154, 22.55977], [114.22888, 22.5436], [114.22185, 22.55343], [114.20655, 22.55706], [114.18338, 22.55444], [114.17247, 22.55944], [114.1597, 22.56041], [114.15123, 22.55163], [114.1482, 22.54091], [114.13823, 22.54319], [114.12665, 22.54003], [114.11656, 22.53415], [114.11181, 22.52878], [114.1034, 22.5352], [114.09692, 22.53435], [114.09048, 22.53716], [114.08606, 22.53276], [114.07817, 22.52997], [114.07267, 22.51855], [114.06272, 22.51617], [114.05729, 22.51104], [114.05438, 22.5026], [114.03113, 22.5065], [113.86771, 22.42972], [113.81621, 22.2163], [113.83338, 22.1826], [113.92195, 22.13873]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"HM\", iso1A3: \"HMD\", iso1N3: \"334\", wikidata: \"Q131198\", nameEn: \"Heard Island and McDonald Islands\", country: \"AU\", groups: [\"053\", \"009\", \"UN\"], driveSide: \"left\" }, geometry: { type: \"MultiPolygon\", coordinates: [[[[71.08716, -53.87687], [75.44182, -53.99822], [72.87012, -51.48322], [71.08716, -53.87687]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"HN\", iso1A3: \"HND\", iso1N3: \"340\", wikidata: \"Q783\", nameEn: \"Honduras\", groups: [\"013\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"504\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-83.86109, 17.73736], [-88.20359, 16.03858], [-88.22552, 15.72294], [-88.24022, 15.69247], [-88.31459, 15.66942], [-88.32467, 15.63665], [-88.97343, 15.14039], [-89.15149, 15.07392], [-89.18048, 14.99967], [-89.15149, 14.97775], [-89.23467, 14.85596], [-89.13132, 14.71582], [-89.15653, 14.57802], [-89.23719, 14.58046], [-89.35189, 14.47553], [-89.34776, 14.43013], [-89.04187, 14.33644], [-88.94608, 14.20207], [-88.85785, 14.17763], [-88.815, 14.11652], [-88.73182, 14.10919], [-88.70661, 14.04317], [-88.49738, 13.97224], [-88.48982, 13.86458], [-88.25791, 13.91108], [-88.23018, 13.99915], [-88.07641, 13.98447], [-88.00331, 13.86948], [-87.7966, 13.91353], [-87.68821, 13.80829], [-87.73106, 13.75443], [-87.78148, 13.52906], [-87.71657, 13.50577], [-87.72115, 13.46083], [-87.73841, 13.44169], [-87.77354, 13.45767], [-87.83467, 13.44655], [-87.84675, 13.41078], [-87.80177, 13.35689], [-87.73714, 13.32715], [-87.69751, 13.25228], [-87.55124, 13.12523], [-87.37107, 12.98646], [-87.06306, 13.00892], [-87.03785, 12.98682], [-86.93197, 13.05313], [-86.93383, 13.18677], [-86.87066, 13.30641], [-86.71267, 13.30348], [-86.76812, 13.79605], [-86.35219, 13.77157], [-86.14801, 14.04317], [-86.00685, 14.08474], [-86.03458, 13.99181], [-85.75477, 13.8499], [-85.73964, 13.9698], [-85.45762, 14.11304], [-85.32149, 14.2562], [-85.18602, 14.24929], [-85.1575, 14.53934], [-84.90082, 14.80489], [-84.82596, 14.82212], [-84.70119, 14.68078], [-84.48373, 14.63249], [-84.10584, 14.76353], [-83.89551, 14.76697], [-83.62101, 14.89448], [-83.49268, 15.01158], [-83.13724, 15.00002], [-83.04763, 15.03256], [-82.06974, 14.49418], [-81.58685, 18.0025], [-83.86109, 17.73736]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"HR\", iso1A3: \"HRV\", iso1N3: \"191\", wikidata: \"Q224\", nameEn: \"Croatia\", groups: [\"EU\", \"039\", \"150\", \"UN\"], callingCodes: [\"385\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[17.6444, 42.88641], [17.5392, 42.92787], [17.70879, 42.97223], [17.64268, 43.08595], [17.46986, 43.16559], [17.286, 43.33065], [17.25579, 43.40353], [17.29699, 43.44542], [17.24411, 43.49376], [17.15828, 43.49376], [17.00585, 43.58037], [16.80736, 43.76011], [16.75316, 43.77157], [16.70922, 43.84887], [16.55472, 43.95326], [16.50528, 44.0244], [16.43629, 44.02826], [16.43662, 44.07523], [16.36864, 44.08263], [16.18688, 44.27012], [16.21346, 44.35231], [16.12969, 44.38275], [16.16814, 44.40679], [16.10566, 44.52586], [16.03012, 44.55572], [16.00884, 44.58605], [16.05828, 44.61538], [15.89348, 44.74964], [15.8255, 44.71501], [15.72584, 44.82334], [15.79472, 44.8455], [15.76096, 44.87045], [15.74723, 44.96818], [15.78568, 44.97401], [15.74585, 45.0638], [15.78842, 45.11519], [15.76371, 45.16508], [15.83512, 45.22459], [15.98412, 45.23088], [16.12153, 45.09616], [16.29036, 44.99732], [16.35404, 45.00241], [16.35863, 45.03529], [16.3749, 45.05206], [16.38219, 45.05139], [16.38309, 45.05955], [16.40023, 45.1147], [16.4634, 45.14522], [16.49155, 45.21153], [16.52982, 45.22713], [16.5501, 45.2212], [16.56559, 45.22307], [16.60194, 45.23042], [16.64962, 45.20714], [16.74845, 45.20393], [16.78219, 45.19002], [16.81137, 45.18434], [16.83804, 45.18951], [16.92405, 45.27607], [16.9385, 45.22742], [17.0415, 45.20759], [17.18438, 45.14764], [17.24325, 45.146], [17.25131, 45.14957], [17.26815, 45.18444], [17.32092, 45.16246], [17.33573, 45.14521], [17.41229, 45.13335], [17.4498, 45.16119], [17.45615, 45.12523], [17.47589, 45.12656], [17.51469, 45.10791], [17.59104, 45.10816], [17.66571, 45.13408], [17.84826, 45.04489], [17.87148, 45.04645], [17.93706, 45.08016], [17.97336, 45.12245], [17.97834, 45.13831], [17.99479, 45.14958], [18.01594, 45.15163], [18.03121, 45.12632], [18.1624, 45.07654], [18.24387, 45.13699], [18.32077, 45.1021], [18.41896, 45.11083], [18.47939, 45.05871], [18.65723, 45.07544], [18.78357, 44.97741], [18.80661, 44.93561], [18.76369, 44.93707], [18.76347, 44.90669], [18.8704, 44.85097], [19.01994, 44.85493], [18.98957, 44.90645], [19.02871, 44.92541], [19.06853, 44.89915], [19.15573, 44.95409], [19.05205, 44.97692], [19.1011, 45.01191], [19.07952, 45.14668], [19.14063, 45.12972], [19.19144, 45.17863], [19.43589, 45.17137], [19.41941, 45.23475], [19.28208, 45.23813], [19.10774, 45.29547], [18.97446, 45.37528], [18.99918, 45.49333], [19.08364, 45.48804], [19.07471, 45.53086], [18.94562, 45.53712], [18.88776, 45.57253], [18.96691, 45.66731], [18.90305, 45.71863], [18.85783, 45.85493], [18.81394, 45.91329], [18.80211, 45.87995], [18.6792, 45.92057], [18.57483, 45.80772], [18.44368, 45.73972], [18.12439, 45.78905], [18.08869, 45.76511], [17.99805, 45.79671], [17.87377, 45.78522], [17.66545, 45.84207], [17.56821, 45.93728], [17.35672, 45.95209], [17.14592, 46.16697], [16.8903, 46.28122], [16.8541, 46.36255], [16.7154, 46.39523], [16.6639, 46.45203], [16.59527, 46.47524], [16.52604, 46.47831], [16.5007, 46.49644], [16.44036, 46.5171], [16.38771, 46.53608], [16.37193, 46.55008], [16.29793, 46.5121], [16.26733, 46.51505], [16.26759, 46.50566], [16.23961, 46.49653], [16.25124, 46.48067], [16.27398, 46.42875], [16.27329, 46.41467], [16.30162, 46.40437], [16.30233, 46.37837], [16.18824, 46.38282], [16.14859, 46.40547], [16.05281, 46.39141], [16.05065, 46.3833], [16.07314, 46.36458], [16.07616, 46.3463], [15.97965, 46.30652], [15.79284, 46.25811], [15.78817, 46.21719], [15.75479, 46.20336], [15.75436, 46.21969], [15.67395, 46.22478], [15.6434, 46.21396], [15.64904, 46.19229], [15.59909, 46.14761], [15.6083, 46.11992], [15.62317, 46.09103], [15.72977, 46.04682], [15.71246, 46.01196], [15.70327, 46.00015], [15.70636, 45.92116], [15.67967, 45.90455], [15.68383, 45.88867], [15.68232, 45.86819], [15.70411, 45.8465], [15.66662, 45.84085], [15.64185, 45.82915], [15.57952, 45.84953], [15.52234, 45.82195], [15.47325, 45.8253], [15.47531, 45.79802], [15.40836, 45.79491], [15.25423, 45.72275], [15.30872, 45.69014], [15.34919, 45.71623], [15.4057, 45.64727], [15.38952, 45.63682], [15.34214, 45.64702], [15.34695, 45.63382], [15.31027, 45.6303], [15.27747, 45.60504], [15.29837, 45.5841], [15.30249, 45.53224], [15.38188, 45.48752], [15.33051, 45.45258], [15.27758, 45.46678], [15.16862, 45.42309], [15.05187, 45.49079], [15.02385, 45.48533], [14.92266, 45.52788], [14.90554, 45.47769], [14.81992, 45.45913], [14.80124, 45.49515], [14.71718, 45.53442], [14.68605, 45.53006], [14.69694, 45.57366], [14.59576, 45.62812], [14.60977, 45.66403], [14.57397, 45.67165], [14.53816, 45.6205], [14.5008, 45.60852], [14.49769, 45.54424], [14.36693, 45.48642], [14.32487, 45.47142], [14.27681, 45.4902], [14.26611, 45.48239], [14.24239, 45.50607], [14.22371, 45.50388], [14.20348, 45.46896], [14.07116, 45.48752], [14.00578, 45.52352], [13.96063, 45.50825], [13.99488, 45.47551], [13.97309, 45.45258], [13.90771, 45.45149], [13.88124, 45.42637], [13.81742, 45.43729], [13.7785, 45.46787], [13.67398, 45.4436], [13.62902, 45.45898], [13.56979, 45.4895], [13.45644, 45.59464], [13.05142, 45.33128], [13.12821, 44.48877], [16.15283, 42.18525], [18.45131, 42.21682], [18.54128, 42.39171], [18.52152, 42.42302], [18.43588, 42.48556], [18.44307, 42.51077], [18.43735, 42.55921], [18.36197, 42.61423], [18.24318, 42.6112], [17.88201, 42.83668], [17.80854, 42.9182], [17.7948, 42.89556], [17.68151, 42.92725], [17.6444, 42.88641]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"HT\", iso1A3: \"HTI\", iso1N3: \"332\", wikidata: \"Q790\", nameEn: \"Haiti\", aliases: [\"RH\"], groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"509\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-71.71885, 18.78423], [-71.72624, 18.87802], [-71.77766, 18.95007], [-71.88102, 18.95007], [-71.74088, 19.0437], [-71.71088, 19.08353], [-71.69938, 19.10916], [-71.65337, 19.11759], [-71.62642, 19.21212], [-71.73229, 19.26686], [-71.77766, 19.33823], [-71.69448, 19.37866], [-71.6802, 19.45008], [-71.71268, 19.53374], [-71.71449, 19.55364], [-71.7429, 19.58445], [-71.75865, 19.70231], [-71.77419, 19.73128], [-72.38946, 20.27111], [-73.37289, 20.43199], [-74.7289, 18.71009], [-74.76465, 18.06252], [-72.29523, 17.48026], [-71.75671, 18.03456], [-71.73783, 18.07177], [-71.74994, 18.11115], [-71.75465, 18.14405], [-71.78271, 18.18302], [-71.69952, 18.34101], [-71.90875, 18.45821], [-71.88102, 18.50125], [-72.00201, 18.62312], [-71.95412, 18.64939], [-71.82556, 18.62551], [-71.71885, 18.78423]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"HU\", iso1A3: \"HUN\", iso1N3: \"348\", wikidata: \"Q28\", nameEn: \"Hungary\", groups: [\"EU\", \"151\", \"150\", \"UN\"], callingCodes: [\"36\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[21.72525, 48.34628], [21.67134, 48.3989], [21.6068, 48.50365], [21.44063, 48.58456], [21.11516, 48.49546], [20.83248, 48.5824], [20.5215, 48.53336], [20.29943, 48.26104], [20.24312, 48.2784], [19.92452, 48.1283], [19.63338, 48.25006], [19.52489, 48.19791], [19.47957, 48.09437], [19.28182, 48.08336], [19.23924, 48.0595], [19.01952, 48.07052], [18.82176, 48.04206], [18.76134, 47.97499], [18.76821, 47.87469], [18.8506, 47.82308], [18.74074, 47.8157], [18.66521, 47.76772], [18.56496, 47.76588], [18.29305, 47.73541], [18.02938, 47.75665], [17.71215, 47.7548], [17.23699, 48.02094], [17.16001, 48.00636], [17.09786, 47.97336], [17.11022, 47.92461], [17.08275, 47.87719], [17.00997, 47.86245], [17.07039, 47.81129], [17.05048, 47.79377], [17.08893, 47.70928], [16.87538, 47.68895], [16.86509, 47.72268], [16.82938, 47.68432], [16.7511, 47.67878], [16.72089, 47.73469], [16.65679, 47.74197], [16.61183, 47.76171], [16.54779, 47.75074], [16.53514, 47.73837], [16.55129, 47.72268], [16.4222, 47.66537], [16.58699, 47.61772], [16.64193, 47.63114], [16.71059, 47.52692], [16.64821, 47.50155], [16.6718, 47.46139], [16.57152, 47.40868], [16.52414, 47.41007], [16.49908, 47.39416], [16.45104, 47.41181], [16.47782, 47.25918], [16.44142, 47.25079], [16.43663, 47.21127], [16.41739, 47.20649], [16.42801, 47.18422], [16.4523, 47.18812], [16.46442, 47.16845], [16.44932, 47.14418], [16.52863, 47.13974], [16.46134, 47.09395], [16.52176, 47.05747], [16.43936, 47.03548], [16.51369, 47.00084], [16.28202, 47.00159], [16.27594, 46.9643], [16.22403, 46.939], [16.19904, 46.94134], [16.10983, 46.867], [16.14365, 46.8547], [16.15711, 46.85434], [16.21892, 46.86961], [16.2365, 46.87775], [16.2941, 46.87137], [16.34547, 46.83836], [16.3408, 46.80641], [16.31303, 46.79838], [16.30966, 46.7787], [16.37816, 46.69975], [16.42641, 46.69228], [16.41863, 46.66238], [16.38594, 46.6549], [16.39217, 46.63673], [16.50139, 46.56684], [16.52885, 46.53303], [16.52604, 46.5051], [16.59527, 46.47524], [16.6639, 46.45203], [16.7154, 46.39523], [16.8541, 46.36255], [16.8903, 46.28122], [17.14592, 46.16697], [17.35672, 45.95209], [17.56821, 45.93728], [17.66545, 45.84207], [17.87377, 45.78522], [17.99805, 45.79671], [18.08869, 45.76511], [18.12439, 45.78905], [18.44368, 45.73972], [18.57483, 45.80772], [18.6792, 45.92057], [18.80211, 45.87995], [18.81394, 45.91329], [18.99712, 45.93537], [19.01284, 45.96529], [19.0791, 45.96458], [19.10388, 46.04015], [19.14543, 45.9998], [19.28826, 45.99694], [19.52473, 46.1171], [19.56113, 46.16824], [19.66007, 46.19005], [19.81491, 46.1313], [19.93508, 46.17553], [20.01816, 46.17696], [20.03533, 46.14509], [20.09713, 46.17315], [20.26068, 46.12332], [20.28324, 46.1438], [20.35573, 46.16629], [20.45377, 46.14405], [20.49718, 46.18721], [20.63863, 46.12728], [20.76085, 46.21002], [20.74574, 46.25467], [20.86797, 46.28884], [21.06572, 46.24897], [21.16872, 46.30118], [21.28061, 46.44941], [21.26929, 46.4993], [21.33214, 46.63035], [21.43926, 46.65109], [21.5151, 46.72147], [21.48935, 46.7577], [21.52028, 46.84118], [21.59307, 46.86935], [21.59581, 46.91628], [21.68645, 46.99595], [21.648, 47.03902], [21.78395, 47.11104], [21.94463, 47.38046], [22.01055, 47.37767], [22.03389, 47.42508], [22.00917, 47.50492], [22.31816, 47.76126], [22.41979, 47.7391], [22.46559, 47.76583], [22.67247, 47.7871], [22.76617, 47.8417], [22.77991, 47.87211], [22.89849, 47.95851], [22.84276, 47.98602], [22.87847, 48.04665], [22.81804, 48.11363], [22.73427, 48.12005], [22.66835, 48.09162], [22.58733, 48.10813], [22.59007, 48.15121], [22.49806, 48.25189], [22.38133, 48.23726], [22.2083, 48.42534], [22.14689, 48.4005], [21.83339, 48.36242], [21.8279, 48.33321], [21.72525, 48.34628]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"IC\", wikidata: \"Q5813\", nameEn: \"Canary Islands\", country: \"ES\", groups: [\"Q3320166\", \"Q105472\", \"EU\", \"039\", \"150\", \"UN\"], isoStatus: \"excRes\", callingCodes: [\"34\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-12.00985, 30.24121], [-25.3475, 27.87574], [-14.43883, 27.02969], [-12.00985, 30.24121]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"ID\", iso1A3: \"IDN\", iso1N3: \"360\", wikidata: \"Q252\", nameEn: \"Indonesia\", aliases: [\"RI\"] }, geometry: null },\n  { type: \"Feature\", geometry: { type: \"MultiPolygon\", coordinates: [[[[-6.26218, 54.09785], [-6.29003, 54.11278], [-6.32694, 54.09337], [-6.36279, 54.11248], [-6.36605, 54.07234], [-6.47849, 54.06947], [-6.62842, 54.03503], [-6.66264, 54.0666], [-6.6382, 54.17071], [-6.70175, 54.20218], [-6.74575, 54.18788], [-6.81583, 54.22791], [-6.85179, 54.29176], [-6.87775, 54.34682], [-7.02034, 54.4212], [-7.19145, 54.31296], [-7.14908, 54.22732], [-7.25012, 54.20063], [-7.26316, 54.13863], [-7.29493, 54.12013], [-7.29687, 54.1354], [-7.28017, 54.16714], [-7.29157, 54.17191], [-7.34005, 54.14698], [-7.30553, 54.11869], [-7.32834, 54.11475], [-7.44567, 54.1539], [-7.4799, 54.12239], [-7.55812, 54.12239], [-7.69501, 54.20731], [-7.81397, 54.20159], [-7.8596, 54.21779], [-7.87101, 54.29299], [-8.04555, 54.36292], [-8.179, 54.46763], [-8.04538, 54.48941], [-7.99812, 54.54427], [-7.8596, 54.53671], [-7.70315, 54.62077], [-7.93293, 54.66603], [-7.83352, 54.73854], [-7.75041, 54.7103], [-7.64449, 54.75265], [-7.54671, 54.74606], [-7.54508, 54.79401], [-7.47626, 54.83084], [-7.4473, 54.87003], [-7.44404, 54.9403], [-7.40004, 54.94498], [-7.4033, 55.00391], [-7.34464, 55.04688], [-7.2471, 55.06933], [-6.34755, 55.49206], [-7.75229, 55.93854], [-11.75, 54], [-11, 51], [-6.03913, 51.13217], [-5.37267, 53.63269], [-6.26218, 54.09785]]]] }, properties: { iso1A2: \"IE\", iso1A3: \"IRL\", iso1N3: \"372\", wikidata: \"Q27\", nameEn: \"Republic of Ireland\", groups: [\"EU\", \"Q22890\", \"154\", \"150\", \"UN\"], driveSide: \"left\", callingCodes: [\"353\"] } },\n  { type: \"Feature\", properties: { iso1A2: \"IL\", iso1A3: \"ISR\", iso1N3: \"376\", wikidata: \"Q801\", nameEn: \"Israel\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"972\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[34.052, 31.46619], [34.29262, 31.70393], [34.48681, 31.59711], [34.56797, 31.54197], [34.48892, 31.48365], [34.40077, 31.40926], [34.36505, 31.36404], [34.37381, 31.30598], [34.36523, 31.28963], [34.29417, 31.24194], [34.26742, 31.21998], [34.92298, 29.45305], [34.97718, 29.54294], [34.98207, 29.58147], [35.02147, 29.66343], [35.14108, 30.07374], [35.19183, 30.34636], [35.16218, 30.43535], [35.19595, 30.50297], [35.21379, 30.60401], [35.29311, 30.71365], [35.33456, 30.81224], [35.33984, 30.8802], [35.41371, 30.95565], [35.43658, 31.12444], [35.40316, 31.25535], [35.47672, 31.49578], [35.39675, 31.49572], [35.22921, 31.37445], [35.13033, 31.3551], [35.02459, 31.35979], [34.92571, 31.34337], [34.88932, 31.37093], [34.87833, 31.39321], [34.89756, 31.43891], [34.93258, 31.47816], [34.94356, 31.50743], [34.9415, 31.55601], [34.95249, 31.59813], [35.00879, 31.65426], [35.08226, 31.69107], [35.10782, 31.71594], [35.11895, 31.71454], [35.12933, 31.7325], [35.13931, 31.73012], [35.15119, 31.73634], [35.15474, 31.73352], [35.16478, 31.73242], [35.18023, 31.72067], [35.20538, 31.72388], [35.21937, 31.71578], [35.22392, 31.71899], [35.23972, 31.70896], [35.24315, 31.71244], [35.2438, 31.7201], [35.24981, 31.72543], [35.25182, 31.73945], [35.26319, 31.74846], [35.25225, 31.7678], [35.26058, 31.79064], [35.25573, 31.81362], [35.26404, 31.82567], [35.251, 31.83085], [35.25753, 31.8387], [35.24816, 31.8458], [35.2304, 31.84222], [35.2249, 31.85433], [35.22817, 31.8638], [35.22567, 31.86745], [35.22294, 31.87889], [35.22014, 31.88264], [35.2136, 31.88241], [35.21276, 31.88153], [35.21016, 31.88237], [35.20945, 31.8815], [35.20791, 31.8821], [35.20673, 31.88151], [35.20381, 31.86716], [35.21128, 31.863], [35.216, 31.83894], [35.21469, 31.81835], [35.19461, 31.82687], [35.18169, 31.82542], [35.18603, 31.80901], [35.14174, 31.81325], [35.07677, 31.85627], [35.05617, 31.85685], [35.01978, 31.82944], [34.9724, 31.83352], [34.99712, 31.85569], [35.03489, 31.85919], [35.03978, 31.89276], [35.03489, 31.92448], [35.00124, 31.93264], [34.98682, 31.96935], [35.00261, 32.027], [34.9863, 32.09551], [34.99437, 32.10962], [34.98507, 32.12606], [34.99039, 32.14626], [34.96009, 32.17503], [34.95703, 32.19522], [34.98885, 32.20758], [35.01841, 32.23981], [35.02939, 32.2671], [35.01119, 32.28684], [35.01772, 32.33863], [35.04243, 32.35008], [35.05142, 32.3667], [35.0421, 32.38242], [35.05311, 32.4024], [35.05423, 32.41754], [35.07059, 32.4585], [35.08564, 32.46948], [35.09236, 32.47614], [35.10024, 32.47856], [35.10882, 32.4757], [35.15937, 32.50466], [35.2244, 32.55289], [35.25049, 32.52453], [35.29306, 32.50947], [35.30685, 32.51024], [35.35212, 32.52047], [35.40224, 32.50136], [35.42034, 32.46009], [35.41598, 32.45593], [35.41048, 32.43706], [35.42078, 32.41562], [35.55807, 32.38674], [35.55494, 32.42687], [35.57485, 32.48669], [35.56614, 32.64393], [35.59813, 32.65159], [35.61669, 32.67999], [35.66527, 32.681], [35.68467, 32.70715], [35.75983, 32.74803], [35.78745, 32.77938], [35.83758, 32.82817], [35.84021, 32.8725], [35.87012, 32.91976], [35.89298, 32.9456], [35.87188, 32.98028], [35.84802, 33.1031], [35.81911, 33.11077], [35.81911, 33.1336], [35.84285, 33.16673], [35.83846, 33.19397], [35.81647, 33.2028], [35.81295, 33.24841], [35.77513, 33.27342], [35.813, 33.3172], [35.77477, 33.33609], [35.62019, 33.27278], [35.62283, 33.24226], [35.58502, 33.26653], [35.58326, 33.28381], [35.56523, 33.28969], [35.55555, 33.25844], [35.54544, 33.25513], [35.54808, 33.236], [35.5362, 33.23196], [35.54228, 33.19865], [35.52573, 33.11921], [35.50335, 33.114], [35.50272, 33.09056], [35.448, 33.09264], [35.43059, 33.06659], [35.35223, 33.05617], [35.31429, 33.10515], [35.1924, 33.08743], [35.10645, 33.09318], [34.78515, 33.20368], [33.62659, 31.82938], [34.052, 31.46619]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"IM\", iso1A3: \"IMN\", iso1N3: \"833\", wikidata: \"Q9676\", nameEn: \"Isle of Man\", country: \"GB\", groups: [\"Q185086\", \"154\", \"150\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"44 01624\", \"44 07624\", \"44 07524\", \"44 07924\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-3.98763, 54.07351], [-4.1819, 54.57861], [-5.6384, 53.81157], [-3.98763, 54.07351]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"IN\", iso1A3: \"IND\", iso1N3: \"356\", wikidata: \"Q668\", nameEn: \"India\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"IO\", iso1A3: \"IOT\", iso1N3: \"086\", wikidata: \"Q43448\", nameEn: \"British Indian Ocean Territory\", country: \"GB\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"IQ\", iso1A3: \"IRQ\", iso1N3: \"368\", wikidata: \"Q796\", nameEn: \"Iraq\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"964\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[42.78887, 37.38615], [42.56725, 37.14878], [42.35724, 37.10998], [42.36697, 37.0627], [41.81736, 36.58782], [41.40058, 36.52502], [41.28864, 36.35368], [41.2564, 36.06012], [41.37027, 35.84095], [41.38184, 35.62502], [41.26569, 35.42708], [41.21654, 35.1508], [41.2345, 34.80049], [41.12388, 34.65742], [40.97676, 34.39788], [40.64314, 34.31604], [38.79171, 33.37328], [39.08202, 32.50304], [38.98762, 32.47694], [39.04251, 32.30203], [39.26157, 32.35555], [39.29903, 32.23259], [40.01521, 32.05667], [42.97601, 30.72204], [42.97796, 30.48295], [44.72255, 29.19736], [46.42415, 29.05947], [46.5527, 29.10283], [46.89695, 29.50584], [47.15166, 30.01044], [47.37192, 30.10421], [47.7095, 30.10453], [48.01114, 29.98906], [48.06782, 30.02906], [48.17332, 30.02448], [48.40479, 29.85763], [48.59531, 29.66815], [48.83867, 29.78572], [48.61441, 29.93675], [48.51011, 29.96238], [48.44785, 30.00148], [48.4494, 30.04456], [48.43384, 30.08233], [48.38869, 30.11062], [48.38714, 30.13485], [48.41671, 30.17254], [48.41117, 30.19846], [48.26393, 30.3408], [48.24385, 30.33846], [48.21279, 30.31644], [48.19425, 30.32796], [48.18321, 30.39703], [48.14585, 30.44133], [48.02443, 30.4789], [48.03221, 30.9967], [47.68219, 31.00004], [47.6804, 31.39086], [47.86337, 31.78422], [47.64771, 32.07666], [47.52474, 32.15972], [47.57144, 32.20583], [47.37529, 32.47808], [47.17218, 32.45393], [46.46788, 32.91992], [46.32298, 32.9731], [46.17198, 32.95612], [46.09103, 32.98354], [46.15175, 33.07229], [46.03966, 33.09577], [46.05367, 33.13097], [46.11905, 33.11924], [46.20623, 33.20395], [45.99919, 33.5082], [45.86687, 33.49263], [45.96183, 33.55751], [45.89801, 33.63661], [45.77814, 33.60938], [45.50261, 33.94968], [45.42789, 33.9458], [45.41077, 33.97421], [45.47264, 34.03099], [45.56176, 34.15088], [45.58667, 34.30147], [45.53552, 34.35148], [45.49171, 34.3439], [45.46697, 34.38221], [45.43879, 34.45949], [45.51883, 34.47692], [45.53219, 34.60441], [45.59074, 34.55558], [45.60224, 34.55057], [45.73923, 34.54416], [45.70031, 34.69277], [45.65672, 34.7222], [45.68284, 34.76624], [45.70031, 34.82322], [45.73641, 34.83975], [45.79682, 34.85133], [45.78904, 34.91135], [45.86532, 34.89858], [45.89477, 34.95805], [45.87864, 35.03441], [45.92173, 35.0465], [45.92203, 35.09538], [45.93108, 35.08148], [45.94756, 35.09188], [46.06508, 35.03699], [46.07747, 35.0838], [46.11763, 35.07551], [46.19116, 35.11097], [46.15642, 35.1268], [46.16229, 35.16984], [46.19738, 35.18536], [46.18457, 35.22561], [46.11367, 35.23729], [46.15474, 35.2883], [46.13152, 35.32548], [46.05358, 35.38568], [45.98453, 35.49848], [46.01518, 35.52012], [45.97584, 35.58132], [46.03028, 35.57416], [46.01307, 35.59756], [46.0165, 35.61501], [45.99452, 35.63574], [46.0117, 35.65059], [46.01631, 35.69139], [46.23736, 35.71414], [46.34166, 35.78363], [46.32921, 35.82655], [46.17198, 35.8013], [46.08325, 35.8581], [45.94711, 35.82218], [45.89784, 35.83708], [45.81442, 35.82107], [45.76145, 35.79898], [45.6645, 35.92872], [45.60018, 35.96069], [45.55245, 35.99943], [45.46594, 36.00042], [45.38275, 35.97156], [45.33916, 35.99424], [45.37652, 36.06222], [45.37312, 36.09917], [45.32235, 36.17383], [45.30038, 36.27769], [45.26261, 36.3001], [45.27394, 36.35846], [45.23953, 36.43257], [45.11811, 36.40751], [45.00759, 36.5402], [45.06985, 36.62645], [45.06985, 36.6814], [45.01537, 36.75128], [44.84725, 36.77622], [44.83479, 36.81362], [44.90173, 36.86096], [44.91199, 36.91468], [44.89862, 37.01897], [44.81611, 37.04383], [44.75229, 37.11958], [44.78319, 37.1431], [44.76698, 37.16162], [44.63179, 37.19229], [44.42631, 37.05825], [44.38117, 37.05825], [44.35315, 37.04955], [44.35937, 37.02843], [44.30645, 36.97373], [44.25975, 36.98119], [44.18503, 37.09551], [44.22239, 37.15756], [44.27998, 37.16501], [44.2613, 37.25055], [44.13521, 37.32486], [44.02002, 37.33229], [43.90949, 37.22453], [43.84878, 37.22205], [43.82699, 37.19477], [43.8052, 37.22825], [43.7009, 37.23692], [43.63085, 37.21957], [43.56702, 37.25675], [43.50787, 37.24436], [43.33508, 37.33105], [43.30083, 37.30629], [43.11403, 37.37436], [42.93705, 37.32015], [42.78887, 37.38615]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"IR\", iso1A3: \"IRN\", iso1N3: \"364\", wikidata: \"Q794\", nameEn: \"Iran\", groups: [\"034\", \"142\", \"UN\"], callingCodes: [\"98\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[44.96746, 39.42998], [44.88916, 39.59653], [44.81043, 39.62677], [44.71806, 39.71124], [44.65422, 39.72163], [44.6137, 39.78393], [44.47298, 39.68788], [44.48111, 39.61579], [44.41849, 39.56659], [44.42832, 39.4131], [44.37921, 39.4131], [44.29818, 39.378], [44.22452, 39.4169], [44.03667, 39.39223], [44.1043, 39.19842], [44.20946, 39.13975], [44.18863, 38.93881], [44.30322, 38.81581], [44.26155, 38.71427], [44.28065, 38.6465], [44.32058, 38.62752], [44.3207, 38.49799], [44.3119, 38.37887], [44.38309, 38.36117], [44.44386, 38.38295], [44.50115, 38.33939], [44.42476, 38.25763], [44.22509, 37.88859], [44.3883, 37.85433], [44.45948, 37.77065], [44.55498, 37.783], [44.62096, 37.71985], [44.56887, 37.6429], [44.61401, 37.60165], [44.58449, 37.45018], [44.81021, 37.2915], [44.75986, 37.21549], [44.7868, 37.16644], [44.78319, 37.1431], [44.75229, 37.11958], [44.81611, 37.04383], [44.89862, 37.01897], [44.91199, 36.91468], [44.90173, 36.86096], [44.83479, 36.81362], [44.84725, 36.77622], [45.01537, 36.75128], [45.06985, 36.6814], [45.06985, 36.62645], [45.00759, 36.5402], [45.11811, 36.40751], [45.23953, 36.43257], [45.27394, 36.35846], [45.26261, 36.3001], [45.30038, 36.27769], [45.32235, 36.17383], [45.37312, 36.09917], [45.37652, 36.06222], [45.33916, 35.99424], [45.38275, 35.97156], [45.46594, 36.00042], [45.55245, 35.99943], [45.60018, 35.96069], [45.6645, 35.92872], [45.76145, 35.79898], [45.81442, 35.82107], [45.89784, 35.83708], [45.94711, 35.82218], [46.08325, 35.8581], [46.17198, 35.8013], [46.32921, 35.82655], [46.34166, 35.78363], [46.23736, 35.71414], [46.01631, 35.69139], [46.0117, 35.65059], [45.99452, 35.63574], [46.0165, 35.61501], [46.01307, 35.59756], [46.03028, 35.57416], [45.97584, 35.58132], [46.01518, 35.52012], [45.98453, 35.49848], [46.05358, 35.38568], [46.13152, 35.32548], [46.15474, 35.2883], [46.11367, 35.23729], [46.18457, 35.22561], [46.19738, 35.18536], [46.16229, 35.16984], [46.15642, 35.1268], [46.19116, 35.11097], [46.11763, 35.07551], [46.07747, 35.0838], [46.06508, 35.03699], [45.94756, 35.09188], [45.93108, 35.08148], [45.92203, 35.09538], [45.92173, 35.0465], [45.87864, 35.03441], [45.89477, 34.95805], [45.86532, 34.89858], [45.78904, 34.91135], [45.79682, 34.85133], [45.73641, 34.83975], [45.70031, 34.82322], [45.68284, 34.76624], [45.65672, 34.7222], [45.70031, 34.69277], [45.73923, 34.54416], [45.60224, 34.55057], [45.59074, 34.55558], [45.53219, 34.60441], [45.51883, 34.47692], [45.43879, 34.45949], [45.46697, 34.38221], [45.49171, 34.3439], [45.53552, 34.35148], [45.58667, 34.30147], [45.56176, 34.15088], [45.47264, 34.03099], [45.41077, 33.97421], [45.42789, 33.9458], [45.50261, 33.94968], [45.77814, 33.60938], [45.89801, 33.63661], [45.96183, 33.55751], [45.86687, 33.49263], [45.99919, 33.5082], [46.20623, 33.20395], [46.11905, 33.11924], [46.05367, 33.13097], [46.03966, 33.09577], [46.15175, 33.07229], [46.09103, 32.98354], [46.17198, 32.95612], [46.32298, 32.9731], [46.46788, 32.91992], [47.17218, 32.45393], [47.37529, 32.47808], [47.57144, 32.20583], [47.52474, 32.15972], [47.64771, 32.07666], [47.86337, 31.78422], [47.6804, 31.39086], [47.68219, 31.00004], [48.03221, 30.9967], [48.02443, 30.4789], [48.14585, 30.44133], [48.18321, 30.39703], [48.19425, 30.32796], [48.21279, 30.31644], [48.24385, 30.33846], [48.26393, 30.3408], [48.41117, 30.19846], [48.41671, 30.17254], [48.38714, 30.13485], [48.38869, 30.11062], [48.43384, 30.08233], [48.4494, 30.04456], [48.44785, 30.00148], [48.51011, 29.96238], [48.61441, 29.93675], [48.83867, 29.78572], [49.98877, 27.87827], [50.37726, 27.89227], [54.39838, 25.68383], [55.14145, 25.62624], [55.81777, 26.18798], [56.2644, 26.58649], [56.68954, 26.76645], [56.79239, 26.41236], [56.82555, 25.7713], [56.86325, 25.03856], [61.46682, 24.57869], [61.6433, 25.27541], [61.683, 25.66638], [61.83968, 25.7538], [61.83831, 26.07249], [61.89391, 26.26251], [62.05117, 26.31647], [62.21304, 26.26601], [62.31484, 26.528], [62.77352, 26.64099], [63.1889, 26.65072], [63.18688, 26.83844], [63.25005, 26.84212], [63.25005, 27.08692], [63.32283, 27.14437], [63.19649, 27.25674], [62.80604, 27.22412], [62.79684, 27.34381], [62.84905, 27.47627], [62.7638, 28.02992], [62.79412, 28.28108], [62.59499, 28.24842], [62.40259, 28.42703], [61.93581, 28.55284], [61.65978, 28.77937], [61.53765, 29.00507], [61.31508, 29.38903], [60.87231, 29.86514], [61.80829, 30.84224], [61.78268, 30.92724], [61.8335, 30.97669], [61.83257, 31.0452], [61.80957, 31.12576], [61.80569, 31.16167], [61.70929, 31.37391], [60.84541, 31.49561], [60.86191, 32.22565], [60.56485, 33.12944], [60.88908, 33.50219], [60.91133, 33.55596], [60.69573, 33.56054], [60.57762, 33.59772], [60.5485, 33.73422], [60.5838, 33.80793], [60.50209, 34.13992], [60.66502, 34.31539], [60.91321, 34.30411], [60.72316, 34.52857], [60.99922, 34.63064], [61.00197, 34.70631], [61.06926, 34.82139], [61.12831, 35.09938], [61.0991, 35.27845], [61.18187, 35.30249], [61.27371, 35.61482], [61.22719, 35.67038], [61.26152, 35.80749], [61.22444, 35.92879], [61.12007, 35.95992], [61.22719, 36.12759], [61.1393, 36.38782], [61.18187, 36.55348], [61.14516, 36.64644], [60.34767, 36.63214], [60.00768, 37.04102], [59.74678, 37.12499], [59.55178, 37.13594], [59.39385, 37.34257], [59.39797, 37.47892], [59.33507, 37.53146], [59.22905, 37.51161], [58.9338, 37.67374], [58.6921, 37.64548], [58.5479, 37.70526], [58.47786, 37.6433], [58.39959, 37.63134], [58.22999, 37.6856], [58.21399, 37.77281], [57.79534, 37.89299], [57.35042, 37.98546], [57.37236, 38.09321], [57.21169, 38.28965], [57.03453, 38.18717], [56.73928, 38.27887], [56.62255, 38.24005], [56.43303, 38.26054], [56.32454, 38.18502], [56.33278, 38.08132], [55.97847, 38.08024], [55.76561, 38.12238], [55.44152, 38.08564], [55.13412, 37.94705], [54.851, 37.75739], [54.77684, 37.62264], [54.81804, 37.61285], [54.77822, 37.51597], [54.67247, 37.43532], [54.58664, 37.45809], [54.36211, 37.34912], [54.24565, 37.32047], [53.89734, 37.3464], [48.88288, 38.43975], [48.84969, 38.45015], [48.81072, 38.44853], [48.78979, 38.45026], [48.70001, 38.40564], [48.62217, 38.40198], [48.58793, 38.45076], [48.45084, 38.61013], [48.3146, 38.59958], [48.24773, 38.71883], [48.02581, 38.82705], [48.01409, 38.90333], [48.07734, 38.91616], [48.08627, 38.94434], [48.28437, 38.97186], [48.33884, 39.03022], [48.31239, 39.09278], [48.15361, 39.19419], [48.12404, 39.25208], [48.15984, 39.30028], [48.37385, 39.37584], [48.34264, 39.42935], [47.98977, 39.70999], [47.84774, 39.66285], [47.50099, 39.49615], [47.38978, 39.45999], [47.31301, 39.37492], [47.05927, 39.24846], [47.05771, 39.20143], [46.95341, 39.13505], [46.92539, 39.16644], [46.83822, 39.13143], [46.75752, 39.03231], [46.53497, 38.86548], [46.34059, 38.92076], [46.20601, 38.85262], [46.14785, 38.84206], [46.06766, 38.87861], [46.00228, 38.87376], [45.94624, 38.89072], [45.90266, 38.87739], [45.83883, 38.90768], [45.65172, 38.95199], [45.6155, 38.94304], [45.6131, 38.964], [45.44966, 38.99243], [45.44811, 39.04927], [45.40452, 39.07224], [45.40148, 39.09007], [45.30489, 39.18333], [45.16168, 39.21952], [45.08751, 39.35052], [45.05932, 39.36435], [44.96746, 39.42998]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"IS\", iso1A3: \"ISL\", iso1N3: \"352\", wikidata: \"Q189\", nameEn: \"Iceland\", groups: [\"154\", \"150\", \"UN\"], callingCodes: [\"354\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-33.15676, 62.62995], [-8.25539, 63.0423], [-15.70914, 69.67442], [-33.15676, 62.62995]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"IT\", iso1A3: \"ITA\", iso1N3: \"380\", wikidata: \"Q38\", nameEn: \"Italy\", groups: [\"EU\", \"039\", \"150\", \"UN\"], callingCodes: [\"39\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[8.95861, 45.96485], [8.97604, 45.96151], [8.97741, 45.98317], [8.96668, 45.98436], [8.95861, 45.96485]]], [[[7.63035, 43.57419], [9.56115, 43.20816], [10.09675, 41.44089], [7.60802, 41.05927], [7.89009, 38.19924], [11.2718, 37.6713], [12.13667, 34.20326], [14.02721, 36.53141], [17.67657, 35.68918], [18.83516, 40.36999], [16.15283, 42.18525], [13.12821, 44.48877], [13.05142, 45.33128], [13.45644, 45.59464], [13.6076, 45.64761], [13.7198, 45.59352], [13.74587, 45.59811], [13.78445, 45.5825], [13.84106, 45.58185], [13.86771, 45.59898], [13.8695, 45.60835], [13.9191, 45.6322], [13.87933, 45.65207], [13.83422, 45.68703], [13.83332, 45.70855], [13.8235, 45.7176], [13.66986, 45.79955], [13.59784, 45.8072], [13.58858, 45.83503], [13.57563, 45.8425], [13.58644, 45.88173], [13.59565, 45.89446], [13.60857, 45.89907], [13.61931, 45.91782], [13.63815, 45.93607], [13.6329, 45.94894], [13.64307, 45.98326], [13.63458, 45.98947], [13.62074, 45.98388], [13.58903, 45.99009], [13.56759, 45.96991], [13.52963, 45.96588], [13.50104, 45.98078], [13.47474, 46.00546], [13.49702, 46.01832], [13.50998, 46.04498], [13.49568, 46.04839], [13.50104, 46.05986], [13.57072, 46.09022], [13.64053, 46.13587], [13.66472, 46.17392], [13.64451, 46.18966], [13.56682, 46.18703], [13.56114, 46.2054], [13.47587, 46.22725], [13.42218, 46.20758], [13.37671, 46.29668], [13.44808, 46.33507], [13.43418, 46.35992], [13.47019, 46.3621], [13.5763, 46.40915], [13.5763, 46.42613], [13.59777, 46.44137], [13.68684, 46.43881], [13.7148, 46.5222], [13.64088, 46.53438], [13.27627, 46.56059], [12.94445, 46.60401], [12.59992, 46.6595], [12.38708, 46.71529], [12.27591, 46.88651], [12.2006, 46.88854], [12.11675, 47.01241], [12.21781, 47.03996], [12.19254, 47.09331], [11.74789, 46.98484], [11.50739, 47.00644], [11.33355, 46.99862], [11.10618, 46.92966], [11.00764, 46.76896], [10.72974, 46.78972], [10.75753, 46.82258], [10.66405, 46.87614], [10.54783, 46.84505], [10.47197, 46.85698], [10.38659, 46.67847], [10.40475, 46.63671], [10.44686, 46.64162], [10.49375, 46.62049], [10.46136, 46.53164], [10.25309, 46.57432], [10.23674, 46.63484], [10.10307, 46.61003], [10.03715, 46.44479], [10.165, 46.41051], [10.10506, 46.3372], [10.17862, 46.25626], [10.14439, 46.22992], [10.07055, 46.21668], [9.95249, 46.38045], [9.73086, 46.35071], [9.71273, 46.29266], [9.57015, 46.2958], [9.46117, 46.37481], [9.45936, 46.50873], [9.40487, 46.46621], [9.36128, 46.5081], [9.28136, 46.49685], [9.25502, 46.43743], [9.29226, 46.32717], [9.24503, 46.23616], [9.01618, 46.04928], [8.99257, 45.9698], [9.09065, 45.89906], [9.06642, 45.8761], [9.04546, 45.84968], [9.04059, 45.8464], [9.03505, 45.83976], [9.03793, 45.83548], [9.03279, 45.82865], [9.0298, 45.82127], [9.00324, 45.82055], [8.99663, 45.83466], [8.9621, 45.83707], [8.94737, 45.84285], [8.91129, 45.8388], [8.93504, 45.86245], [8.94372, 45.86587], [8.93649, 45.86775], [8.88904, 45.95465], [8.86688, 45.96135], [8.85121, 45.97239], [8.8319, 45.9879], [8.79362, 45.99207], [8.78585, 45.98973], [8.79414, 46.00913], [8.85617, 46.0748], [8.80778, 46.10085], [8.75697, 46.10395], [8.62242, 46.12112], [8.45032, 46.26869], [8.46317, 46.43712], [8.42464, 46.46367], [8.30648, 46.41587], [8.31162, 46.38044], [8.08814, 46.26692], [8.16866, 46.17817], [8.11383, 46.11577], [8.02906, 46.10331], [7.98881, 45.99867], [7.9049, 45.99945], [7.85949, 45.91485], [7.56343, 45.97421], [7.10685, 45.85653], [7.04151, 45.92435], [6.95315, 45.85163], [6.80785, 45.83265], [6.80785, 45.71864], [6.98948, 45.63869], [7.00037, 45.509], [7.18019, 45.40071], [7.10572, 45.32924], [7.13115, 45.25386], [7.07074, 45.21228], [6.96706, 45.20841], [6.85144, 45.13226], [6.7697, 45.16044], [6.62803, 45.11175], [6.66981, 45.02324], [6.74791, 45.01939], [6.74519, 44.93661], [6.75518, 44.89915], [6.90774, 44.84322], [6.93499, 44.8664], [7.02217, 44.82519], [7.00401, 44.78782], [7.07484, 44.68073], [7.00582, 44.69364], [6.95133, 44.66264], [6.96042, 44.62129], [6.85507, 44.53072], [6.86233, 44.49834], [6.94504, 44.43112], [6.88784, 44.42043], [6.89171, 44.36637], [6.98221, 44.28289], [7.00764, 44.23736], [7.16929, 44.20352], [7.27827, 44.1462], [7.34547, 44.14359], [7.36364, 44.11882], [7.62155, 44.14881], [7.63245, 44.17877], [7.68694, 44.17487], [7.66878, 44.12795], [7.72508, 44.07578], [7.6597, 44.03009], [7.66848, 43.99943], [7.65266, 43.9763], [7.60771, 43.95772], [7.56858, 43.94506], [7.56075, 43.89932], [7.51162, 43.88301], [7.49355, 43.86551], [7.50423, 43.84345], [7.53006, 43.78405], [7.63035, 43.57419]], [[12.45181, 41.90056], [12.44834, 41.90095], [12.44582, 41.90194], [12.44815, 41.90326], [12.44984, 41.90545], [12.45091, 41.90625], [12.45543, 41.90738], [12.45561, 41.90629], [12.45762, 41.9058], [12.45755, 41.9033], [12.45826, 41.90281], [12.45834, 41.90174], [12.4577, 41.90115], [12.45691, 41.90125], [12.45626, 41.90172], [12.45435, 41.90143], [12.45446, 41.90028], [12.45181, 41.90056]], [[12.45648, 43.89369], [12.44184, 43.90498], [12.41641, 43.89991], [12.40935, 43.9024], [12.41233, 43.90956], [12.40733, 43.92379], [12.41551, 43.92984], [12.41165, 43.93769], [12.40506, 43.94325], [12.40415, 43.95485], [12.41414, 43.95273], [12.42005, 43.9578], [12.43662, 43.95698], [12.44684, 43.96597], [12.46205, 43.97463], [12.47853, 43.98052], [12.49406, 43.98492], [12.50678, 43.99113], [12.51463, 43.99122], [12.5154, 43.98508], [12.51064, 43.98165], [12.51109, 43.97201], [12.50622, 43.97131], [12.50875, 43.96198], [12.50655, 43.95796], [12.51427, 43.94897], [12.51553, 43.94096], [12.50496, 43.93017], [12.50269, 43.92363], [12.49724, 43.92248], [12.49247, 43.91774], [12.49429, 43.90973], [12.48771, 43.89706], [12.45648, 43.89369]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"JE\", iso1A3: \"JEY\", iso1N3: \"832\", wikidata: \"Q785\", nameEn: \"Bailiwick of Jersey\", country: \"GB\", groups: [\"830\", \"Q185086\", \"154\", \"150\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"44 01534\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-2.00491, 48.86706], [-1.83944, 49.23037], [-2.09454, 49.46288], [-2.65349, 49.15373], [-2.00491, 48.86706]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"JM\", iso1A3: \"JAM\", iso1N3: \"388\", wikidata: \"Q766\", nameEn: \"Jamaica\", aliases: [\"JA\"], groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", callingCodes: [\"1 876\", \"1 658\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-74.09729, 17.36817], [-78.9741, 19.59515], [-78.34606, 16.57862], [-74.09729, 17.36817]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"JO\", iso1A3: \"JOR\", iso1N3: \"400\", wikidata: \"Q810\", nameEn: \"Jordan\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"962\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[39.04251, 32.30203], [38.98762, 32.47694], [39.08202, 32.50304], [38.79171, 33.37328], [36.83946, 32.31293], [36.40959, 32.37908], [36.23948, 32.50108], [36.20875, 32.49529], [36.20379, 32.52751], [36.08074, 32.51463], [36.02239, 32.65911], [35.96633, 32.66237], [35.93307, 32.71966], [35.88405, 32.71321], [35.75983, 32.74803], [35.68467, 32.70715], [35.66527, 32.681], [35.61669, 32.67999], [35.59813, 32.65159], [35.56614, 32.64393], [35.57485, 32.48669], [35.55494, 32.42687], [35.55807, 32.38674], [35.57111, 32.21877], [35.52012, 32.04076], [35.54375, 31.96587], [35.52758, 31.9131], [35.55941, 31.76535], [35.47672, 31.49578], [35.40316, 31.25535], [35.43658, 31.12444], [35.41371, 30.95565], [35.33984, 30.8802], [35.33456, 30.81224], [35.29311, 30.71365], [35.21379, 30.60401], [35.19595, 30.50297], [35.16218, 30.43535], [35.19183, 30.34636], [35.14108, 30.07374], [35.02147, 29.66343], [34.98207, 29.58147], [34.97718, 29.54294], [34.92298, 29.45305], [34.8812, 29.36878], [36.07081, 29.18469], [36.50005, 29.49696], [36.75083, 29.86903], [37.4971, 29.99949], [37.66395, 30.33245], [37.99354, 30.49998], [36.99791, 31.50081], [38.99233, 31.99721], [39.29903, 32.23259], [39.26157, 32.35555], [39.04251, 32.30203]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"JP\", iso1A3: \"JPN\", iso1N3: \"392\", wikidata: \"Q17\", nameEn: \"Japan\", groups: [\"030\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"81\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[145.82361, 43.38904], [145.23667, 43.76813], [145.82343, 44.571], [140.9182, 45.92937], [133.61399, 37.41], [129.2669, 34.87122], [122.26612, 25.98197], [123.92912, 17.8782], [155.16731, 23.60141], [145.82361, 43.38904]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KE\", iso1A3: \"KEN\", iso1N3: \"404\", wikidata: \"Q114\", nameEn: \"Kenya\", groups: [\"014\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"254\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[35.9419, 4.61933], [35.51424, 4.61643], [35.42366, 4.76969], [35.47843, 4.91872], [35.30992, 4.90402], [35.34151, 5.02364], [34.47601, 4.72162], [33.9873, 4.23316], [34.06046, 4.15235], [34.15429, 3.80464], [34.45815, 3.67385], [34.44922, 3.51627], [34.39112, 3.48802], [34.41794, 3.44342], [34.40006, 3.37949], [34.45815, 3.18319], [34.56242, 3.11478], [34.60114, 2.93034], [34.65774, 2.8753], [34.73967, 2.85447], [34.78137, 2.76223], [34.77244, 2.70272], [34.95267, 2.47209], [34.90947, 2.42447], [34.98692, 1.97348], [34.9899, 1.6668], [34.92734, 1.56109], [34.87819, 1.5596], [34.7918, 1.36752], [34.82606, 1.30944], [34.82606, 1.26626], [34.80223, 1.22754], [34.67562, 1.21265], [34.58029, 1.14712], [34.57427, 1.09868], [34.52369, 1.10692], [34.43349, 0.85254], [34.40041, 0.80266], [34.31516, 0.75693], [34.27345, 0.63182], [34.20196, 0.62289], [34.13493, 0.58118], [34.11408, 0.48884], [34.08727, 0.44713], [34.10067, 0.36372], [33.90936, 0.10581], [33.98449, -0.13079], [33.9264, -0.54188], [33.93107, -0.99298], [34.02286, -1.00779], [34.03084, -1.05101], [34.0824, -1.02264], [37.67199, -3.06222], [37.71745, -3.304], [37.5903, -3.42735], [37.63099, -3.50723], [37.75036, -3.54243], [37.81321, -3.69179], [39.21631, -4.67835], [39.44306, -4.93877], [39.62121, -4.68136], [41.75542, -1.85308], [41.56362, -1.66375], [41.56, -1.59812], [41.00099, -0.83068], [40.98767, 2.82959], [41.31368, 3.14314], [41.89488, 3.97375], [41.1754, 3.94079], [40.77498, 4.27683], [39.86043, 3.86974], [39.76808, 3.67058], [39.58339, 3.47434], [39.55132, 3.39634], [39.51551, 3.40895], [39.49444, 3.45521], [39.19954, 3.47834], [39.07736, 3.5267], [38.91938, 3.51198], [38.52336, 3.62551], [38.45812, 3.60445], [38.14168, 3.62487], [37.07724, 4.33503], [36.84474, 4.44518], [36.03924, 4.44406], [35.95449, 4.53244], [35.9419, 4.61933]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KG\", iso1A3: \"KGZ\", iso1N3: \"417\", wikidata: \"Q813\", nameEn: \"Kyrgyzstan\", groups: [\"143\", \"142\", \"UN\"], callingCodes: [\"996\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[74.88756, 42.98612], [74.75, 42.99029], [74.70331, 43.02519], [74.64615, 43.05881], [74.57491, 43.13702], [74.22489, 43.24657], [73.55634, 43.03071], [73.50992, 42.82356], [73.44393, 42.43098], [71.88792, 42.83578], [71.62405, 42.76613], [71.53272, 42.8014], [71.2724, 42.77853], [71.22785, 42.69248], [71.17807, 42.67381], [71.15232, 42.60486], [70.97717, 42.50147], [70.85973, 42.30188], [70.94483, 42.26238], [71.13263, 42.28356], [71.28719, 42.18033], [70.69777, 41.92554], [70.17682, 41.5455], [70.48909, 41.40335], [70.67586, 41.47953], [70.78572, 41.36419], [70.77885, 41.24813], [70.86263, 41.23833], [70.9615, 41.16393], [71.02193, 41.19494], [71.11806, 41.15359], [71.25813, 41.18796], [71.27187, 41.11015], [71.34877, 41.16807], [71.40198, 41.09436], [71.46148, 41.13958], [71.43814, 41.19644], [71.46688, 41.31883], [71.57227, 41.29175], [71.6787, 41.42111], [71.65914, 41.49599], [71.73054, 41.54713], [71.71132, 41.43012], [71.76625, 41.4466], [71.83914, 41.3546], [71.91457, 41.2982], [71.85964, 41.19081], [72.07249, 41.11739], [72.10745, 41.15483], [72.16433, 41.16483], [72.17594, 41.15522], [72.14864, 41.13363], [72.1792, 41.10621], [72.21061, 41.05607], [72.17594, 41.02377], [72.18339, 40.99571], [72.324, 41.03381], [72.34026, 41.04539], [72.34757, 41.06104], [72.36138, 41.04384], [72.38511, 41.02785], [72.45206, 41.03018], [72.48742, 40.97136], [72.55109, 40.96046], [72.59136, 40.86947], [72.68157, 40.84942], [72.84291, 40.85512], [72.94454, 40.8094], [73.01869, 40.84681], [73.13267, 40.83512], [73.13412, 40.79122], [73.0612, 40.76678], [72.99133, 40.76457], [72.93296, 40.73089], [72.8722, 40.71111], [72.85372, 40.7116], [72.84754, 40.67229], [72.80137, 40.67856], [72.74866, 40.60873], [72.74894, 40.59592], [72.75982, 40.57273], [72.74862, 40.57131], [72.74768, 40.58051], [72.73995, 40.58409], [72.69579, 40.59778], [72.66713, 40.59076], [72.66713, 40.5219], [72.47795, 40.5532], [72.40517, 40.61917], [72.34406, 40.60144], [72.41714, 40.55736], [72.38384, 40.51535], [72.41513, 40.50856], [72.44191, 40.48222], [72.40346, 40.4007], [72.24368, 40.46091], [72.18648, 40.49893], [71.96401, 40.31907], [72.05464, 40.27586], [71.85002, 40.25647], [71.82646, 40.21872], [71.73054, 40.14818], [71.71719, 40.17886], [71.69621, 40.18492], [71.70569, 40.20391], [71.68386, 40.26984], [71.61931, 40.26775], [71.61725, 40.20615], [71.51549, 40.22986], [71.51215, 40.26943], [71.4246, 40.28619], [71.36663, 40.31593], [71.13042, 40.34106], [71.05901, 40.28765], [70.95789, 40.28761], [70.9818, 40.22392], [70.80495, 40.16813], [70.7928, 40.12797], [70.65827, 40.0981], [70.65946, 39.9878], [70.58912, 39.95211], [70.55033, 39.96619], [70.47557, 39.93216], [70.57384, 39.99394], [70.58297, 40.00891], [70.01283, 40.23288], [69.67001, 40.10639], [69.64704, 40.12165], [69.57615, 40.10524], [69.55555, 40.12296], [69.53794, 40.11833], [69.53855, 40.0887], [69.5057, 40.03277], [69.53615, 39.93991], [69.43557, 39.92877], [69.43134, 39.98431], [69.35649, 40.01994], [69.26938, 39.8127], [69.3594, 39.52516], [69.68677, 39.59281], [69.87491, 39.53882], [70.11111, 39.58223], [70.2869, 39.53141], [70.44757, 39.60128], [70.64087, 39.58792], [70.7854, 39.38933], [71.06418, 39.41586], [71.08752, 39.50704], [71.49814, 39.61397], [71.55856, 39.57588], [71.5517, 39.45722], [71.62688, 39.44056], [71.76816, 39.45456], [71.80164, 39.40631], [71.7522, 39.32031], [71.79202, 39.27355], [71.90601, 39.27674], [72.04059, 39.36704], [72.09689, 39.26823], [72.17242, 39.2661], [72.23834, 39.17248], [72.33173, 39.33093], [72.62027, 39.39696], [72.85934, 39.35116], [73.18454, 39.35536], [73.31912, 39.38615], [73.45096, 39.46677], [73.59831, 39.46425], [73.87018, 39.47879], [73.94683, 39.60733], [73.92354, 39.69565], [73.9051, 39.75073], [73.83006, 39.76136], [73.97049, 40.04378], [74.25533, 40.13191], [74.35063, 40.09742], [74.69875, 40.34668], [74.85996, 40.32857], [74.78168, 40.44886], [74.82013, 40.52197], [75.08243, 40.43945], [75.22834, 40.45382], [75.5854, 40.66874], [75.69663, 40.28642], [75.91361, 40.2948], [75.96168, 40.38064], [76.33659, 40.3482], [76.5261, 40.46114], [76.75681, 40.95354], [76.99302, 41.0696], [77.28004, 41.0033], [77.3693, 41.0375], [77.52723, 41.00227], [77.76206, 41.01574], [77.81287, 41.14307], [78.12873, 41.23091], [78.15757, 41.38565], [78.3732, 41.39603], [79.92977, 42.04113], [80.17842, 42.03211], [80.17807, 42.21166], [79.97364, 42.42816], [79.52921, 42.44778], [79.19763, 42.804], [78.91502, 42.76839], [78.48469, 42.89649], [75.82823, 42.94848], [75.72174, 42.79672], [75.29966, 42.86183], [75.22619, 42.85528], [74.88756, 42.98612]], [[70.74189, 39.86319], [70.63105, 39.77923], [70.59667, 39.83542], [70.54998, 39.85137], [70.52631, 39.86989], [70.53651, 39.89155], [70.74189, 39.86319]], [[71.86463, 39.98598], [71.84316, 39.95582], [71.7504, 39.93701], [71.71511, 39.96348], [71.78838, 40.01404], [71.86463, 39.98598]], [[71.21139, 40.03369], [71.1427, 39.95026], [71.23067, 39.93581], [71.16101, 39.88423], [71.10531, 39.91354], [71.04979, 39.89808], [71.10501, 39.95568], [71.09063, 39.99], [71.11668, 39.99291], [71.11037, 40.01984], [71.01035, 40.05481], [71.00236, 40.18154], [71.06305, 40.1771], [71.12218, 40.03052], [71.21139, 40.03369]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KH\", iso1A3: \"KHM\", iso1N3: \"116\", wikidata: \"Q424\", nameEn: \"Cambodia\", groups: [\"035\", \"142\", \"UN\"], callingCodes: [\"855\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[105.87328, 11.55953], [105.81645, 11.56876], [105.80867, 11.60536], [105.8507, 11.66635], [105.88962, 11.67854], [105.95188, 11.63738], [106.00792, 11.7197], [106.02038, 11.77457], [106.06708, 11.77761], [106.13158, 11.73283], [106.18539, 11.75171], [106.26478, 11.72122], [106.30525, 11.67549], [106.37219, 11.69836], [106.44691, 11.66787], [106.45158, 11.68616], [106.41577, 11.76999], [106.44535, 11.8279], [106.44068, 11.86294], [106.4687, 11.86751], [106.4111, 11.97413], [106.70687, 11.96956], [106.79405, 12.0807], [106.92325, 12.06548], [106.99953, 12.08983], [107.15831, 12.27547], [107.34511, 12.33327], [107.42917, 12.24657], [107.4463, 12.29373], [107.55059, 12.36824], [107.5755, 12.52177], [107.55993, 12.7982], [107.49611, 12.88926], [107.49144, 13.01215], [107.62843, 13.3668], [107.61909, 13.52577], [107.53503, 13.73908], [107.45252, 13.78897], [107.46498, 13.91593], [107.44318, 13.99751], [107.38247, 13.99147], [107.35757, 14.02319], [107.37158, 14.07906], [107.33577, 14.11832], [107.40427, 14.24509], [107.39493, 14.32655], [107.44941, 14.41552], [107.48521, 14.40346], [107.52569, 14.54665], [107.52102, 14.59034], [107.55371, 14.628], [107.54361, 14.69092], [107.47238, 14.61523], [107.44435, 14.52785], [107.37897, 14.54443], [107.3276, 14.58812], [107.29803, 14.58963], [107.26534, 14.54292], [107.256, 14.48716], [107.21241, 14.48716], [107.17038, 14.41782], [107.09722, 14.3937], [107.03962, 14.45099], [107.04585, 14.41782], [106.98825, 14.36806], [106.9649, 14.3198], [106.90574, 14.33639], [106.8497, 14.29416], [106.80767, 14.31226], [106.73762, 14.42687], [106.63333, 14.44194], [106.59908, 14.50977], [106.57106, 14.50525], [106.54148, 14.59565], [106.50723, 14.58963], [106.45898, 14.55045], [106.47766, 14.50977], [106.43874, 14.52032], [106.40916, 14.45249], [106.32355, 14.44043], [106.25194, 14.48415], [106.21302, 14.36203], [106.00131, 14.36957], [105.99509, 14.32734], [106.02311, 14.30623], [106.04801, 14.20363], [106.10872, 14.18401], [106.11962, 14.11307], [106.18656, 14.06324], [106.16632, 14.01794], [106.10094, 13.98471], [106.10405, 13.9137], [105.90791, 13.92881], [105.78182, 14.02247], [105.78338, 14.08438], [105.5561, 14.15684], [105.44869, 14.10703], [105.36775, 14.09948], [105.2759, 14.17496], [105.20894, 14.34967], [105.17748, 14.34432], [105.14012, 14.23873], [105.08408, 14.20402], [105.02804, 14.23722], [104.97667, 14.38806], [104.69335, 14.42726], [104.55014, 14.36091], [104.27616, 14.39861], [103.93836, 14.3398], [103.70175, 14.38052], [103.71109, 14.4348], [103.53518, 14.42575], [103.39353, 14.35639], [103.16469, 14.33075], [102.93275, 14.19044], [102.91251, 14.01531], [102.77864, 13.93374], [102.72727, 13.77806], [102.56848, 13.69366], [102.5481, 13.6589], [102.58635, 13.6286], [102.62483, 13.60883], [102.57573, 13.60461], [102.5358, 13.56933], [102.44601, 13.5637], [102.36859, 13.57488], [102.33828, 13.55613], [102.361, 13.50551], [102.35563, 13.47307], [102.35692, 13.38274], [102.34611, 13.35618], [102.36001, 13.31142], [102.36146, 13.26006], [102.43422, 13.09061], [102.46011, 13.08057], [102.52275, 12.99813], [102.48694, 12.97537], [102.49335, 12.92711], [102.53053, 12.77506], [102.4994, 12.71736], [102.51963, 12.66117], [102.57567, 12.65358], [102.7796, 12.43781], [102.78116, 12.40284], [102.73134, 12.37091], [102.70176, 12.1686], [102.77026, 12.06815], [102.78427, 11.98746], [102.83957, 11.8519], [102.90973, 11.75613], [102.91449, 11.65512], [102.52395, 11.25257], [102.47649, 9.66162], [103.99198, 10.48391], [104.43778, 10.42386], [104.47963, 10.43046], [104.49869, 10.4057], [104.59018, 10.53073], [104.87933, 10.52833], [104.95094, 10.64003], [105.09571, 10.72722], [105.02722, 10.89236], [105.08326, 10.95656], [105.11449, 10.96332], [105.34011, 10.86179], [105.42884, 10.96878], [105.50045, 10.94586], [105.77751, 11.03671], [105.86376, 10.89839], [105.84603, 10.85873], [105.93403, 10.83853], [105.94535, 10.9168], [106.06708, 10.8098], [106.18539, 10.79451], [106.14301, 10.98176], [106.20095, 10.97795], [106.1757, 11.07301], [106.1527, 11.10476], [106.10444, 11.07879], [105.86782, 11.28343], [105.88962, 11.43605], [105.87328, 11.55953]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KI\", iso1A3: \"KIR\", iso1N3: \"296\", wikidata: \"Q710\", nameEn: \"Kiribati\", groups: [\"057\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"686\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[169, 3.9], [169, -3.5], [178, -3.5], [178, 3.9], [169, 3.9]]], [[[-161.06795, 5.2462], [-158.12991, -1.86122], [-175.33482, -1.40631], [-175.31804, -7.54825], [-156.50903, -7.4975], [-156.48634, -15.52824], [-135.59706, -4.70473], [-161.06795, 5.2462]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KM\", iso1A3: \"COM\", iso1N3: \"174\", wikidata: \"Q970\", nameEn: \"Comoros\", groups: [\"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"269\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[42.63904, -10.02522], [43.28731, -13.97126], [45.4971, -11.75965], [42.63904, -10.02522]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KN\", iso1A3: \"KNA\", iso1N3: \"659\", wikidata: \"Q763\", nameEn: \"St. Kitts and Nevis\", groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", callingCodes: [\"1 869\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-62.29333, 17.43155], [-62.76692, 17.64353], [-63.09677, 17.21372], [-62.63813, 16.65446], [-62.29333, 17.43155]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KP\", iso1A3: \"PRK\", iso1N3: \"408\", wikidata: \"Q423\", nameEn: \"North Korea\", groups: [\"030\", \"142\", \"UN\"], callingCodes: [\"850\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[130.26095, 42.9027], [130.09764, 42.91425], [130.12957, 42.98361], [129.96409, 42.97306], [129.95082, 43.01051], [129.8865, 43.00395], [129.85261, 42.96494], [129.83277, 42.86746], [129.80719, 42.79218], [129.7835, 42.76521], [129.77183, 42.69435], [129.75294, 42.59409], [129.72541, 42.43739], [129.60482, 42.44461], [129.54701, 42.37254], [129.42882, 42.44702], [129.28541, 42.41574], [129.22423, 42.3553], [129.22285, 42.26491], [129.15178, 42.17224], [128.96068, 42.06657], [128.94007, 42.03537], [128.04487, 42.01769], [128.15119, 41.74568], [128.30716, 41.60322], [128.20061, 41.40895], [128.18546, 41.41279], [128.12967, 41.37931], [128.03311, 41.39232], [128.02633, 41.42103], [127.92943, 41.44291], [127.29712, 41.49473], [127.17841, 41.59714], [126.90729, 41.79955], [126.60631, 41.65565], [126.53189, 41.35206], [126.242, 41.15454], [126.00335, 40.92835], [125.76869, 40.87908], [125.71172, 40.85223], [124.86913, 40.45387], [124.40719, 40.13655], [124.38556, 40.11047], [124.3322, 40.05573], [124.37089, 40.03004], [124.35029, 39.95639], [124.23201, 39.9248], [124.17532, 39.8232], [123.90497, 38.79949], [123.85601, 37.49093], [124.67666, 38.05679], [124.84224, 37.977], [124.87921, 37.80827], [125.06408, 37.66334], [125.37112, 37.62643], [125.81159, 37.72949], [126.13074, 37.70512], [126.18776, 37.74728], [126.19097, 37.81462], [126.24402, 37.83113], [126.43239, 37.84095], [126.46818, 37.80873], [126.56709, 37.76857], [126.59918, 37.76364], [126.66067, 37.7897], [126.68793, 37.83728], [126.68793, 37.9175], [126.67023, 37.95852], [126.84961, 38.0344], [126.88106, 38.10246], [126.95887, 38.1347], [126.95338, 38.17735], [127.04479, 38.25518], [127.15749, 38.30722], [127.38727, 38.33227], [127.49672, 38.30647], [127.55013, 38.32257], [128.02917, 38.31861], [128.27652, 38.41657], [128.31105, 38.58462], [128.37487, 38.62345], [128.65655, 38.61914], [131.95041, 41.5445], [130.65022, 42.32281], [130.66367, 42.38024], [130.64181, 42.41422], [130.60805, 42.4317], [130.56835, 42.43281], [130.55143, 42.52158], [130.50123, 42.61636], [130.44361, 42.54849], [130.41826, 42.6011], [130.2385, 42.71127], [130.23068, 42.80125], [130.26095, 42.9027]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KR\", iso1A3: \"KOR\", iso1N3: \"410\", wikidata: \"Q884\", nameEn: \"South Korea\", groups: [\"030\", \"142\", \"UN\"], callingCodes: [\"82\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[133.11729, 37.53115], [128.65655, 38.61914], [128.37487, 38.62345], [128.31105, 38.58462], [128.27652, 38.41657], [128.02917, 38.31861], [127.55013, 38.32257], [127.49672, 38.30647], [127.38727, 38.33227], [127.15749, 38.30722], [127.04479, 38.25518], [126.95338, 38.17735], [126.95887, 38.1347], [126.88106, 38.10246], [126.84961, 38.0344], [126.67023, 37.95852], [126.68793, 37.9175], [126.68793, 37.83728], [126.66067, 37.7897], [126.59918, 37.76364], [126.56709, 37.76857], [126.46818, 37.80873], [126.43239, 37.84095], [126.24402, 37.83113], [126.19097, 37.81462], [126.18776, 37.74728], [126.13074, 37.70512], [125.81159, 37.72949], [125.37112, 37.62643], [125.06408, 37.66334], [124.87921, 37.80827], [124.84224, 37.977], [124.67666, 38.05679], [123.85601, 37.49093], [122.80525, 33.30571], [125.99728, 32.63328], [129.2669, 34.87122], [133.11729, 37.53115]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KW\", iso1A3: \"KWT\", iso1N3: \"414\", wikidata: \"Q817\", nameEn: \"Kuwait\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"965\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[49.00421, 28.81495], [48.59531, 29.66815], [48.40479, 29.85763], [48.17332, 30.02448], [48.06782, 30.02906], [48.01114, 29.98906], [47.7095, 30.10453], [47.37192, 30.10421], [47.15166, 30.01044], [46.89695, 29.50584], [46.5527, 29.10283], [47.46202, 29.0014], [47.58376, 28.83382], [47.59863, 28.66798], [47.70561, 28.5221], [48.42991, 28.53628], [49.00421, 28.81495]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KY\", iso1A3: \"CYM\", iso1N3: \"136\", wikidata: \"Q5785\", nameEn: \"Cayman Islands\", country: \"GB\", groups: [\"BOTS\", \"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1 345\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-82.11509, 19.60401], [-80.36068, 18.11751], [-79.32727, 20.06742], [-82.11509, 19.60401]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"KZ\", iso1A3: \"KAZ\", iso1N3: \"398\", wikidata: \"Q232\", nameEn: \"Kazakhstan\", groups: [\"143\", \"142\", \"UN\"], callingCodes: [\"7\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[68.90865, 55.38148], [68.19206, 55.18823], [68.26661, 55.09226], [68.21308, 54.98645], [65.20174, 54.55216], [65.24663, 54.35721], [65.11033, 54.33028], [64.97216, 54.4212], [63.97686, 54.29763], [64.02715, 54.22679], [63.91224, 54.20013], [63.80604, 54.27079], [62.58651, 54.05871], [62.56876, 53.94047], [62.45931, 53.90737], [62.38535, 54.03961], [62.00966, 54.04134], [62.03913, 53.94768], [61.65318, 54.02445], [61.56941, 53.95703], [61.47603, 54.08048], [61.3706, 54.08464], [61.26863, 53.92797], [60.99796, 53.93699], [61.14283, 53.90063], [61.22574, 53.80268], [60.90626, 53.62937], [61.55706, 53.57144], [61.57185, 53.50112], [61.37957, 53.45887], [61.29082, 53.50992], [61.14291, 53.41481], [61.19024, 53.30536], [62.14574, 53.09626], [62.12799, 52.99133], [62.0422, 52.96105], [61.23462, 53.03227], [61.05842, 52.92217], [60.71989, 52.75923], [60.71693, 52.66245], [60.84118, 52.63912], [60.84709, 52.52228], [60.98021, 52.50068], [61.05417, 52.35096], [60.78201, 52.22067], [60.72581, 52.15538], [60.48915, 52.15175], [60.19925, 51.99173], [59.99809, 51.98263], [60.09867, 51.87135], [60.50986, 51.7964], [60.36787, 51.66815], [60.5424, 51.61675], [60.92401, 51.61124], [60.95655, 51.48615], [61.50677, 51.40687], [61.55114, 51.32746], [61.6813, 51.25716], [61.56889, 51.23679], [61.4431, 50.80679], [60.81833, 50.6629], [60.31914, 50.67705], [60.17262, 50.83312], [60.01288, 50.8163], [59.81172, 50.54451], [59.51886, 50.49937], [59.48928, 50.64216], [58.87974, 50.70852], [58.3208, 51.15151], [57.75578, 51.13852], [57.74986, 50.93017], [57.44221, 50.88354], [57.17302, 51.11253], [56.17906, 50.93204], [56.11398, 50.7471], [55.67774, 50.54508], [54.72067, 51.03261], [54.56685, 51.01958], [54.71476, 50.61214], [54.55797, 50.52006], [54.41894, 50.61214], [54.46331, 50.85554], [54.12248, 51.11542], [53.69299, 51.23466], [53.46165, 51.49445], [52.54329, 51.48444], [52.36119, 51.74161], [51.8246, 51.67916], [51.77431, 51.49536], [51.301, 51.48799], [51.26254, 51.68466], [50.59695, 51.61859], [50.26859, 51.28677], [49.97277, 51.2405], [49.76866, 51.11067], [49.39001, 51.09396], [49.41959, 50.85927], [49.12673, 50.78639], [48.86936, 50.61589], [48.57946, 50.63278], [48.90782, 50.02281], [48.68352, 49.89546], [48.42564, 49.82283], [48.24519, 49.86099], [48.10044, 50.09242], [47.58551, 50.47867], [47.30448, 50.30894], [47.34589, 50.09308], [47.18319, 49.93721], [46.9078, 49.86707], [46.78398, 49.34026], [47.04658, 49.19834], [47.00857, 49.04921], [46.78392, 48.95352], [46.49011, 48.43019], [47.11516, 48.27188], [47.12107, 47.83687], [47.38731, 47.68176], [47.41689, 47.83687], [47.64973, 47.76559], [48.15348, 47.74545], [48.45173, 47.40818], [48.52326, 47.4102], [49.01136, 46.72716], [48.51142, 46.69268], [48.54988, 46.56267], [49.16518, 46.38542], [49.32259, 46.26944], [49.88945, 46.04554], [49.2134, 44.84989], [52.26048, 41.69249], [52.47884, 41.78034], [52.97575, 42.1308], [54.20635, 42.38477], [54.95182, 41.92424], [55.45471, 41.25609], [56.00314, 41.32584], [55.97584, 44.99322], [55.97584, 44.99328], [55.97584, 44.99338], [55.97584, 44.99343], [55.97584, 44.99348], [55.97584, 44.99353], [55.97584, 44.99359], [55.97584, 44.99369], [55.97584, 44.99374], [55.97584, 44.99384], [55.97584, 44.9939], [55.97584, 44.994], [55.97584, 44.99405], [55.97584, 44.99415], [55.97584, 44.99421], [55.97584, 44.99426], [55.97584, 44.99431], [55.97584, 44.99436], [55.97584, 44.99441], [55.97594, 44.99446], [55.97605, 44.99452], [55.97605, 44.99457], [55.97605, 44.99462], [55.97605, 44.99467], [55.97605, 44.99477], [55.97615, 44.99477], [55.97615, 44.99483], [55.97615, 44.99493], [55.97615, 44.99498], [55.97615, 44.99503], [55.97615, 44.99508], [55.97625, 44.99514], [55.97636, 44.99519], [55.97636, 44.99524], [55.97646, 44.99529], [55.97646, 44.99534], [55.97656, 44.99539], [55.97667, 44.99545], [55.97677, 44.9955], [55.97677, 44.99555], [55.97677, 44.9956], [55.97687, 44.9956], [55.97698, 44.99565], [55.97698, 44.9957], [55.97708, 44.99576], [55.97718, 44.99581], [55.97729, 44.99586], [55.97739, 44.99586], [55.97739, 44.99591], [55.97749, 44.99591], [55.9776, 44.99591], [55.9777, 44.99596], [55.9777, 44.99601], [55.9778, 44.99607], [55.97791, 44.99607], [55.97801, 44.99607], [55.97801, 44.99612], [55.97811, 44.99617], [55.97822, 44.99617], [55.97832, 44.99622], [55.97842, 44.99622], [58.59711, 45.58671], [61.01475, 44.41383], [62.01711, 43.51008], [63.34656, 43.64003], [64.53885, 43.56941], [64.96464, 43.74748], [65.18666, 43.48835], [65.53277, 43.31856], [65.85194, 42.85481], [66.09482, 42.93426], [66.00546, 41.94455], [66.53302, 41.87388], [66.69129, 41.1311], [67.9644, 41.14611], [67.98511, 41.02794], [68.08273, 41.08148], [68.1271, 41.0324], [67.96736, 40.83798], [68.49983, 40.56437], [68.63, 40.59358], [68.58444, 40.91447], [68.49983, 40.99669], [68.62221, 41.03019], [68.65662, 40.93861], [68.73945, 40.96989], [68.7217, 41.05025], [69.01308, 41.22804], [69.05006, 41.36183], [69.15137, 41.43078], [69.17701, 41.43769], [69.18528, 41.45175], [69.20439, 41.45391], [69.22671, 41.46298], [69.23332, 41.45847], [69.25059, 41.46693], [69.29778, 41.43673], [69.35554, 41.47211], [69.37468, 41.46555], [69.45081, 41.46246], [69.39485, 41.51518], [69.45751, 41.56863], [69.49545, 41.545], [70.94483, 42.26238], [70.85973, 42.30188], [70.97717, 42.50147], [71.15232, 42.60486], [71.17807, 42.67381], [71.22785, 42.69248], [71.2724, 42.77853], [71.53272, 42.8014], [71.62405, 42.76613], [71.88792, 42.83578], [73.44393, 42.43098], [73.50992, 42.82356], [73.55634, 43.03071], [74.22489, 43.24657], [74.57491, 43.13702], [74.64615, 43.05881], [74.70331, 43.02519], [74.75, 42.99029], [74.88756, 42.98612], [75.22619, 42.85528], [75.29966, 42.86183], [75.72174, 42.79672], [75.82823, 42.94848], [78.48469, 42.89649], [78.91502, 42.76839], [79.19763, 42.804], [79.52921, 42.44778], [79.97364, 42.42816], [80.17807, 42.21166], [80.26841, 42.23797], [80.16892, 42.61137], [80.26886, 42.8366], [80.38169, 42.83142], [80.58999, 42.9011], [80.3735, 43.01557], [80.62913, 43.141], [80.78817, 43.14235], [80.77771, 43.30065], [80.69718, 43.32589], [80.75156, 43.44948], [80.40031, 44.10986], [80.40229, 44.23319], [80.38384, 44.63073], [79.8987, 44.89957], [80.11169, 45.03352], [81.73278, 45.3504], [82.51374, 45.1755], [82.58474, 45.40027], [82.21792, 45.56619], [83.04622, 47.19053], [83.92184, 46.98912], [84.73077, 47.01394], [84.93995, 46.87399], [85.22443, 47.04816], [85.54294, 47.06171], [85.69696, 47.2898], [85.61067, 47.49753], [85.5169, 48.05493], [85.73581, 48.3939], [86.38069, 48.46064], [86.75343, 48.70331], [86.73568, 48.99918], [86.87238, 49.12432], [87.28386, 49.11626], [87.31465, 49.23603], [87.03071, 49.25142], [86.82606, 49.51796], [86.61307, 49.60239], [86.79056, 49.74787], [86.63674, 49.80136], [86.18709, 49.50259], [85.24047, 49.60239], [84.99198, 50.06793], [84.29385, 50.27257], [83.8442, 50.87375], [83.14607, 51.00796], [82.55443, 50.75412], [81.94999, 50.79307], [81.46581, 50.77658], [81.41248, 50.97524], [81.06091, 50.94833], [81.16999, 51.15662], [80.80318, 51.28262], [80.44819, 51.20855], [80.4127, 50.95581], [80.08138, 50.77658], [79.11255, 52.01171], [77.90383, 53.29807], [76.54243, 53.99329], [76.44076, 54.16017], [76.82266, 54.1798], [76.91052, 54.4677], [75.3668, 54.07439], [75.43398, 53.98652], [75.07405, 53.80831], [73.39218, 53.44623], [73.25412, 53.61532], [73.68921, 53.86522], [73.74778, 54.07194], [73.37963, 53.96132], [72.71026, 54.1161], [72.43415, 53.92685], [72.17477, 54.36303], [71.96141, 54.17736], [71.10379, 54.13326], [71.08706, 54.33376], [71.24185, 54.64965], [71.08288, 54.71253], [70.96009, 55.10558], [70.76493, 55.3027], [70.19179, 55.1476], [69.74917, 55.35545], [69.34224, 55.36344], [68.90865, 55.38148]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LA\", iso1A3: \"LAO\", iso1N3: \"418\", wikidata: \"Q819\", nameEn: \"Laos\", groups: [\"035\", \"142\", \"UN\"], callingCodes: [\"856\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[102.1245, 22.43372], [102.03633, 22.46164], [101.98487, 22.42766], [101.91344, 22.44417], [101.90714, 22.38688], [101.86828, 22.38397], [101.7685, 22.50337], [101.68973, 22.46843], [101.61306, 22.27515], [101.56789, 22.28876], [101.53638, 22.24794], [101.60675, 22.13513], [101.57525, 22.13026], [101.62566, 21.96574], [101.7791, 21.83019], [101.74555, 21.72852], [101.83257, 21.61562], [101.80001, 21.57461], [101.7475, 21.5873], [101.7727, 21.51794], [101.74224, 21.48276], [101.74014, 21.30967], [101.84412, 21.25291], [101.83887, 21.20983], [101.76745, 21.21571], [101.79266, 21.19025], [101.7622, 21.14813], [101.70548, 21.14911], [101.66977, 21.20004], [101.60886, 21.17947], [101.59491, 21.18621], [101.6068, 21.23329], [101.54563, 21.25668], [101.29326, 21.17254], [101.2229, 21.23271], [101.26912, 21.36482], [101.19349, 21.41959], [101.2124, 21.56422], [101.15156, 21.56129], [101.16198, 21.52808], [101.00234, 21.39612], [100.80173, 21.2934], [100.72716, 21.31786], [100.63578, 21.05639], [100.55281, 21.02796], [100.50974, 20.88574], [100.64628, 20.88279], [100.60112, 20.8347], [100.51079, 20.82194], [100.36375, 20.82783], [100.1957, 20.68247], [100.08404, 20.36626], [100.09999, 20.31614], [100.09337, 20.26293], [100.11785, 20.24787], [100.1712, 20.24324], [100.16668, 20.2986], [100.22076, 20.31598], [100.25769, 20.3992], [100.33383, 20.4028], [100.37439, 20.35156], [100.41473, 20.25625], [100.44992, 20.23644], [100.4537, 20.19971], [100.47567, 20.19133], [100.51052, 20.14928], [100.55218, 20.17741], [100.58808, 20.15791], [100.5094, 19.87904], [100.398, 19.75047], [100.49604, 19.53504], [100.58219, 19.49164], [100.64606, 19.55884], [100.77231, 19.48324], [100.90302, 19.61901], [101.08928, 19.59748], [101.26545, 19.59242], [101.26991, 19.48324], [101.21347, 19.46223], [101.20604, 19.35296], [101.24911, 19.33334], [101.261, 19.12717], [101.35606, 19.04716], [101.25803, 18.89545], [101.22832, 18.73377], [101.27585, 18.68875], [101.06047, 18.43247], [101.18227, 18.34367], [101.15108, 18.25624], [101.19118, 18.2125], [101.1793, 18.0544], [101.02185, 17.87637], [100.96541, 17.57926], [101.15108, 17.47586], [101.44667, 17.7392], [101.72294, 17.92867], [101.78087, 18.07559], [101.88485, 18.02474], [102.11359, 18.21532], [102.45523, 17.97106], [102.59234, 17.96127], [102.60971, 17.95411], [102.61432, 17.92273], [102.5896, 17.84889], [102.59485, 17.83537], [102.68194, 17.80151], [102.69946, 17.81686], [102.67543, 17.84529], [102.68538, 17.86653], [102.75954, 17.89561], [102.79044, 17.93612], [102.81988, 17.94233], [102.86323, 17.97531], [102.95812, 18.0054], [102.9912, 17.9949], [103.01998, 17.97095], [103.0566, 18.00144], [103.07823, 18.03833], [103.07343, 18.12351], [103.1493, 18.17799], [103.14994, 18.23172], [103.17093, 18.2618], [103.29757, 18.30475], [103.23818, 18.34875], [103.24779, 18.37807], [103.30977, 18.4341], [103.41044, 18.4486], [103.47773, 18.42841], [103.60957, 18.40528], [103.699, 18.34125], [103.82449, 18.33979], [103.85642, 18.28666], [103.93916, 18.33914], [103.97725, 18.33631], [104.06533, 18.21656], [104.10927, 18.10826], [104.21776, 17.99335], [104.2757, 17.86139], [104.35432, 17.82871], [104.45404, 17.66788], [104.69867, 17.53038], [104.80061, 17.39367], [104.80716, 17.19025], [104.73712, 17.01404], [104.7373, 16.91125], [104.76442, 16.84752], [104.7397, 16.81005], [104.76099, 16.69302], [104.73349, 16.565], [104.88057, 16.37311], [105.00262, 16.25627], [105.06204, 16.09792], [105.42001, 16.00657], [105.38508, 15.987], [105.34115, 15.92737], [105.37959, 15.84074], [105.42285, 15.76971], [105.46573, 15.74742], [105.61756, 15.68792], [105.60446, 15.53301], [105.58191, 15.41031], [105.47635, 15.3796], [105.4692, 15.33709], [105.50662, 15.32054], [105.58043, 15.32724], [105.46661, 15.13132], [105.61162, 15.00037], [105.5121, 14.80802], [105.53864, 14.55731], [105.43783, 14.43865], [105.20894, 14.34967], [105.2759, 14.17496], [105.36775, 14.09948], [105.44869, 14.10703], [105.5561, 14.15684], [105.78338, 14.08438], [105.78182, 14.02247], [105.90791, 13.92881], [106.10405, 13.9137], [106.10094, 13.98471], [106.16632, 14.01794], [106.18656, 14.06324], [106.11962, 14.11307], [106.10872, 14.18401], [106.04801, 14.20363], [106.02311, 14.30623], [105.99509, 14.32734], [106.00131, 14.36957], [106.21302, 14.36203], [106.25194, 14.48415], [106.32355, 14.44043], [106.40916, 14.45249], [106.43874, 14.52032], [106.47766, 14.50977], [106.45898, 14.55045], [106.50723, 14.58963], [106.54148, 14.59565], [106.57106, 14.50525], [106.59908, 14.50977], [106.63333, 14.44194], [106.73762, 14.42687], [106.80767, 14.31226], [106.8497, 14.29416], [106.90574, 14.33639], [106.9649, 14.3198], [106.98825, 14.36806], [107.04585, 14.41782], [107.03962, 14.45099], [107.09722, 14.3937], [107.17038, 14.41782], [107.21241, 14.48716], [107.256, 14.48716], [107.26534, 14.54292], [107.29803, 14.58963], [107.3276, 14.58812], [107.37897, 14.54443], [107.44435, 14.52785], [107.47238, 14.61523], [107.54361, 14.69092], [107.51579, 14.79282], [107.59285, 14.87795], [107.48277, 14.93751], [107.46516, 15.00982], [107.61486, 15.0566], [107.61926, 15.13949], [107.58844, 15.20111], [107.62587, 15.2266], [107.60605, 15.37524], [107.62367, 15.42193], [107.53341, 15.40496], [107.50699, 15.48771], [107.3815, 15.49832], [107.34408, 15.62345], [107.27583, 15.62769], [107.27143, 15.71459], [107.21859, 15.74638], [107.21419, 15.83747], [107.34188, 15.89464], [107.39471, 15.88829], [107.46296, 16.01106], [107.44975, 16.08511], [107.33968, 16.05549], [107.25822, 16.13587], [107.14595, 16.17816], [107.15035, 16.26271], [107.09091, 16.3092], [107.02597, 16.31132], [106.97385, 16.30204], [106.96638, 16.34938], [106.88067, 16.43594], [106.88727, 16.52671], [106.84104, 16.55415], [106.74418, 16.41904], [106.65832, 16.47816], [106.66052, 16.56892], [106.61477, 16.60713], [106.58267, 16.6012], [106.59013, 16.62259], [106.55485, 16.68704], [106.55265, 16.86831], [106.52183, 16.87884], [106.51963, 16.92097], [106.54824, 16.92729], [106.55045, 17.0031], [106.50862, 16.9673], [106.43597, 17.01362], [106.31929, 17.20509], [106.29287, 17.3018], [106.24444, 17.24714], [106.18991, 17.28227], [106.09019, 17.36399], [105.85744, 17.63221], [105.76612, 17.67147], [105.60381, 17.89356], [105.64784, 17.96687], [105.46292, 18.22008], [105.38366, 18.15315], [105.15942, 18.38691], [105.10408, 18.43533], [105.1327, 18.58355], [105.19654, 18.64196], [105.12829, 18.70453], [104.64617, 18.85668], [104.5361, 18.97747], [103.87125, 19.31854], [104.06058, 19.43484], [104.10832, 19.51575], [104.05617, 19.61743], [104.06498, 19.66926], [104.23229, 19.70242], [104.41281, 19.70035], [104.53169, 19.61743], [104.64837, 19.62365], [104.68359, 19.72729], [104.8355, 19.80395], [104.8465, 19.91783], [104.9874, 20.09573], [104.91695, 20.15567], [104.86852, 20.14121], [104.61315, 20.24452], [104.62195, 20.36633], [104.72102, 20.40554], [104.66158, 20.47774], [104.47886, 20.37459], [104.40621, 20.3849], [104.38199, 20.47155], [104.63957, 20.6653], [104.27412, 20.91433], [104.11121, 20.96779], [103.98024, 20.91531], [103.82282, 20.8732], [103.73478, 20.6669], [103.68633, 20.66324], [103.45737, 20.82382], [103.38032, 20.79501], [103.21497, 20.89832], [103.12055, 20.89994], [103.03469, 21.05821], [102.97745, 21.05821], [102.89825, 21.24707], [102.80794, 21.25736], [102.88939, 21.3107], [102.94223, 21.46034], [102.86297, 21.4255], [102.98846, 21.58936], [102.97965, 21.74076], [102.86077, 21.71213], [102.85637, 21.84501], [102.81894, 21.83888], [102.82115, 21.73667], [102.74189, 21.66713], [102.67145, 21.65894], [102.62301, 21.91447], [102.49092, 21.99002], [102.51734, 22.02676], [102.18712, 22.30403], [102.14099, 22.40092], [102.1245, 22.43372]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LB\", iso1A3: \"LBN\", iso1N3: \"422\", wikidata: \"Q822\", nameEn: \"Lebanon\", aliases: [\"RL\"], groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"961\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[35.94816, 33.47886], [35.94465, 33.52774], [36.05723, 33.57904], [35.9341, 33.6596], [36.06778, 33.82927], [36.14517, 33.85118], [36.3967, 33.83365], [36.38263, 33.86579], [36.28589, 33.91981], [36.41078, 34.05253], [36.50576, 34.05982], [36.5128, 34.09916], [36.62537, 34.20251], [36.59195, 34.2316], [36.58667, 34.27667], [36.60778, 34.31009], [36.56556, 34.31881], [36.53039, 34.3798], [36.55853, 34.41609], [36.46179, 34.46541], [36.4442, 34.50165], [36.34745, 34.5002], [36.3369, 34.52629], [36.39846, 34.55672], [36.41429, 34.61175], [36.45299, 34.59438], [36.46003, 34.6378], [36.42941, 34.62505], [36.35384, 34.65447], [36.35135, 34.68516], [36.32399, 34.69334], [36.29165, 34.62991], [35.98718, 34.64977], [35.97386, 34.63322], [35.48515, 34.70851], [34.78515, 33.20368], [35.10645, 33.09318], [35.1924, 33.08743], [35.31429, 33.10515], [35.35223, 33.05617], [35.43059, 33.06659], [35.448, 33.09264], [35.50272, 33.09056], [35.50335, 33.114], [35.52573, 33.11921], [35.54228, 33.19865], [35.5362, 33.23196], [35.54808, 33.236], [35.54544, 33.25513], [35.55555, 33.25844], [35.56523, 33.28969], [35.58326, 33.28381], [35.58502, 33.26653], [35.62283, 33.24226], [35.62019, 33.27278], [35.77477, 33.33609], [35.81324, 33.36354], [35.82577, 33.40479], [35.88668, 33.43183], [35.94816, 33.47886]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LC\", iso1A3: \"LCA\", iso1N3: \"662\", wikidata: \"Q760\", nameEn: \"St. Lucia\", aliases: [\"WL\"], groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", callingCodes: [\"1 758\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-59.95997, 14.20285], [-61.69315, 14.26451], [-59.94058, 12.34011], [-59.95997, 14.20285]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LI\", iso1A3: \"LIE\", iso1N3: \"438\", wikidata: \"Q347\", nameEn: \"Liechtenstein\", aliases: [\"FL\"], groups: [\"155\", \"150\", \"UN\"], callingCodes: [\"423\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[9.60717, 47.06091], [9.61216, 47.07732], [9.63395, 47.08443], [9.62623, 47.14685], [9.56539, 47.17124], [9.58264, 47.20673], [9.56981, 47.21926], [9.55176, 47.22585], [9.56766, 47.24281], [9.53116, 47.27029], [9.52406, 47.24959], [9.50318, 47.22153], [9.4891, 47.19346], [9.48774, 47.17402], [9.51044, 47.13727], [9.52089, 47.10019], [9.51362, 47.08505], [9.47139, 47.06402], [9.47548, 47.05257], [9.54041, 47.06495], [9.55721, 47.04762], [9.60717, 47.06091]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LK\", iso1A3: \"LKA\", iso1N3: \"144\", wikidata: \"Q854\", nameEn: \"Sri Lanka\", groups: [\"034\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"94\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[76.59015, 5.591], [85.15017, 5.21497], [80.48418, 10.20786], [79.42124, 9.80115], [79.50447, 8.91876], [76.59015, 5.591]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LR\", iso1A3: \"LBR\", iso1N3: \"430\", wikidata: \"Q1014\", nameEn: \"Liberia\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"231\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-8.47114, 7.55676], [-8.55874, 7.62525], [-8.55874, 7.70167], [-8.67814, 7.69428], [-8.72789, 7.51429], [-8.8448, 7.35149], [-8.85724, 7.26019], [-8.93435, 7.2824], [-9.09107, 7.1985], [-9.18311, 7.30461], [-9.20798, 7.38109], [-9.305, 7.42056], [-9.41943, 7.41809], [-9.48161, 7.37122], [-9.37465, 7.62032], [-9.35724, 7.74111], [-9.44928, 7.9284], [-9.41445, 8.02448], [-9.50898, 8.18455], [-9.47415, 8.35195], [-9.77763, 8.54633], [-10.05873, 8.42578], [-10.05375, 8.50697], [-10.14579, 8.52665], [-10.203, 8.47991], [-10.27575, 8.48711], [-10.30084, 8.30008], [-10.31635, 8.28554], [-10.29839, 8.21283], [-10.35227, 8.15223], [-10.45023, 8.15627], [-10.51554, 8.1393], [-10.57523, 8.04829], [-10.60492, 8.04072], [-10.60422, 7.7739], [-11.29417, 7.21576], [-11.4027, 6.97746], [-11.50429, 6.92704], [-12.15048, 6.15992], [-7.52774, 3.7105], [-7.53259, 4.35145], [-7.59349, 4.8909], [-7.53876, 4.94294], [-7.55369, 5.08667], [-7.48901, 5.14118], [-7.46165, 5.26256], [-7.36463, 5.32944], [-7.43428, 5.42355], [-7.37209, 5.61173], [-7.43926, 5.74787], [-7.43677, 5.84687], [-7.46165, 5.84934], [-7.48155, 5.80974], [-7.67309, 5.94337], [-7.70294, 5.90625], [-7.78254, 5.99037], [-7.79747, 6.07696], [-7.8497, 6.08932], [-7.83478, 6.20309], [-7.90692, 6.27728], [-8.00642, 6.31684], [-8.17557, 6.28222], [-8.3298, 6.36381], [-8.38453, 6.35887], [-8.45666, 6.49977], [-8.48652, 6.43797], [-8.59456, 6.50612], [-8.31736, 6.82837], [-8.29249, 7.1691], [-8.37458, 7.25794], [-8.41935, 7.51203], [-8.47114, 7.55676]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LS\", iso1A3: \"LSO\", iso1N3: \"426\", wikidata: \"Q1013\", nameEn: \"Lesotho\", groups: [\"018\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"266\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[29.33204, -29.45598], [29.44883, -29.3772], [29.40524, -29.21246], [28.68043, -28.58744], [28.65091, -28.57025], [28.40612, -28.6215], [28.30518, -28.69531], [28.2348, -28.69471], [28.1317, -28.7293], [28.02503, -28.85991], [27.98675, -28.8787], [27.9392, -28.84864], [27.88933, -28.88156], [27.8907, -28.91612], [27.75458, -28.89839], [27.55974, -29.18954], [27.5158, -29.2261], [27.54258, -29.25575], [27.48679, -29.29349], [27.45125, -29.29708], [27.47254, -29.31968], [27.4358, -29.33465], [27.33464, -29.48161], [27.01016, -29.65439], [27.09489, -29.72796], [27.22719, -30.00718], [27.29603, -30.05473], [27.32555, -30.14785], [27.40778, -30.14577], [27.37293, -30.19401], [27.36649, -30.27246], [27.38108, -30.33456], [27.45452, -30.32239], [27.56901, -30.42504], [27.56781, -30.44562], [27.62137, -30.50509], [27.6521, -30.51707], [27.67819, -30.53437], [27.69467, -30.55862], [27.74814, -30.60635], [28.12073, -30.68072], [28.2319, -30.28476], [28.399, -30.1592], [28.68627, -30.12885], [28.80222, -30.10579], [28.9338, -30.05072], [29.16548, -29.91706], [29.12553, -29.76266], [29.28545, -29.58456], [29.33204, -29.45598]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LT\", iso1A3: \"LTU\", iso1N3: \"440\", wikidata: \"Q37\", nameEn: \"Lithuania\", groups: [\"EU\", \"154\", \"150\", \"UN\"], callingCodes: [\"370\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[24.89005, 56.46666], [24.83686, 56.41565], [24.70022, 56.40483], [24.57353, 56.31525], [24.58143, 56.29125], [24.42746, 56.26522], [24.32334, 56.30226], [24.13139, 56.24881], [24.02657, 56.3231], [23.75726, 56.37282], [23.49803, 56.34307], [23.40486, 56.37689], [23.31606, 56.3827], [23.17312, 56.36795], [23.09531, 56.30511], [22.96988, 56.41213], [22.83048, 56.367], [22.69354, 56.36284], [22.56441, 56.39305], [22.3361, 56.4016], [22.09728, 56.42851], [22.00548, 56.41508], [21.74558, 56.33181], [21.57888, 56.31406], [21.49736, 56.29106], [21.24644, 56.16917], [21.15016, 56.07818], [20.68447, 56.04073], [20.60454, 55.40986], [20.95181, 55.27994], [21.26425, 55.24456], [21.35465, 55.28427], [21.38446, 55.29348], [21.46766, 55.21115], [21.51095, 55.18507], [21.55605, 55.20311], [21.64954, 55.1791], [21.85521, 55.09493], [21.96505, 55.07353], [21.99543, 55.08691], [22.03984, 55.07888], [22.02582, 55.05078], [22.06087, 55.02935], [22.11697, 55.02131], [22.14267, 55.05345], [22.31562, 55.0655], [22.47688, 55.04408], [22.58907, 55.07085], [22.60075, 55.01863], [22.65451, 54.97037], [22.68723, 54.9811], [22.76422, 54.92521], [22.85083, 54.88711], [22.87317, 54.79492], [22.73631, 54.72952], [22.73397, 54.66604], [22.75467, 54.6483], [22.74225, 54.64339], [22.7522, 54.63525], [22.68021, 54.58486], [22.71293, 54.56454], [22.67788, 54.532], [22.70208, 54.45312], [22.7253, 54.41732], [22.79705, 54.36264], [22.83756, 54.40827], [23.00584, 54.38514], [22.99649, 54.35927], [23.05726, 54.34565], [23.04323, 54.31567], [23.104, 54.29794], [23.13905, 54.31567], [23.15526, 54.31076], [23.15938, 54.29894], [23.24656, 54.25701], [23.3494, 54.25155], [23.39525, 54.21672], [23.42418, 54.17911], [23.45223, 54.17775], [23.49196, 54.14764], [23.52702, 54.04622], [23.48261, 53.98855], [23.51284, 53.95052], [23.61677, 53.92691], [23.71726, 53.93379], [23.80543, 53.89558], [23.81309, 53.94205], [23.95098, 53.9613], [23.98837, 53.92554], [24.19638, 53.96405], [24.34128, 53.90076], [24.44411, 53.90076], [24.62275, 54.00217], [24.69652, 54.01901], [24.69185, 53.96543], [24.74279, 53.96663], [24.85311, 54.02862], [24.77131, 54.11091], [24.96894, 54.17589], [24.991, 54.14241], [25.0728, 54.13419], [25.19199, 54.219], [25.22705, 54.26271], [25.35559, 54.26544], [25.509, 54.30267], [25.56823, 54.25212], [25.51452, 54.17799], [25.54724, 54.14925], [25.64875, 54.1259], [25.71084, 54.16704], [25.78563, 54.15747], [25.78553, 54.23327], [25.68513, 54.31727], [25.55425, 54.31591], [25.5376, 54.33158], [25.63371, 54.42075], [25.62203, 54.4656], [25.64813, 54.48704], [25.68045, 54.5321], [25.75977, 54.57252], [25.74122, 54.80108], [25.89462, 54.93438], [25.99129, 54.95705], [26.05907, 54.94631], [26.13386, 54.98924], [26.20397, 54.99729], [26.26941, 55.08032], [26.23202, 55.10439], [26.30628, 55.12536], [26.35121, 55.1525], [26.46249, 55.12814], [26.51481, 55.16051], [26.54753, 55.14181], [26.69243, 55.16718], [26.68075, 55.19787], [26.72983, 55.21788], [26.73017, 55.24226], [26.835, 55.28182], [26.83266, 55.30444], [26.80929, 55.31642], [26.6714, 55.33902], [26.5709, 55.32572], [26.44937, 55.34832], [26.5522, 55.40277], [26.55094, 55.5093], [26.63167, 55.57887], [26.63231, 55.67968], [26.58248, 55.6754], [26.46661, 55.70375], [26.39561, 55.71156], [26.18509, 55.86813], [26.03815, 55.95884], [25.90047, 56.0013], [25.85893, 56.00188], [25.81773, 56.05444], [25.69246, 56.08892], [25.68588, 56.14725], [25.53621, 56.16663], [25.39751, 56.15707], [25.23099, 56.19147], [25.09325, 56.1878], [25.05762, 56.26742], [24.89005, 56.46666]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LU\", iso1A3: \"LUX\", iso1N3: \"442\", wikidata: \"Q32\", nameEn: \"Luxembourg\", groups: [\"EU\", \"155\", \"150\", \"UN\"], callingCodes: [\"352\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[6.1379, 50.12964], [6.1137, 50.13668], [6.12028, 50.16374], [6.08577, 50.17246], [6.06406, 50.15344], [6.03093, 50.16362], [6.02488, 50.18283], [5.96453, 50.17259], [5.95929, 50.13295], [5.89488, 50.11476], [5.8857, 50.07824], [5.85474, 50.06342], [5.86904, 50.04614], [5.8551, 50.02683], [5.81866, 50.01286], [5.82331, 49.99662], [5.83968, 49.9892], [5.83467, 49.97823], [5.81163, 49.97142], [5.80833, 49.96451], [5.77291, 49.96056], [5.77314, 49.93646], [5.73621, 49.89796], [5.78415, 49.87922], [5.75269, 49.8711], [5.75861, 49.85631], [5.74567, 49.85368], [5.75884, 49.84811], [5.74953, 49.84709], [5.74975, 49.83933], [5.74076, 49.83823], [5.7404, 49.83452], [5.74844, 49.82435], [5.74364, 49.82058], [5.74953, 49.81428], [5.75409, 49.79239], [5.78871, 49.7962], [5.82245, 49.75048], [5.83149, 49.74729], [5.82562, 49.72395], [5.84193, 49.72161], [5.86503, 49.72739], [5.88677, 49.70951], [5.86527, 49.69291], [5.86175, 49.67862], [5.9069, 49.66377], [5.90164, 49.6511], [5.90599, 49.63853], [5.88552, 49.63507], [5.88393, 49.62802], [5.87609, 49.62047], [5.8762, 49.60898], [5.84826, 49.5969], [5.84971, 49.58674], [5.86986, 49.58756], [5.87256, 49.57539], [5.8424, 49.56082], [5.84692, 49.55663], [5.84143, 49.5533], [5.81838, 49.54777], [5.80871, 49.5425], [5.81664, 49.53775], [5.83648, 49.5425], [5.84466, 49.53027], [5.83467, 49.52717], [5.83389, 49.52152], [5.86571, 49.50015], [5.94128, 49.50034], [5.94224, 49.49608], [5.96876, 49.49053], [5.97693, 49.45513], [6.02648, 49.45451], [6.02743, 49.44845], [6.04176, 49.44801], [6.05553, 49.46663], [6.07887, 49.46399], [6.08373, 49.45594], [6.10072, 49.45268], [6.09845, 49.46351], [6.10325, 49.4707], [6.12346, 49.4735], [6.12814, 49.49365], [6.14321, 49.48796], [6.16115, 49.49297], [6.15366, 49.50226], [6.17386, 49.50934], [6.19543, 49.50536], [6.2409, 49.51408], [6.25029, 49.50609], [6.27875, 49.503], [6.28818, 49.48465], [6.3687, 49.4593], [6.36778, 49.46937], [6.36907, 49.48931], [6.36788, 49.50377], [6.35666, 49.52931], [6.38072, 49.55171], [6.38228, 49.55855], [6.35825, 49.57053], [6.36676, 49.57813], [6.38024, 49.57593], [6.38342, 49.5799], [6.37464, 49.58886], [6.385, 49.59946], [6.39822, 49.60081], [6.41861, 49.61723], [6.4413, 49.65722], [6.43768, 49.66021], [6.42726, 49.66078], [6.42937, 49.66857], [6.44654, 49.67799], [6.46048, 49.69092], [6.48014, 49.69767], [6.49785, 49.71118], [6.50647, 49.71353], [6.5042, 49.71808], [6.49694, 49.72205], [6.49535, 49.72645], [6.50261, 49.72718], [6.51397, 49.72058], [6.51805, 49.72425], [6.50193, 49.73291], [6.50174, 49.75292], [6.51646, 49.75961], [6.51828, 49.76855], [6.51056, 49.77515], [6.51669, 49.78336], [6.50534, 49.78952], [6.52169, 49.79787], [6.53122, 49.80666], [6.52121, 49.81338], [6.51215, 49.80124], [6.50647, 49.80916], [6.48718, 49.81267], [6.47111, 49.82263], [6.45425, 49.81164], [6.44131, 49.81443], [6.42905, 49.81091], [6.42521, 49.81591], [6.40022, 49.82029], [6.36576, 49.85032], [6.34267, 49.84974], [6.33585, 49.83785], [6.32098, 49.83728], [6.32303, 49.85133], [6.30963, 49.87021], [6.29692, 49.86685], [6.28874, 49.87592], [6.26146, 49.88203], [6.23496, 49.89972], [6.22926, 49.92096], [6.21882, 49.92403], [6.22608, 49.929], [6.22094, 49.94955], [6.19856, 49.95053], [6.19089, 49.96991], [6.18045, 49.96611], [6.18554, 49.95622], [6.17872, 49.9537], [6.16466, 49.97086], [6.1701, 49.98518], [6.14147, 49.99563], [6.14948, 50.00908], [6.13806, 50.01056], [6.1295, 50.01849], [6.13273, 50.02019], [6.13794, 50.01466], [6.14666, 50.02207], [6.13044, 50.02929], [6.13458, 50.04141], [6.11274, 50.05916], [6.12055, 50.09171], [6.1379, 50.12964]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LV\", iso1A3: \"LVA\", iso1N3: \"428\", wikidata: \"Q211\", nameEn: \"Latvia\", groups: [\"EU\", \"154\", \"150\", \"UN\"], callingCodes: [\"371\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[27.34698, 57.52242], [26.90364, 57.62823], [26.54675, 57.51813], [26.46527, 57.56885], [26.29253, 57.59244], [26.1866, 57.6849], [26.2029, 57.7206], [26.08098, 57.76619], [26.0543, 57.76105], [26.03332, 57.7718], [26.02415, 57.76865], [26.02069, 57.77169], [26.0266, 57.77441], [26.027, 57.78158], [26.02456, 57.78342], [26.0324, 57.79037], [26.05949, 57.84744], [25.73499, 57.90193], [25.29581, 58.08288], [25.28237, 57.98539], [25.19484, 58.0831], [24.3579, 57.87471], [24.26221, 57.91787], [23.20055, 57.56697], [22.80496, 57.87798], [19.84909, 57.57876], [19.64795, 57.06466], [20.68447, 56.04073], [21.15016, 56.07818], [21.24644, 56.16917], [21.49736, 56.29106], [21.57888, 56.31406], [21.74558, 56.33181], [22.00548, 56.41508], [22.09728, 56.42851], [22.3361, 56.4016], [22.56441, 56.39305], [22.69354, 56.36284], [22.83048, 56.367], [22.96988, 56.41213], [23.09531, 56.30511], [23.17312, 56.36795], [23.31606, 56.3827], [23.40486, 56.37689], [23.49803, 56.34307], [23.75726, 56.37282], [24.02657, 56.3231], [24.13139, 56.24881], [24.32334, 56.30226], [24.42746, 56.26522], [24.58143, 56.29125], [24.57353, 56.31525], [24.70022, 56.40483], [24.83686, 56.41565], [24.89005, 56.46666], [25.05762, 56.26742], [25.09325, 56.1878], [25.23099, 56.19147], [25.39751, 56.15707], [25.53621, 56.16663], [25.68588, 56.14725], [25.69246, 56.08892], [25.81773, 56.05444], [25.85893, 56.00188], [25.90047, 56.0013], [26.03815, 55.95884], [26.18509, 55.86813], [26.39561, 55.71156], [26.46661, 55.70375], [26.58248, 55.6754], [26.63231, 55.67968], [26.64888, 55.70515], [26.71802, 55.70645], [26.76872, 55.67658], [26.87448, 55.7172], [26.97153, 55.8102], [27.1559, 55.85032], [27.27804, 55.78299], [27.3541, 55.8089], [27.61683, 55.78558], [27.63065, 55.89687], [27.97865, 56.11849], [28.15217, 56.16964], [28.23716, 56.27588], [28.16599, 56.37806], [28.19057, 56.44637], [28.10069, 56.524], [28.13526, 56.57989], [28.04768, 56.59004], [27.86101, 56.88204], [27.66511, 56.83921], [27.86101, 57.29402], [27.52453, 57.42826], [27.56832, 57.53728], [27.34698, 57.52242]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"LY\", iso1A3: \"LBY\", iso1N3: \"434\", wikidata: \"Q1016\", nameEn: \"Libya\", groups: [\"015\", \"002\", \"UN\"], callingCodes: [\"218\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[26.92891, 33.39516], [11.58941, 33.36891], [11.55852, 33.1409], [11.51549, 33.09826], [11.46037, 32.6307], [11.57828, 32.48013], [11.53898, 32.4138], [11.04234, 32.2145], [10.7315, 31.97235], [10.62788, 31.96629], [10.48497, 31.72956], [10.31364, 31.72648], [10.12239, 31.42098], [10.29516, 30.90337], [9.88152, 30.34074], [9.76848, 30.34366], [9.55544, 30.23971], [9.3876, 30.16738], [9.78136, 29.40961], [9.89569, 26.57696], [9.51696, 26.39148], [9.38834, 26.19288], [10.03146, 25.35635], [10.02432, 24.98124], [10.33159, 24.5465], [10.85323, 24.5595], [11.41061, 24.21456], [11.62498, 24.26669], [11.96886, 23.51735], [13.5631, 23.16574], [14.22918, 22.61719], [14.99751, 23.00539], [15.99566, 23.49639], [23.99539, 19.49944], [23.99715, 20.00038], [24.99794, 19.99661], [24.99885, 21.99535], [24.99968, 29.24574], [24.71117, 30.17441], [25.01077, 30.73861], [24.8458, 31.39877], [26.92891, 33.39516]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MA\", iso1A3: \"MAR\", iso1N3: \"504\", wikidata: \"Q1028\", nameEn: \"Morocco\", groups: [\"015\", \"002\", \"UN\"], callingCodes: [\"212\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-2.27707, 35.35051], [-5.10878, 36.05227], [-7.2725, 35.73269], [-14.43883, 27.02969], [-17.27295, 21.93519], [-17.21511, 21.34226], [-17.02707, 21.34022], [-16.9978, 21.36239], [-16.44269, 21.39745], [-14.78487, 21.36587], [-14.47329, 21.63839], [-14.48112, 22.00886], [-14.1291, 22.41636], [-14.10361, 22.75501], [-13.75627, 23.77231], [-13.00628, 24.01923], [-12.92147, 24.39502], [-12.12281, 25.13682], [-12.06001, 26.04442], [-11.62052, 26.05229], [-11.38635, 26.611], [-11.23622, 26.72023], [-11.35695, 26.8505], [-10.68417, 26.90984], [-9.81998, 26.71379], [-9.56957, 26.90042], [-9.08698, 26.98639], [-8.71787, 26.9898], [-8.77527, 27.66663], [-8.66879, 27.6666], [-8.6715, 28.71194], [-7.61585, 29.36252], [-6.95824, 29.50924], [-6.78351, 29.44634], [-6.69965, 29.51623], [-5.75616, 29.61407], [-5.72121, 29.52322], [-5.58831, 29.48103], [-5.21671, 29.95253], [-4.6058, 30.28343], [-4.31774, 30.53229], [-3.64735, 30.67539], [-3.65418, 30.85566], [-3.54944, 31.0503], [-3.77103, 31.14984], [-3.77647, 31.31912], [-3.66386, 31.39202], [-3.66314, 31.6339], [-2.82784, 31.79459], [-2.93873, 32.06557], [-2.46166, 32.16603], [-1.22829, 32.07832], [-1.15735, 32.12096], [-1.24453, 32.1917], [-1.24998, 32.32993], [-0.9912, 32.52467], [-1.37794, 32.73628], [-1.54244, 32.95499], [-1.46249, 33.0499], [-1.67067, 33.27084], [-1.59508, 33.59929], [-1.73494, 33.71721], [-1.64666, 34.10405], [-1.78042, 34.39018], [-1.69788, 34.48056], [-1.84569, 34.61907], [-1.73707, 34.74226], [-1.97469, 34.886], [-1.97833, 34.93218], [-2.04734, 34.93218], [-2.21445, 35.04378], [-2.21248, 35.08532], [-2.27707, 35.35051]], [[-2.91909, 35.33927], [-2.92272, 35.27509], [-2.93893, 35.26737], [-2.95065, 35.26576], [-2.95431, 35.2728], [-2.96516, 35.27967], [-2.96826, 35.28296], [-2.96507, 35.28801], [-2.97035, 35.28852], [-2.96978, 35.29459], [-2.96648, 35.30475], [-2.96038, 35.31609], [-2.91909, 35.33927]], [[-3.90602, 35.21494], [-3.89343, 35.22728], [-3.88372, 35.20767], [-3.90602, 35.21494]], [[-4.30191, 35.17419], [-4.29436, 35.17149], [-4.30112, 35.17058], [-4.30191, 35.17419]], [[-2.40316, 35.16893], [-2.45965, 35.16527], [-2.43262, 35.20652], [-2.40316, 35.16893]], [[-5.38491, 35.92591], [-5.21179, 35.90091], [-5.34379, 35.8711], [-5.35844, 35.87375], [-5.37338, 35.88417], [-5.38491, 35.92591]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MC\", iso1A3: \"MCO\", iso1N3: \"492\", wikidata: \"Q235\", nameEn: \"Monaco\", groups: [\"155\", \"150\", \"UN\"], callingCodes: [\"377\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[7.47823, 43.73341], [7.4379, 43.74963], [7.4389, 43.75151], [7.43708, 43.75197], [7.43624, 43.75014], [7.43013, 43.74895], [7.42809, 43.74396], [7.42443, 43.74087], [7.42299, 43.74176], [7.42062, 43.73977], [7.41233, 43.73439], [7.41298, 43.73311], [7.41291, 43.73168], [7.41113, 43.73156], [7.40903, 43.7296], [7.42422, 43.72209], [7.47823, 43.73341]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MD\", iso1A3: \"MDA\", iso1N3: \"498\", wikidata: \"Q217\", nameEn: \"Moldova\", groups: [\"151\", \"150\", \"UN\"], callingCodes: [\"373\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[27.74422, 48.45926], [27.6658, 48.44034], [27.59027, 48.46311], [27.5889, 48.49224], [27.46942, 48.454], [27.44333, 48.41209], [27.37741, 48.41026], [27.37604, 48.44398], [27.32159, 48.4434], [27.27855, 48.37534], [27.13434, 48.37288], [27.08078, 48.43214], [27.0231, 48.42485], [27.03821, 48.37653], [26.93384, 48.36558], [26.85556, 48.41095], [26.71274, 48.40388], [26.82809, 48.31629], [26.79239, 48.29071], [26.6839, 48.35828], [26.62823, 48.25804], [26.81161, 48.25049], [26.87708, 48.19919], [26.94265, 48.1969], [26.98042, 48.15752], [26.96119, 48.13003], [27.04118, 48.12522], [27.02985, 48.09083], [27.15622, 47.98538], [27.1618, 47.92391], [27.29069, 47.73722], [27.25519, 47.71366], [27.32202, 47.64009], [27.3979, 47.59473], [27.47942, 47.48113], [27.55731, 47.46637], [27.60263, 47.32507], [27.68706, 47.28962], [27.73172, 47.29248], [27.81892, 47.1381], [28.09095, 46.97621], [28.12173, 46.82283], [28.24808, 46.64305], [28.22281, 46.50481], [28.25769, 46.43334], [28.18902, 46.35283], [28.19864, 46.31869], [28.10937, 46.22852], [28.13684, 46.18099], [28.08612, 46.01105], [28.13111, 45.92819], [28.16568, 45.6421], [28.08927, 45.6051], [28.18741, 45.47358], [28.21139, 45.46895], [28.30201, 45.54744], [28.41836, 45.51715], [28.43072, 45.48538], [28.51449, 45.49982], [28.49252, 45.56716], [28.54196, 45.58062], [28.51587, 45.6613], [28.47879, 45.66994], [28.52823, 45.73803], [28.70401, 45.78019], [28.69852, 45.81753], [28.78503, 45.83475], [28.74383, 45.96664], [28.98004, 46.00385], [29.00613, 46.04962], [28.94643, 46.09176], [29.06656, 46.19716], [28.94953, 46.25852], [28.98478, 46.31803], [29.004, 46.31495], [28.9306, 46.45699], [29.01241, 46.46177], [29.02409, 46.49582], [29.23547, 46.55435], [29.24886, 46.37912], [29.35357, 46.49505], [29.49914, 46.45889], [29.5939, 46.35472], [29.6763, 46.36041], [29.66359, 46.4215], [29.74496, 46.45605], [29.88329, 46.35851], [29.94114, 46.40114], [30.09103, 46.38694], [30.16794, 46.40967], [30.02511, 46.45132], [29.88916, 46.54302], [29.94409, 46.56002], [29.9743, 46.75325], [29.94522, 46.80055], [29.98814, 46.82358], [29.87405, 46.88199], [29.75458, 46.8604], [29.72986, 46.92234], [29.57056, 46.94766], [29.62137, 47.05069], [29.61038, 47.09932], [29.53044, 47.07851], [29.49732, 47.12878], [29.57696, 47.13581], [29.54996, 47.24962], [29.59665, 47.25521], [29.5733, 47.36508], [29.48678, 47.36043], [29.47854, 47.30366], [29.39889, 47.30179], [29.3261, 47.44664], [29.18603, 47.43387], [29.11743, 47.55001], [29.22414, 47.60012], [29.22242, 47.73607], [29.27255, 47.79953], [29.20663, 47.80367], [29.27804, 47.88893], [29.19839, 47.89261], [29.1723, 47.99013], [28.9306, 47.96255], [28.8414, 48.03392], [28.85232, 48.12506], [28.69896, 48.13106], [28.53921, 48.17453], [28.48428, 48.0737], [28.42454, 48.12047], [28.43701, 48.15832], [28.38712, 48.17567], [28.34009, 48.13147], [28.30609, 48.14018], [28.30586, 48.1597], [28.34912, 48.1787], [28.36996, 48.20543], [28.35519, 48.24957], [28.32508, 48.23384], [28.2856, 48.23202], [28.19314, 48.20749], [28.17666, 48.25963], [28.07504, 48.23494], [28.09873, 48.3124], [28.04527, 48.32661], [27.95883, 48.32368], [27.88391, 48.36699], [27.87533, 48.4037], [27.81902, 48.41874], [27.79225, 48.44244], [27.74422, 48.45926]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"ME\", iso1A3: \"MNE\", iso1N3: \"499\", wikidata: \"Q236\", nameEn: \"Montenegro\", groups: [\"039\", \"150\", \"UN\"], callingCodes: [\"382\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[19.22807, 43.5264], [19.15685, 43.53943], [19.13933, 43.5282], [19.04934, 43.50384], [19.01078, 43.55806], [18.91379, 43.50299], [18.95469, 43.49367], [18.96053, 43.45042], [19.01078, 43.43854], [19.04071, 43.397], [19.08673, 43.31453], [19.08206, 43.29668], [19.04233, 43.30008], [19.00844, 43.24988], [18.95001, 43.29327], [18.95819, 43.32899], [18.90911, 43.36383], [18.83912, 43.34795], [18.84794, 43.33735], [18.85342, 43.32426], [18.76538, 43.29838], [18.6976, 43.25243], [18.71747, 43.2286], [18.66605, 43.2056], [18.64735, 43.14766], [18.66254, 43.03928], [18.52232, 43.01451], [18.49076, 42.95553], [18.49661, 42.89306], [18.4935, 42.86433], [18.47633, 42.85829], [18.45921, 42.81682], [18.47324, 42.74992], [18.56789, 42.72074], [18.55221, 42.69045], [18.54603, 42.69171], [18.54841, 42.68328], [18.57373, 42.64429], [18.52232, 42.62279], [18.55504, 42.58409], [18.53751, 42.57376], [18.49778, 42.58409], [18.43735, 42.55921], [18.44307, 42.51077], [18.43588, 42.48556], [18.52152, 42.42302], [18.54128, 42.39171], [18.45131, 42.21682], [19.26406, 41.74971], [19.37597, 41.84849], [19.37451, 41.8842], [19.33812, 41.90669], [19.34601, 41.95675], [19.37691, 41.96977], [19.36867, 42.02564], [19.37548, 42.06835], [19.40687, 42.10024], [19.28623, 42.17745], [19.42, 42.33019], [19.42352, 42.36546], [19.4836, 42.40831], [19.65972, 42.62774], [19.73244, 42.66299], [19.77375, 42.58517], [19.74731, 42.57422], [19.76549, 42.50237], [19.82333, 42.46581], [19.9324, 42.51699], [20.00842, 42.5109], [20.01834, 42.54622], [20.07761, 42.55582], [20.0969, 42.65559], [20.02915, 42.71147], [20.02088, 42.74789], [20.04898, 42.77701], [20.2539, 42.76245], [20.27869, 42.81945], [20.35692, 42.8335], [20.34528, 42.90676], [20.16415, 42.97177], [20.14896, 42.99058], [20.12325, 42.96237], [20.05431, 42.99571], [20.04729, 43.02732], [19.98887, 43.0538], [19.96549, 43.11098], [19.92576, 43.08539], [19.79255, 43.11951], [19.76918, 43.16044], [19.64063, 43.19027], [19.62661, 43.2286], [19.54598, 43.25158], [19.52962, 43.31623], [19.48171, 43.32644], [19.44315, 43.38846], [19.22229, 43.47926], [19.22807, 43.5264]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MF\", iso1A3: \"MAF\", iso1N3: \"663\", wikidata: \"Q126125\", nameEn: \"Saint-Martin\", country: \"FR\", groups: [\"Q3320166\", \"EU\", \"029\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"590\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-62.93924, 18.02904], [-62.62718, 18.26185], [-63.35989, 18.06012], [-63.33064, 17.9615], [-63.13502, 18.05445], [-63.11042, 18.05339], [-63.09686, 18.04608], [-63.07759, 18.04943], [-63.0579, 18.06614], [-63.04039, 18.05619], [-63.02323, 18.05757], [-62.93924, 18.02904]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MG\", iso1A3: \"MDG\", iso1N3: \"450\", wikidata: \"Q1019\", nameEn: \"Madagascar\", aliases: [\"RM\"], groups: [\"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"261\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[51.93891, -10.85085], [45.84651, -12.77177], [42.14681, -19.63341], [45.80092, -33.00974], [51.93891, -10.85085]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MH\", iso1A3: \"MHL\", iso1N3: \"584\", wikidata: \"Q709\", nameEn: \"Marshall Islands\", groups: [\"057\", \"009\", \"UN\"], roadSpeedUnit: \"mph\", callingCodes: [\"692\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[169, 3.9], [173.53711, 5.70687], [169.29099, 15.77133], [159.04653, 10.59067], [169, 3.9]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MK\", iso1A3: \"MKD\", iso1N3: \"807\", wikidata: \"Q221\", nameEn: \"North Macedonia\", groups: [\"039\", \"150\", \"UN\"], callingCodes: [\"389\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[22.34773, 42.31725], [22.29275, 42.34913], [22.29605, 42.37477], [22.16384, 42.32103], [22.02908, 42.29848], [21.94405, 42.34669], [21.91595, 42.30392], [21.84654, 42.3247], [21.77176, 42.2648], [21.70111, 42.23789], [21.58992, 42.25915], [21.52145, 42.24465], [21.50823, 42.27156], [21.43882, 42.2789], [21.43882, 42.23609], [21.38428, 42.24465], [21.30496, 42.1418], [21.29913, 42.13954], [21.31983, 42.10993], [21.22728, 42.08909], [21.16614, 42.19815], [21.11491, 42.20794], [20.75464, 42.05229], [20.76786, 41.91839], [20.68523, 41.85318], [20.59524, 41.8818], [20.55976, 41.87068], [20.57144, 41.7897], [20.53405, 41.78099], [20.51301, 41.72433], [20.52937, 41.69292], [20.51769, 41.65975], [20.55508, 41.58113], [20.52103, 41.56473], [20.45809, 41.5549], [20.45331, 41.51436], [20.49039, 41.49277], [20.51301, 41.442], [20.55976, 41.4087], [20.52119, 41.34381], [20.49432, 41.33679], [20.51068, 41.2323], [20.59715, 41.13644], [20.58546, 41.11179], [20.59832, 41.09066], [20.63454, 41.0889], [20.65558, 41.08009], [20.71634, 40.91781], [20.73504, 40.9081], [20.81567, 40.89662], [20.83671, 40.92752], [20.94305, 40.92399], [20.97693, 40.90103], [20.97887, 40.85475], [21.15262, 40.85546], [21.21105, 40.8855], [21.25779, 40.86165], [21.35595, 40.87578], [21.41555, 40.9173], [21.53007, 40.90759], [21.57448, 40.86076], [21.69601, 40.9429], [21.7556, 40.92525], [21.91102, 41.04786], [21.90869, 41.09191], [22.06527, 41.15617], [22.1424, 41.12449], [22.17629, 41.15969], [22.26744, 41.16409], [22.42285, 41.11921], [22.5549, 41.13065], [22.58295, 41.11568], [22.62852, 41.14385], [22.65306, 41.18168], [22.71266, 41.13945], [22.74538, 41.16321], [22.76408, 41.32225], [22.81199, 41.3398], [22.93334, 41.34104], [22.96331, 41.35782], [22.95513, 41.63265], [23.03342, 41.71034], [23.01239, 41.76527], [22.96682, 41.77137], [22.90254, 41.87587], [22.86749, 42.02275], [22.67701, 42.06614], [22.51224, 42.15457], [22.50289, 42.19527], [22.47251, 42.20393], [22.38136, 42.30339], [22.34773, 42.31725]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"ML\", iso1A3: \"MLI\", iso1N3: \"466\", wikidata: \"Q912\", nameEn: \"Mali\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"223\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-4.83423, 24.99935], [-6.57191, 25.0002], [-5.60725, 16.49919], [-5.33435, 16.33354], [-5.50165, 15.50061], [-9.32979, 15.50032], [-9.31106, 15.69412], [-9.33314, 15.7044], [-9.44673, 15.60553], [-9.40447, 15.4396], [-10.71721, 15.4223], [-10.90932, 15.11001], [-11.43483, 15.62339], [-11.70705, 15.51558], [-11.94903, 14.76143], [-12.23936, 14.76324], [-11.93043, 13.84505], [-12.06897, 13.71049], [-11.83345, 13.33333], [-11.63025, 13.39174], [-11.39935, 12.97808], [-11.37536, 12.40788], [-11.50006, 12.17826], [-11.24136, 12.01286], [-10.99758, 12.24634], [-10.80355, 12.1053], [-10.71897, 11.91552], [-10.30604, 12.24634], [-9.714, 12.0226], [-9.63938, 12.18312], [-9.32097, 12.29009], [-9.38067, 12.48446], [-9.13689, 12.50875], [-8.94784, 12.34842], [-8.80854, 11.66715], [-8.40058, 11.37466], [-8.66923, 10.99397], [-8.35083, 11.06234], [-8.2667, 10.91762], [-8.32614, 10.69273], [-8.22711, 10.41722], [-8.10207, 10.44649], [-7.9578, 10.2703], [-7.97971, 10.17117], [-7.92107, 10.15577], [-7.63048, 10.46334], [-7.54462, 10.40921], [-7.52261, 10.4655], [-7.44555, 10.44602], [-7.3707, 10.24677], [-7.13331, 10.24877], [-7.0603, 10.14711], [-7.00966, 10.15794], [-6.97444, 10.21644], [-7.01186, 10.25111], [-6.93921, 10.35291], [-6.68164, 10.35074], [-6.63541, 10.66893], [-6.52974, 10.59104], [-6.42847, 10.5694], [-6.40646, 10.69922], [-6.325, 10.68624], [-6.24795, 10.74248], [-6.1731, 10.46983], [-6.18851, 10.24244], [-5.99478, 10.19694], [-5.78124, 10.43952], [-5.65135, 10.46767], [-5.51058, 10.43177], [-5.46643, 10.56074], [-5.47083, 10.75329], [-5.41579, 10.84628], [-5.49284, 11.07538], [-5.32994, 11.13371], [-5.32553, 11.21578], [-5.25949, 11.24816], [-5.25509, 11.36905], [-5.20665, 11.43811], [-5.22867, 11.60421], [-5.29251, 11.61715], [-5.26389, 11.75728], [-5.40258, 11.8327], [-5.26389, 11.84778], [-5.07897, 11.97918], [-4.72893, 12.01579], [-4.70692, 12.06746], [-4.62987, 12.06531], [-4.62546, 12.13204], [-4.54841, 12.1385], [-4.57703, 12.19875], [-4.41412, 12.31922], [-4.47356, 12.71252], [-4.238, 12.71467], [-4.21819, 12.95722], [-4.34477, 13.12927], [-3.96501, 13.49778], [-3.90558, 13.44375], [-3.96282, 13.38164], [-3.7911, 13.36665], [-3.54454, 13.1781], [-3.4313, 13.1588], [-3.43507, 13.27272], [-3.23599, 13.29035], [-3.28396, 13.5422], [-3.26407, 13.70699], [-2.88189, 13.64921], [-2.90831, 13.81174], [-2.84667, 14.05532], [-2.66175, 14.14713], [-2.47587, 14.29671], [-2.10223, 14.14878], [-1.9992, 14.19011], [-1.97945, 14.47709], [-1.68083, 14.50023], [-1.32166, 14.72774], [-1.05875, 14.7921], [-0.72004, 15.08655], [-0.24673, 15.07805], [0.06588, 14.96961], [0.23859, 15.00135], [0.72632, 14.95898], [0.96711, 14.98275], [1.31275, 15.27978], [3.01806, 15.34571], [3.03134, 15.42221], [3.50368, 15.35934], [4.19893, 16.39923], [4.21787, 17.00118], [4.26762, 17.00432], [4.26651, 19.14224], [3.36082, 18.9745], [3.12501, 19.1366], [3.24648, 19.81703], [1.20992, 20.73533], [1.15698, 21.12843], [-4.83423, 24.99935]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MM\", iso1A3: \"MMR\", iso1N3: \"104\", wikidata: \"Q836\", nameEn: \"Myanmar\", aliases: [\"Burma\", \"BU\"], groups: [\"035\", \"142\", \"UN\"], callingCodes: [\"95\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[92.62187, 21.87037], [92.59775, 21.6092], [92.68152, 21.28454], [92.60187, 21.24615], [92.55105, 21.3856], [92.43158, 21.37025], [92.37939, 21.47764], [92.20087, 21.337], [92.17752, 21.17445], [92.26071, 21.05697], [92.47409, 20.38654], [92.61042, 13.76986], [94.6371, 13.81803], [97.63455, 9.60854], [98.12555, 9.44056], [98.33094, 9.91973], [98.47298, 9.95782], [98.52291, 9.92389], [98.55174, 9.92804], [98.7391, 10.31488], [98.81944, 10.52761], [98.77275, 10.62548], [98.78511, 10.68351], [98.86819, 10.78336], [99.0069, 10.85485], [98.99701, 10.92962], [99.02337, 10.97217], [99.06938, 10.94857], [99.32756, 11.28545], [99.31573, 11.32081], [99.39485, 11.3925], [99.47598, 11.62434], [99.5672, 11.62732], [99.64108, 11.78948], [99.64891, 11.82699], [99.53424, 12.02317], [99.56445, 12.14805], [99.47519, 12.1353], [99.409, 12.60603], [99.29254, 12.68921], [99.18905, 12.84799], [99.18748, 12.9898], [99.10646, 13.05804], [99.12225, 13.19847], [99.20617, 13.20575], [99.16695, 13.72621], [98.97356, 14.04868], [98.56762, 14.37701], [98.24874, 14.83013], [98.18821, 15.13125], [98.22, 15.21327], [98.30446, 15.30667], [98.40522, 15.25268], [98.41906, 15.27103], [98.39351, 15.34177], [98.4866, 15.39154], [98.56027, 15.33471], [98.58598, 15.46821], [98.541, 15.65406], [98.59853, 15.87197], [98.57019, 16.04578], [98.69585, 16.13353], [98.8376, 16.11706], [98.92656, 16.36425], [98.84485, 16.42354], [98.68074, 16.27068], [98.63817, 16.47424], [98.57912, 16.55983], [98.5695, 16.62826], [98.51113, 16.64503], [98.51833, 16.676], [98.51472, 16.68521], [98.51579, 16.69433], [98.51043, 16.70107], [98.49713, 16.69022], [98.50253, 16.7139], [98.46994, 16.73613], [98.53833, 16.81934], [98.49603, 16.8446], [98.52624, 16.89979], [98.39441, 17.06266], [98.34566, 17.04822], [98.10439, 17.33847], [98.11185, 17.36829], [97.91829, 17.54504], [97.76407, 17.71595], [97.66794, 17.88005], [97.73723, 17.97912], [97.60841, 18.23846], [97.64116, 18.29778], [97.56219, 18.33885], [97.50383, 18.26844], [97.34522, 18.54596], [97.36444, 18.57138], [97.5258, 18.4939], [97.76752, 18.58097], [97.73836, 18.88478], [97.66487, 18.9371], [97.73654, 18.9812], [97.73797, 19.04261], [97.83479, 19.09972], [97.84024, 19.22217], [97.78606, 19.26769], [97.84186, 19.29526], [97.78769, 19.39429], [97.88423, 19.5041], [97.84715, 19.55782], [98.04364, 19.65755], [98.03314, 19.80941], [98.13829, 19.78541], [98.24884, 19.67876], [98.51182, 19.71303], [98.56065, 19.67807], [98.83661, 19.80931], [98.98679, 19.7419], [99.0735, 20.10298], [99.20328, 20.12877], [99.416, 20.08614], [99.52943, 20.14811], [99.5569, 20.20676], [99.46077, 20.36198], [99.46008, 20.39673], [99.68255, 20.32077], [99.81096, 20.33687], [99.86383, 20.44371], [99.88211, 20.44488], [99.88451, 20.44596], [99.89168, 20.44548], [99.89301, 20.44311], [99.89692, 20.44789], [99.90499, 20.4487], [99.91616, 20.44986], [99.95721, 20.46301], [100.08404, 20.36626], [100.1957, 20.68247], [100.36375, 20.82783], [100.51079, 20.82194], [100.60112, 20.8347], [100.64628, 20.88279], [100.50974, 20.88574], [100.55281, 21.02796], [100.63578, 21.05639], [100.72716, 21.31786], [100.80173, 21.2934], [101.00234, 21.39612], [101.16198, 21.52808], [101.15156, 21.56129], [101.11744, 21.77659], [100.87265, 21.67396], [100.72143, 21.51898], [100.57861, 21.45637], [100.4811, 21.46148], [100.42892, 21.54325], [100.35201, 21.53176], [100.25863, 21.47043], [100.18447, 21.51898], [100.1625, 21.48704], [100.12542, 21.50365], [100.10757, 21.59945], [100.17486, 21.65306], [100.12679, 21.70539], [100.04956, 21.66843], [99.98654, 21.71064], [99.94003, 21.82782], [99.99084, 21.97053], [99.96612, 22.05965], [99.85351, 22.04183], [99.47585, 22.13345], [99.33166, 22.09656], [99.1552, 22.15874], [99.19176, 22.16983], [99.17318, 22.18025], [99.28771, 22.4105], [99.37972, 22.50188], [99.38247, 22.57544], [99.31243, 22.73893], [99.45654, 22.85726], [99.43537, 22.94086], [99.54218, 22.90014], [99.52214, 23.08218], [99.34127, 23.13099], [99.25741, 23.09025], [99.04601, 23.12215], [99.05975, 23.16382], [98.88597, 23.18656], [98.92515, 23.29535], [98.93958, 23.31414], [98.87573, 23.33038], [98.92104, 23.36946], [98.87683, 23.48995], [98.82877, 23.47908], [98.80294, 23.5345], [98.88396, 23.59555], [98.81775, 23.694], [98.82933, 23.72921], [98.79607, 23.77947], [98.68209, 23.80492], [98.67797, 23.9644], [98.89632, 24.10612], [98.87998, 24.15624], [98.85319, 24.13042], [98.59256, 24.08371], [98.54476, 24.13119], [98.20666, 24.11406], [98.07806, 24.07988], [98.06703, 24.08028], [98.0607, 24.07812], [98.05671, 24.07961], [98.05302, 24.07408], [98.04709, 24.07616], [97.99583, 24.04932], [97.98691, 24.03897], [97.93951, 24.01953], [97.90998, 24.02094], [97.88616, 24.00463], [97.88414, 23.99405], [97.88814, 23.98605], [97.89683, 23.98389], [97.89676, 23.97931], [97.8955, 23.97758], [97.88811, 23.97446], [97.86545, 23.97723], [97.84328, 23.97603], [97.79416, 23.95663], [97.79456, 23.94836], [97.72302, 23.89288], [97.64667, 23.84574], [97.5247, 23.94032], [97.62363, 24.00506], [97.72903, 24.12606], [97.75305, 24.16902], [97.72799, 24.18883], [97.72998, 24.2302], [97.76799, 24.26365], [97.71941, 24.29652], [97.66723, 24.30027], [97.65624, 24.33781], [97.7098, 24.35658], [97.66998, 24.45288], [97.60029, 24.4401], [97.52757, 24.43748], [97.56286, 24.54535], [97.56525, 24.72838], [97.54675, 24.74202], [97.5542, 24.74943], [97.56383, 24.75535], [97.56648, 24.76475], [97.64354, 24.79171], [97.70181, 24.84557], [97.73127, 24.83015], [97.76481, 24.8289], [97.79949, 24.85655], [97.72903, 24.91332], [97.72216, 25.08508], [97.77023, 25.11492], [97.83614, 25.2715], [97.92541, 25.20815], [98.14925, 25.41547], [98.12591, 25.50722], [98.18084, 25.56298], [98.16848, 25.62739], [98.25774, 25.6051], [98.31268, 25.55307], [98.40606, 25.61129], [98.54064, 25.85129], [98.63128, 25.79937], [98.70818, 25.86241], [98.60763, 26.01512], [98.57085, 26.11547], [98.63128, 26.15492], [98.66884, 26.09165], [98.7329, 26.17218], [98.67797, 26.24487], [98.72741, 26.36183], [98.77547, 26.61994], [98.7333, 26.85615], [98.69582, 27.56499], [98.43353, 27.67086], [98.42529, 27.55404], [98.32641, 27.51385], [98.13964, 27.9478], [98.15337, 28.12114], [97.90069, 28.3776], [97.79632, 28.33168], [97.70705, 28.5056], [97.56835, 28.55628], [97.50518, 28.49716], [97.47085, 28.2688], [97.41729, 28.29783], [97.34547, 28.21385], [97.31292, 28.06784], [97.35412, 28.06663], [97.38845, 28.01329], [97.35824, 27.87256], [97.29919, 27.92233], [96.90112, 27.62149], [96.91431, 27.45752], [97.17422, 27.14052], [97.14675, 27.09041], [96.89132, 27.17474], [96.85287, 27.2065], [96.88445, 27.25046], [96.73888, 27.36638], [96.55761, 27.29928], [96.40779, 27.29818], [96.15591, 27.24572], [96.04949, 27.19428], [95.93002, 27.04149], [95.81603, 27.01335], [95.437, 26.7083], [95.30339, 26.65372], [95.23513, 26.68499], [95.05798, 26.45408], [95.12801, 26.38397], [95.11428, 26.1019], [95.18556, 26.07338], [94.80117, 25.49359], [94.68032, 25.47003], [94.57458, 25.20318], [94.74212, 25.13606], [94.73937, 25.00545], [94.60204, 24.70889], [94.5526, 24.70764], [94.50729, 24.59281], [94.45279, 24.56656], [94.32362, 24.27692], [94.30215, 24.23752], [94.14081, 23.83333], [93.92089, 23.95812], [93.80279, 23.92549], [93.75952, 24.0003], [93.62871, 24.00922], [93.50616, 23.94432], [93.46633, 23.97067], [93.41415, 24.07854], [93.34735, 24.10151], [93.32351, 24.04468], [93.36059, 23.93176], [93.3908, 23.92925], [93.3908, 23.7622], [93.43475, 23.68299], [93.38805, 23.4728], [93.39981, 23.38828], [93.38781, 23.36139], [93.36862, 23.35426], [93.38478, 23.13698], [93.2878, 23.00464], [93.12988, 23.05772], [93.134, 22.92498], [93.09417, 22.69459], [93.134, 22.59573], [93.11477, 22.54374], [93.13537, 22.45873], [93.18206, 22.43716], [93.19991, 22.25425], [93.14224, 22.24535], [93.15734, 22.18687], [93.04885, 22.20595], [92.99255, 22.05965], [92.99804, 21.98964], [92.93899, 22.02656], [92.89504, 21.95143], [92.86208, 22.05456], [92.70416, 22.16017], [92.67532, 22.03547], [92.60949, 21.97638], [92.62187, 21.87037]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MN\", iso1A3: \"MNG\", iso1N3: \"496\", wikidata: \"Q711\", nameEn: \"Mongolia\", groups: [\"030\", \"142\", \"UN\"], callingCodes: [\"976\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[102.14032, 51.35566], [101.5044, 51.50467], [101.39085, 51.45753], [100.61116, 51.73028], [99.89203, 51.74903], [99.75578, 51.90108], [99.27888, 51.96876], [98.87768, 52.14563], [98.74142, 51.8637], [98.33222, 51.71832], [98.22053, 51.46579], [98.05257, 51.46696], [97.83305, 51.00248], [98.01472, 50.86652], [97.9693, 50.78044], [98.06393, 50.61262], [98.31373, 50.4996], [98.29481, 50.33561], [97.85197, 49.91339], [97.76871, 49.99861], [97.56432, 49.92801], [97.56811, 49.84265], [97.24639, 49.74737], [96.97388, 49.88413], [95.80056, 50.04239], [95.74757, 49.97915], [95.02465, 49.96941], [94.97166, 50.04725], [94.6121, 50.04239], [94.49477, 50.17832], [94.39258, 50.22193], [94.30823, 50.57498], [92.99595, 50.63183], [93.01109, 50.79001], [92.44714, 50.78762], [92.07173, 50.69585], [91.86048, 50.73734], [89.59711, 49.90851], [89.70687, 49.72535], [88.82499, 49.44808], [88.42449, 49.48821], [88.17223, 49.46934], [88.15543, 49.30314], [87.98977, 49.18147], [87.81333, 49.17354], [87.88171, 48.95853], [87.73822, 48.89582], [88.0788, 48.71436], [87.96361, 48.58478], [88.58939, 48.34531], [88.58316, 48.21893], [88.8011, 48.11302], [88.93186, 48.10263], [89.0711, 47.98528], [89.55453, 48.0423], [89.76624, 47.82745], [90.06512, 47.88177], [90.10871, 47.7375], [90.33598, 47.68303], [90.48854, 47.41826], [90.48542, 47.30438], [90.76108, 46.99399], [90.84035, 46.99525], [91.03649, 46.72916], [91.0147, 46.58171], [91.07696, 46.57315], [90.89639, 46.30711], [90.99672, 46.14207], [91.03026, 46.04194], [90.70907, 45.73437], [90.65114, 45.49314], [90.89169, 45.19667], [91.64048, 45.07408], [93.51161, 44.95964], [94.10003, 44.71016], [94.71959, 44.35284], [95.01191, 44.25274], [95.39772, 44.2805], [95.32891, 44.02407], [95.52594, 43.99353], [95.89543, 43.2528], [96.35658, 42.90363], [96.37926, 42.72055], [97.1777, 42.7964], [99.50671, 42.56535], [100.33297, 42.68231], [100.84979, 42.67087], [101.80515, 42.50074], [102.07645, 42.22519], [102.72403, 42.14675], [103.92804, 41.78246], [104.52258, 41.8706], [104.51667, 41.66113], [105.0123, 41.63188], [106.76517, 42.28741], [107.24774, 42.36107], [107.29755, 42.41395], [107.49681, 42.46221], [107.57258, 42.40898], [108.84489, 42.40246], [109.00679, 42.45302], [109.452, 42.44842], [109.89402, 42.63111], [110.08401, 42.6411], [110.4327, 42.78293], [111.0149, 43.3289], [111.59087, 43.51207], [111.79758, 43.6637], [111.93776, 43.68709], [111.96289, 43.81596], [111.40498, 44.3461], [111.76275, 44.98032], [111.98695, 45.09074], [112.4164, 45.06858], [112.74662, 44.86297], [113.70918, 44.72891], [114.5166, 45.27189], [114.54801, 45.38337], [114.74612, 45.43585], [114.94546, 45.37377], [115.60329, 45.44717], [116.16989, 45.68603], [116.27366, 45.78637], [116.24012, 45.8778], [116.26678, 45.96479], [116.58612, 46.30211], [116.75551, 46.33083], [116.83166, 46.38637], [117.36609, 46.36335], [117.41782, 46.57862], [117.60748, 46.59771], [117.69554, 46.50991], [118.30534, 46.73519], [118.78747, 46.68689], [118.8337, 46.77742], [118.89974, 46.77139], [118.92616, 46.72765], [119.00541, 46.74273], [119.10448, 46.65516], [119.24978, 46.64761], [119.32827, 46.61433], [119.42827, 46.63783], [119.65265, 46.62342], [119.68127, 46.59015], [119.77373, 46.62947], [119.80455, 46.67631], [119.89261, 46.66423], [119.91242, 46.90091], [119.85518, 46.92196], [119.71209, 47.19192], [119.62403, 47.24575], [119.56019, 47.24874], [119.54918, 47.29505], [119.31964, 47.42617], [119.35892, 47.48104], [119.13995, 47.53997], [119.12343, 47.66458], [118.7564, 47.76947], [118.55766, 47.99277], [118.29654, 48.00246], [118.22677, 48.03853], [118.11009, 48.04], [118.03676, 48.00982], [117.80196, 48.01661], [117.50181, 47.77216], [117.37875, 47.63627], [116.9723, 47.87285], [116.67405, 47.89039], [116.4465, 47.83662], [116.21879, 47.88505], [115.94296, 47.67741], [115.57128, 47.91988], [115.52082, 48.15367], [115.811, 48.25699], [115.78876, 48.51781], [116.06565, 48.81716], [116.03781, 48.87014], [116.71193, 49.83813], [116.62502, 49.92919], [116.22402, 50.04477], [115.73602, 49.87688], [115.26068, 49.97367], [114.9703, 50.19254], [114.325, 50.28098], [113.20216, 49.83356], [113.02647, 49.60772], [110.64493, 49.1816], [110.39891, 49.25083], [110.24373, 49.16676], [109.51325, 49.22859], [109.18017, 49.34709], [108.53969, 49.32325], [108.27937, 49.53167], [107.95387, 49.66659], [107.96116, 49.93191], [107.36407, 49.97612], [107.1174, 50.04239], [107.00007, 50.1977], [106.80326, 50.30177], [106.58373, 50.34044], [106.51122, 50.34408], [106.49628, 50.32436], [106.47156, 50.31909], [106.07865, 50.33474], [106.05562, 50.40582], [105.32528, 50.4648], [103.70343, 50.13952], [102.71178, 50.38873], [102.32194, 50.67982], [102.14032, 51.35566]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MO\", iso1A3: \"MAC\", iso1N3: \"446\", wikidata: \"Q14773\", nameEn: \"Macau\", aliases: [\"Macao\"], country: \"CN\", groups: [\"030\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"853\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[113.54942, 22.14519], [113.54839, 22.10909], [113.57191, 22.07696], [113.63011, 22.10782], [113.60504, 22.20464], [113.57123, 22.20416], [113.56865, 22.20973], [113.5508, 22.21672], [113.54333, 22.21688], [113.54093, 22.21314], [113.53593, 22.2137], [113.53301, 22.21235], [113.53552, 22.20607], [113.52659, 22.18271], [113.54093, 22.15497], [113.54942, 22.14519]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MP\", iso1A3: \"MNP\", iso1N3: \"580\", wikidata: \"Q16644\", nameEn: \"Northern Mariana Islands\", aliases: [\"US-MP\"], country: \"US\", groups: [\"Q1352230\", \"Q153732\", \"057\", \"009\", \"UN\"], roadSpeedUnit: \"mph\", callingCodes: [\"1 670\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[135.52896, 14.32623], [152.19114, 13.63487], [145.05972, 21.28731], [135.52896, 14.32623]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MQ\", iso1A3: \"MTQ\", iso1N3: \"474\", wikidata: \"Q17054\", nameEn: \"Martinique\", country: \"FR\", groups: [\"Q3320166\", \"EU\", \"029\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"596\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-59.95997, 14.20285], [-61.07821, 15.25109], [-61.69315, 14.26451], [-59.95997, 14.20285]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MR\", iso1A3: \"MRT\", iso1N3: \"478\", wikidata: \"Q1025\", nameEn: \"Mauritania\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"222\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-5.60725, 16.49919], [-6.57191, 25.0002], [-4.83423, 24.99935], [-8.66674, 27.31569], [-8.66721, 25.99918], [-12.0002, 25.9986], [-12.00251, 23.4538], [-12.14969, 23.41935], [-12.36213, 23.3187], [-12.5741, 23.28975], [-13.00412, 23.02297], [-13.10753, 22.89493], [-13.15313, 22.75649], [-13.08438, 22.53866], [-13.01525, 21.33343], [-16.95474, 21.33997], [-16.99806, 21.12142], [-17.0357, 21.05368], [-17.0396, 20.9961], [-17.06781, 20.92697], [-17.0695, 20.85742], [-17.0471, 20.76408], [-17.15288, 16.07139], [-16.50854, 16.09032], [-16.48967, 16.0496], [-16.44814, 16.09753], [-16.4429, 16.20605], [-16.27016, 16.51565], [-15.6509, 16.50315], [-15.00557, 16.64997], [-14.32144, 16.61495], [-13.80075, 16.13961], [-13.43135, 16.09022], [-13.11029, 15.52116], [-12.23936, 14.76324], [-11.94903, 14.76143], [-11.70705, 15.51558], [-11.43483, 15.62339], [-10.90932, 15.11001], [-10.71721, 15.4223], [-9.40447, 15.4396], [-9.44673, 15.60553], [-9.33314, 15.7044], [-9.31106, 15.69412], [-9.32979, 15.50032], [-5.50165, 15.50061], [-5.33435, 16.33354], [-5.60725, 16.49919]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MS\", iso1A3: \"MSR\", iso1N3: \"500\", wikidata: \"Q13353\", nameEn: \"Montserrat\", country: \"GB\", groups: [\"BOTS\", \"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1 664\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-61.91508, 16.51165], [-62.1023, 16.97277], [-62.58307, 16.68909], [-61.91508, 16.51165]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MT\", iso1A3: \"MLT\", iso1N3: \"470\", wikidata: \"Q233\", nameEn: \"Malta\", groups: [\"EU\", \"039\", \"150\", \"UN\"], driveSide: \"left\", callingCodes: [\"356\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[15.70991, 35.79901], [14.07544, 36.41525], [13.27636, 35.20764], [15.70991, 35.79901]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MU\", iso1A3: \"MUS\", iso1N3: \"480\", wikidata: \"Q1027\", nameEn: \"Mauritius\", groups: [\"014\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"230\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[56.09755, -9.55401], [57.50644, -31.92637], [68.4673, -19.15185], [56.09755, -9.55401]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MV\", iso1A3: \"MDV\", iso1N3: \"462\", wikidata: \"Q826\", nameEn: \"Maldives\", groups: [\"034\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"960\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[71.9161, 8.55531], [72.57428, -3.7623], [76.59015, 5.591], [71.9161, 8.55531]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MW\", iso1A3: \"MWI\", iso1N3: \"454\", wikidata: \"Q1020\", nameEn: \"Malawi\", groups: [\"014\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"265\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[33.48052, -9.62442], [33.31581, -9.48554], [33.14925, -9.49322], [32.99397, -9.36712], [32.95389, -9.40138], [33.00476, -9.5133], [33.00256, -9.63053], [33.05485, -9.61316], [33.10163, -9.66525], [33.12144, -9.58929], [33.2095, -9.61099], [33.31517, -9.82364], [33.36581, -9.81063], [33.37902, -9.9104], [33.31297, -10.05133], [33.53863, -10.20148], [33.54797, -10.36077], [33.70675, -10.56896], [33.47636, -10.78465], [33.28022, -10.84428], [33.25998, -10.88862], [33.39697, -11.15296], [33.29267, -11.3789], [33.29267, -11.43536], [33.23663, -11.40637], [33.24252, -11.59302], [33.32692, -11.59248], [33.33937, -11.91252], [33.25998, -12.14242], [33.3705, -12.34931], [33.47636, -12.32498], [33.54485, -12.35996], [33.37517, -12.54085], [33.28177, -12.54692], [33.18837, -12.61377], [33.05917, -12.59554], [32.94397, -12.76868], [32.96733, -12.88251], [33.02181, -12.88707], [32.98289, -13.12671], [33.0078, -13.19492], [32.86113, -13.47292], [32.84176, -13.52794], [32.73683, -13.57682], [32.68436, -13.55769], [32.66468, -13.60019], [32.68654, -13.64268], [32.7828, -13.64805], [32.84528, -13.71576], [32.76962, -13.77224], [32.79015, -13.80755], [32.88985, -13.82956], [32.99042, -13.95689], [33.02977, -14.05022], [33.07568, -13.98447], [33.16749, -13.93992], [33.24249, -14.00019], [33.66677, -14.61306], [33.7247, -14.4989], [33.88503, -14.51652], [33.92898, -14.47929], [34.08588, -14.48893], [34.18733, -14.43823], [34.22355, -14.43607], [34.34453, -14.3985], [34.35843, -14.38652], [34.39277, -14.39467], [34.4192, -14.43191], [34.44641, -14.47746], [34.45053, -14.49873], [34.47628, -14.53363], [34.48932, -14.53646], [34.49636, -14.55091], [34.52366, -14.5667], [34.53962, -14.59776], [34.55112, -14.64494], [34.53516, -14.67782], [34.52057, -14.68263], [34.54503, -14.74672], [34.567, -14.77345], [34.61522, -14.99583], [34.57503, -15.30619], [34.43126, -15.44778], [34.44981, -15.60864], [34.25195, -15.90321], [34.43126, -16.04737], [34.40344, -16.20923], [35.04805, -16.83167], [35.13771, -16.81687], [35.17017, -16.93521], [35.04805, -17.00027], [35.0923, -17.13235], [35.3062, -17.1244], [35.27065, -16.93817], [35.30929, -16.82871], [35.27219, -16.69402], [35.14235, -16.56812], [35.25828, -16.4792], [35.30157, -16.2211], [35.43355, -16.11371], [35.52365, -16.15414], [35.70107, -16.10147], [35.80487, -16.03907], [35.85303, -15.41913], [35.78799, -15.17428], [35.91812, -14.89514], [35.87212, -14.89478], [35.86945, -14.67481], [35.5299, -14.27714], [35.47989, -14.15594], [34.86229, -13.48958], [34.60253, -13.48487], [34.37831, -12.17408], [34.46088, -12.0174], [34.70739, -12.15652], [34.82903, -12.04837], [34.57917, -11.87849], [34.64241, -11.57499], [34.96296, -11.57354], [34.91153, -11.39799], [34.79375, -11.32245], [34.63305, -11.11731], [34.61161, -11.01611], [34.67047, -10.93796], [34.65946, -10.6828], [34.57581, -10.56271], [34.51911, -10.12279], [34.54499, -10.0678], [34.03865, -9.49398], [33.95829, -9.54066], [33.9638, -9.62206], [33.93298, -9.71647], [33.76677, -9.58516], [33.48052, -9.62442]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MX\", iso1A3: \"MEX\", iso1N3: \"484\", wikidata: \"Q96\", nameEn: \"Mexico\", groups: [\"013\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"52\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-117.1243, 32.53427], [-118.48109, 32.5991], [-120.12904, 18.41089], [-92.37213, 14.39277], [-92.2261, 14.53423], [-92.1454, 14.6804], [-92.18161, 14.84147], [-92.1423, 14.88647], [-92.1454, 14.98143], [-92.0621, 15.07406], [-92.20983, 15.26077], [-91.73182, 16.07371], [-90.44567, 16.07573], [-90.40499, 16.40524], [-90.61212, 16.49832], [-90.69064, 16.70697], [-91.04436, 16.92175], [-91.43809, 17.25373], [-90.99199, 17.25192], [-90.98678, 17.81655], [-89.14985, 17.81563], [-89.15105, 17.95104], [-89.03839, 18.0067], [-88.8716, 17.89535], [-88.71505, 18.0707], [-88.48242, 18.49164], [-88.3268, 18.49048], [-88.29909, 18.47591], [-88.26593, 18.47617], [-88.03238, 18.41778], [-88.03165, 18.16657], [-87.90671, 18.15213], [-87.87604, 18.18313], [-87.86657, 18.19971], [-87.85693, 18.18266], [-87.84815, 18.18511], [-86.92368, 17.61462], [-85.9092, 21.8218], [-96.92418, 25.97377], [-97.13927, 25.96583], [-97.35946, 25.92189], [-97.37332, 25.83854], [-97.42511, 25.83969], [-97.45669, 25.86874], [-97.49828, 25.89877], [-97.52025, 25.88518], [-97.66511, 26.01708], [-97.95155, 26.0625], [-97.97017, 26.05232], [-98.24603, 26.07191], [-98.27075, 26.09457], [-98.30491, 26.10475], [-98.35126, 26.15129], [-99.00546, 26.3925], [-99.03053, 26.41249], [-99.08477, 26.39849], [-99.53573, 27.30926], [-99.49744, 27.43746], [-99.482, 27.47128], [-99.48045, 27.49016], [-99.50208, 27.50021], [-99.52955, 27.49747], [-99.51478, 27.55836], [-99.55409, 27.61314], [-100.50029, 28.66117], [-100.51222, 28.70679], [-100.5075, 28.74066], [-100.52313, 28.75598], [-100.59809, 28.88197], [-100.63689, 28.90812], [-100.67294, 29.09744], [-100.79696, 29.24688], [-100.87982, 29.296], [-100.94056, 29.33371], [-100.94579, 29.34523], [-100.96725, 29.3477], [-101.01128, 29.36947], [-101.05686, 29.44738], [-101.47277, 29.7744], [-102.60596, 29.8192], [-103.15787, 28.93865], [-104.37752, 29.54255], [-104.39363, 29.55396], [-104.3969, 29.57105], [-104.5171, 29.64671], [-104.77674, 30.4236], [-106.00363, 31.39181], [-106.09025, 31.40569], [-106.20346, 31.46305], [-106.23711, 31.51262], [-106.24612, 31.54193], [-106.28084, 31.56173], [-106.30305, 31.62154], [-106.33419, 31.66303], [-106.34864, 31.69663], [-106.3718, 31.71165], [-106.38003, 31.73151], [-106.41773, 31.75196], [-106.43419, 31.75478], [-106.45244, 31.76523], [-106.46726, 31.75998], [-106.47298, 31.75054], [-106.48815, 31.74769], [-106.50111, 31.75714], [-106.50962, 31.76155], [-106.51251, 31.76922], [-106.52266, 31.77509], [-106.529, 31.784], [-108.20899, 31.78534], [-108.20979, 31.33316], [-111.07523, 31.33232], [-114.82011, 32.49609], [-114.79524, 32.55731], [-114.81141, 32.55543], [-114.80584, 32.62028], [-114.76736, 32.64094], [-114.71871, 32.71894], [-115.88053, 32.63624], [-117.1243, 32.53427]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"MY\", iso1A3: \"MYS\", iso1N3: \"458\", wikidata: \"Q833\", nameEn: \"Malaysia\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"MZ\", iso1A3: \"MOZ\", iso1N3: \"508\", wikidata: \"Q1029\", nameEn: \"Mozambique\", groups: [\"014\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"258\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[40.74206, -10.25691], [40.44265, -10.4618], [40.00295, -10.80255], [39.58249, -10.96043], [39.24395, -11.17433], [38.88996, -11.16978], [38.47258, -11.4199], [38.21598, -11.27289], [37.93618, -11.26228], [37.8388, -11.3123], [37.76614, -11.53352], [37.3936, -11.68949], [36.80309, -11.56836], [36.62068, -11.72884], [36.19094, -11.70008], [36.19094, -11.57593], [35.82767, -11.41081], [35.63599, -11.55927], [34.96296, -11.57354], [34.64241, -11.57499], [34.57917, -11.87849], [34.82903, -12.04837], [34.70739, -12.15652], [34.46088, -12.0174], [34.37831, -12.17408], [34.60253, -13.48487], [34.86229, -13.48958], [35.47989, -14.15594], [35.5299, -14.27714], [35.86945, -14.67481], [35.87212, -14.89478], [35.91812, -14.89514], [35.78799, -15.17428], [35.85303, -15.41913], [35.80487, -16.03907], [35.70107, -16.10147], [35.52365, -16.15414], [35.43355, -16.11371], [35.30157, -16.2211], [35.25828, -16.4792], [35.14235, -16.56812], [35.27219, -16.69402], [35.30929, -16.82871], [35.27065, -16.93817], [35.3062, -17.1244], [35.0923, -17.13235], [35.04805, -17.00027], [35.17017, -16.93521], [35.13771, -16.81687], [35.04805, -16.83167], [34.40344, -16.20923], [34.43126, -16.04737], [34.25195, -15.90321], [34.44981, -15.60864], [34.43126, -15.44778], [34.57503, -15.30619], [34.61522, -14.99583], [34.567, -14.77345], [34.54503, -14.74672], [34.52057, -14.68263], [34.53516, -14.67782], [34.55112, -14.64494], [34.53962, -14.59776], [34.52366, -14.5667], [34.49636, -14.55091], [34.48932, -14.53646], [34.47628, -14.53363], [34.45053, -14.49873], [34.44641, -14.47746], [34.4192, -14.43191], [34.39277, -14.39467], [34.35843, -14.38652], [34.34453, -14.3985], [34.22355, -14.43607], [34.18733, -14.43823], [34.08588, -14.48893], [33.92898, -14.47929], [33.88503, -14.51652], [33.7247, -14.4989], [33.66677, -14.61306], [33.24249, -14.00019], [30.22098, -14.99447], [30.41902, -15.62269], [30.42568, -15.9962], [30.91597, -15.99924], [30.97761, -16.05848], [31.13171, -15.98019], [31.30563, -16.01193], [31.42451, -16.15154], [31.67988, -16.19595], [31.90223, -16.34388], [31.91324, -16.41569], [32.02772, -16.43892], [32.28529, -16.43892], [32.42838, -16.4727], [32.71017, -16.59932], [32.69917, -16.66893], [32.78943, -16.70267], [32.97655, -16.70689], [32.91051, -16.89446], [32.84113, -16.92259], [32.96554, -17.11971], [33.00517, -17.30477], [33.0426, -17.3468], [32.96554, -17.48964], [32.98536, -17.55891], [33.0492, -17.60298], [32.94133, -17.99705], [33.03159, -18.35054], [33.02278, -18.4696], [32.88629, -18.51344], [32.88629, -18.58023], [32.95013, -18.69079], [32.9017, -18.7992], [32.82465, -18.77419], [32.70137, -18.84712], [32.73439, -18.92628], [32.69917, -18.94293], [32.72118, -19.02204], [32.84006, -19.0262], [32.87088, -19.09279], [32.85107, -19.29238], [32.77966, -19.36098], [32.78282, -19.47513], [32.84446, -19.48343], [32.84666, -19.68462], [32.95013, -19.67219], [33.06461, -19.77787], [33.01178, -20.02007], [32.93032, -20.03868], [32.85987, -20.16686], [32.85987, -20.27841], [32.66174, -20.56106], [32.55167, -20.56312], [32.48122, -20.63319], [32.51644, -20.91929], [32.37115, -21.133], [32.48236, -21.32873], [32.41234, -21.31246], [31.38336, -22.36919], [31.30611, -22.422], [31.55779, -23.176], [31.56539, -23.47268], [31.67942, -23.60858], [31.70223, -23.72695], [31.77445, -23.90082], [31.87707, -23.95293], [31.90368, -24.18892], [31.9835, -24.29983], [32.03196, -25.10785], [32.01676, -25.38117], [31.97875, -25.46356], [32.00631, -25.65044], [31.92649, -25.84216], [31.974, -25.95387], [32.00916, -25.999], [32.08599, -26.00978], [32.10435, -26.15656], [32.07352, -26.40185], [32.13409, -26.5317], [32.13315, -26.84345], [32.19409, -26.84032], [32.22302, -26.84136], [32.29584, -26.852], [32.35222, -26.86027], [34.51034, -26.91792], [42.99868, -12.65261], [40.74206, -10.25691]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"NA\", iso1A3: \"NAM\", iso1N3: \"516\", wikidata: \"Q1030\", nameEn: \"Namibia\", groups: [\"018\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"264\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[14.28743, -17.38814], [13.95896, -17.43141], [13.36212, -16.98048], [12.97145, -16.98567], [12.52111, -17.24495], [12.07076, -17.15165], [11.75063, -17.25013], [10.5065, -17.25284], [12.51595, -32.27486], [16.45332, -28.63117], [16.46592, -28.57126], [16.59922, -28.53246], [16.90446, -28.057], [17.15405, -28.08573], [17.4579, -28.68718], [18.99885, -28.89165], [19.99882, -28.42622], [19.99817, -24.76768], [19.99912, -21.99991], [20.99751, -22.00026], [20.99904, -18.31743], [21.45556, -18.31795], [23.0996, -18.00075], [23.29618, -17.99855], [23.61088, -18.4881], [24.19416, -18.01919], [24.40577, -17.95726], [24.57485, -18.07151], [24.6303, -17.9863], [24.71887, -17.9218], [24.73364, -17.89338], [24.95586, -17.79674], [25.05895, -17.84452], [25.16882, -17.78253], [25.26433, -17.79571], [25.00198, -17.58221], [24.70864, -17.49501], [24.5621, -17.52963], [24.38712, -17.46818], [24.32811, -17.49082], [24.23619, -17.47489], [23.47474, -17.62877], [21.42741, -18.02787], [21.14283, -17.94318], [18.84226, -17.80375], [18.39229, -17.38927], [14.28743, -17.38814]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"NC\", iso1A3: \"NCL\", iso1N3: \"540\", wikidata: \"Q33788\", nameEn: \"New Caledonia\", country: \"FR\", groups: [\"EU\", \"Q1451600\", \"054\", \"009\", \"UN\"], callingCodes: [\"687\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[159.77159, -28.41151], [174.245, -23.1974], [156.73836, -14.50464], [159.77159, -28.41151]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"NE\", iso1A3: \"NER\", iso1N3: \"562\", wikidata: \"Q1032\", nameEn: \"Niger\", aliases: [\"RN\"], groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"227\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[14.22918, 22.61719], [13.5631, 23.16574], [11.96886, 23.51735], [7.48273, 20.87258], [7.38361, 20.79165], [5.8153, 19.45101], [4.26651, 19.14224], [4.26762, 17.00432], [4.21787, 17.00118], [4.19893, 16.39923], [3.50368, 15.35934], [3.03134, 15.42221], [3.01806, 15.34571], [1.31275, 15.27978], [0.96711, 14.98275], [0.72632, 14.95898], [0.23859, 15.00135], [0.16936, 14.51654], [0.38051, 14.05575], [0.61924, 13.68491], [0.77377, 13.6866], [0.77637, 13.64442], [0.99514, 13.5668], [1.02813, 13.46635], [1.20088, 13.38951], [1.24429, 13.39373], [1.28509, 13.35488], [1.24516, 13.33968], [1.21217, 13.37853], [1.18873, 13.31771], [0.99253, 13.37515], [0.99167, 13.10727], [2.26349, 12.41915], [2.05785, 12.35539], [2.39723, 11.89473], [2.45824, 11.98672], [2.39657, 12.10952], [2.37783, 12.24804], [2.6593, 12.30631], [2.83978, 12.40585], [3.25352, 12.01467], [3.31613, 11.88495], [3.48187, 11.86092], [3.59375, 11.70269], [3.61075, 11.69181], [3.67988, 11.75429], [3.67122, 11.80865], [3.63063, 11.83042], [3.61955, 11.91847], [3.67775, 11.97599], [3.63136, 12.11826], [3.66364, 12.25884], [3.65111, 12.52223], [3.94339, 12.74979], [4.10006, 12.98862], [4.14367, 13.17189], [4.14186, 13.47586], [4.23456, 13.47725], [4.4668, 13.68286], [4.87425, 13.78], [4.9368, 13.7345], [5.07396, 13.75052], [5.21026, 13.73627], [5.27797, 13.75474], [5.35437, 13.83567], [5.52957, 13.8845], [6.15771, 13.64564], [6.27411, 13.67835], [6.43053, 13.6006], [6.69617, 13.34057], [6.94445, 12.99825], [7.0521, 13.00076], [7.12676, 13.02445], [7.22399, 13.1293], [7.39241, 13.09717], [7.81085, 13.34902], [8.07997, 13.30847], [8.25185, 13.20369], [8.41853, 13.06166], [8.49493, 13.07519], [8.60431, 13.01768], [8.64251, 12.93985], [8.97413, 12.83661], [9.65995, 12.80614], [10.00373, 13.18171], [10.19993, 13.27129], [10.46731, 13.28819], [10.66004, 13.36422], [11.4535, 13.37773], [11.88236, 13.2527], [12.04209, 13.14452], [12.16189, 13.10056], [12.19315, 13.12423], [12.47095, 13.06673], [12.58033, 13.27805], [12.6793, 13.29157], [12.87376, 13.48919], [13.05085, 13.53984], [13.19844, 13.52802], [13.33213, 13.71195], [13.6302, 13.71094], [13.47559, 14.40881], [13.48259, 14.46704], [13.68573, 14.55276], [13.67878, 14.64013], [13.809, 14.72915], [13.78991, 14.87519], [13.86301, 15.04043], [14.37425, 15.72591], [15.50373, 16.89649], [15.6032, 18.77402], [15.75098, 19.93002], [15.99632, 20.35364], [15.6721, 20.70069], [15.59841, 20.74039], [15.56004, 20.79488], [15.55382, 20.86507], [15.57248, 20.92138], [15.62515, 20.95395], [15.28332, 21.44557], [15.20213, 21.49365], [15.19692, 21.99339], [14.99751, 23.00539], [14.22918, 22.61719]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"NF\", iso1A3: \"NFK\", iso1N3: \"574\", wikidata: \"Q31057\", nameEn: \"Norfolk Island\", country: \"AU\", groups: [\"053\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"672 3\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[169.82316, -28.16667], [166.29505, -28.29175], [167.94076, -30.60745], [169.82316, -28.16667]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"NG\", iso1A3: \"NGA\", iso1N3: \"566\", wikidata: \"Q1033\", nameEn: \"Nigeria\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"234\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[6.15771, 13.64564], [5.52957, 13.8845], [5.35437, 13.83567], [5.27797, 13.75474], [5.21026, 13.73627], [5.07396, 13.75052], [4.9368, 13.7345], [4.87425, 13.78], [4.4668, 13.68286], [4.23456, 13.47725], [4.14186, 13.47586], [4.14367, 13.17189], [4.10006, 12.98862], [3.94339, 12.74979], [3.65111, 12.52223], [3.66364, 12.25884], [3.63136, 12.11826], [3.67775, 11.97599], [3.61955, 11.91847], [3.63063, 11.83042], [3.67122, 11.80865], [3.67988, 11.75429], [3.61075, 11.69181], [3.59375, 11.70269], [3.49175, 11.29765], [3.71505, 11.13015], [3.84243, 10.59316], [3.78292, 10.40538], [3.6844, 10.46351], [3.57275, 10.27185], [3.66908, 10.18136], [3.54429, 9.87739], [3.35383, 9.83641], [3.32099, 9.78032], [3.34726, 9.70696], [3.25093, 9.61632], [3.13928, 9.47167], [3.14147, 9.28375], [3.08017, 9.10006], [2.77907, 9.06924], [2.67523, 7.87825], [2.73095, 7.7755], [2.73405, 7.5423], [2.78668, 7.5116], [2.79442, 7.43486], [2.74489, 7.42565], [2.76965, 7.13543], [2.71702, 6.95722], [2.74024, 6.92802], [2.73405, 6.78508], [2.78823, 6.76356], [2.78204, 6.70514], [2.7325, 6.64057], [2.74334, 6.57291], [2.70464, 6.50831], [2.70566, 6.38038], [2.74181, 6.13349], [5.87055, 3.78489], [8.34397, 4.30689], [8.60302, 4.87353], [8.78027, 5.1243], [8.92029, 5.58403], [8.83687, 5.68483], [8.88156, 5.78857], [8.84209, 5.82562], [9.51757, 6.43874], [9.70674, 6.51717], [9.77824, 6.79088], [9.86314, 6.77756], [10.15135, 7.03781], [10.21466, 6.88996], [10.53639, 6.93432], [10.57214, 7.16345], [10.59746, 7.14719], [10.60789, 7.06885], [10.83727, 6.9358], [10.8179, 6.83377], [10.94302, 6.69325], [11.09644, 6.68437], [11.09495, 6.51717], [11.42041, 6.53789], [11.42264, 6.5882], [11.51499, 6.60892], [11.57755, 6.74059], [11.55818, 6.86186], [11.63117, 6.9905], [11.87396, 7.09398], [11.84864, 7.26098], [11.93205, 7.47812], [12.01844, 7.52981], [11.99908, 7.67302], [12.20909, 7.97553], [12.19271, 8.10826], [12.24782, 8.17904], [12.26123, 8.43696], [12.4489, 8.52536], [12.44146, 8.6152], [12.68722, 8.65938], [12.71701, 8.7595], [12.79, 8.75361], [12.81085, 8.91992], [12.90022, 9.11411], [12.91958, 9.33905], [12.85628, 9.36698], [13.02385, 9.49334], [13.22642, 9.57266], [13.25472, 9.76795], [13.29941, 9.8296], [13.25025, 9.86042], [13.24132, 9.91031], [13.27409, 9.93232], [13.286, 9.9822], [13.25323, 10.00127], [13.25025, 10.03647], [13.34111, 10.12299], [13.43644, 10.13326], [13.5705, 10.53183], [13.54964, 10.61236], [13.73434, 10.9255], [13.70753, 10.94451], [13.7403, 11.00593], [13.78945, 11.00154], [13.97489, 11.30258], [14.17821, 11.23831], [14.6124, 11.51283], [14.64591, 11.66166], [14.55207, 11.72001], [14.61612, 11.7798], [14.6474, 12.17466], [14.4843, 12.35223], [14.22215, 12.36533], [14.17523, 12.41916], [14.20204, 12.53405], [14.08251, 13.0797], [13.6302, 13.71094], [13.33213, 13.71195], [13.19844, 13.52802], [13.05085, 13.53984], [12.87376, 13.48919], [12.6793, 13.29157], [12.58033, 13.27805], [12.47095, 13.06673], [12.19315, 13.12423], [12.16189, 13.10056], [12.04209, 13.14452], [11.88236, 13.2527], [11.4535, 13.37773], [10.66004, 13.36422], [10.46731, 13.28819], [10.19993, 13.27129], [10.00373, 13.18171], [9.65995, 12.80614], [8.97413, 12.83661], [8.64251, 12.93985], [8.60431, 13.01768], [8.49493, 13.07519], [8.41853, 13.06166], [8.25185, 13.20369], [8.07997, 13.30847], [7.81085, 13.34902], [7.39241, 13.09717], [7.22399, 13.1293], [7.12676, 13.02445], [7.0521, 13.00076], [6.94445, 12.99825], [6.69617, 13.34057], [6.43053, 13.6006], [6.27411, 13.67835], [6.15771, 13.64564]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"NI\", iso1A3: \"NIC\", iso1N3: \"558\", wikidata: \"Q811\", nameEn: \"Nicaragua\", groups: [\"013\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"505\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-83.13724, 15.00002], [-83.49268, 15.01158], [-83.62101, 14.89448], [-83.89551, 14.76697], [-84.10584, 14.76353], [-84.48373, 14.63249], [-84.70119, 14.68078], [-84.82596, 14.82212], [-84.90082, 14.80489], [-85.1575, 14.53934], [-85.18602, 14.24929], [-85.32149, 14.2562], [-85.45762, 14.11304], [-85.73964, 13.9698], [-85.75477, 13.8499], [-86.03458, 13.99181], [-86.00685, 14.08474], [-86.14801, 14.04317], [-86.35219, 13.77157], [-86.76812, 13.79605], [-86.71267, 13.30348], [-86.87066, 13.30641], [-86.93383, 13.18677], [-86.93197, 13.05313], [-87.03785, 12.98682], [-87.06306, 13.00892], [-87.37107, 12.98646], [-87.55124, 13.12523], [-87.7346, 13.13228], [-88.11443, 12.63306], [-86.14524, 11.09059], [-85.71223, 11.06868], [-85.60529, 11.22607], [-84.92439, 10.9497], [-84.68197, 11.07568], [-83.90838, 10.71161], [-83.66597, 10.79916], [-83.68276, 11.01562], [-82.56142, 11.91792], [-82.06974, 14.49418], [-83.04763, 15.03256], [-83.13724, 15.00002]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"NL\", iso1A3: \"NLD\", iso1N3: \"528\", wikidata: \"Q29999\", nameEn: \"Kingdom of the Netherlands\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"NO\", iso1A3: \"NOR\", iso1N3: \"578\", wikidata: \"Q20\", nameEn: \"Norway\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"NP\", iso1A3: \"NPL\", iso1N3: \"524\", wikidata: \"Q837\", nameEn: \"Nepal\", groups: [\"034\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"977\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[88.13378, 27.88015], [87.82681, 27.95248], [87.72718, 27.80938], [87.56996, 27.84517], [87.11696, 27.84104], [87.03757, 27.94835], [86.75582, 28.04182], [86.74181, 28.10638], [86.56265, 28.09569], [86.51609, 27.96623], [86.42736, 27.91122], [86.22966, 27.9786], [86.18607, 28.17364], [86.088, 28.09264], [86.08333, 28.02121], [86.12069, 27.93047], [86.06309, 27.90021], [85.94946, 27.9401], [85.97813, 27.99023], [85.90743, 28.05144], [85.84672, 28.18187], [85.74864, 28.23126], [85.71907, 28.38064], [85.69105, 28.38475], [85.60854, 28.25045], [85.59765, 28.30529], [85.4233, 28.32996], [85.38127, 28.28336], [85.10729, 28.34092], [85.18668, 28.54076], [85.19135, 28.62825], [85.06059, 28.68562], [84.85511, 28.58041], [84.62317, 28.73887], [84.47528, 28.74023], [84.2231, 28.89571], [84.24801, 29.02783], [84.18107, 29.23451], [83.97559, 29.33091], [83.82303, 29.30513], [83.63156, 29.16249], [83.44787, 29.30513], [83.28131, 29.56813], [83.07116, 29.61957], [82.73024, 29.81695], [82.5341, 29.9735], [82.38622, 30.02608], [82.16984, 30.0692], [82.19475, 30.16884], [82.10757, 30.23745], [82.10135, 30.35439], [81.99082, 30.33423], [81.62033, 30.44703], [81.5459, 30.37688], [81.41018, 30.42153], [81.39928, 30.21862], [81.33355, 30.15303], [81.2623, 30.14596], [81.29032, 30.08806], [81.24362, 30.0126], [81.12842, 30.01395], [81.03953, 30.20059], [80.92547, 30.17193], [80.91143, 30.22173], [80.86673, 30.17321], [80.8778, 30.13384], [80.67076, 29.95732], [80.60226, 29.95732], [80.57179, 29.91422], [80.56247, 29.86661], [80.48997, 29.79566], [80.43458, 29.80466], [80.41554, 29.79451], [80.36803, 29.73865], [80.38428, 29.68513], [80.41858, 29.63581], [80.37939, 29.57098], [80.24322, 29.44299], [80.31428, 29.30784], [80.28626, 29.20327], [80.24112, 29.21414], [80.26602, 29.13938], [80.23178, 29.11626], [80.18085, 29.13649], [80.05743, 28.91479], [80.06957, 28.82763], [80.12125, 28.82346], [80.37188, 28.63371], [80.44504, 28.63098], [80.52443, 28.54897], [80.50575, 28.6706], [80.55142, 28.69182], [81.03471, 28.40054], [81.19847, 28.36284], [81.32923, 28.13521], [81.38683, 28.17638], [81.48179, 28.12148], [81.47867, 28.08303], [81.91223, 27.84995], [81.97214, 27.93322], [82.06554, 27.92222], [82.46405, 27.6716], [82.70378, 27.72122], [82.74119, 27.49838], [82.93261, 27.50328], [82.94938, 27.46036], [83.19413, 27.45632], [83.27197, 27.38309], [83.2673, 27.36235], [83.29999, 27.32778], [83.35136, 27.33885], [83.38872, 27.39276], [83.39495, 27.4798], [83.61288, 27.47013], [83.85595, 27.35797], [83.86182, 27.4241], [83.93306, 27.44939], [84.02229, 27.43836], [84.10791, 27.52399], [84.21376, 27.45218], [84.25735, 27.44941], [84.29315, 27.39], [84.62161, 27.33885], [84.69166, 27.21294], [84.64496, 27.04669], [84.793, 26.9968], [84.82913, 27.01989], [84.85754, 26.98984], [84.96687, 26.95599], [84.97186, 26.9149], [85.00536, 26.89523], [85.05592, 26.88991], [85.02635, 26.85381], [85.15883, 26.86966], [85.19291, 26.86909], [85.18046, 26.80519], [85.21159, 26.75933], [85.34302, 26.74954], [85.47752, 26.79292], [85.56471, 26.84133], [85.5757, 26.85955], [85.59461, 26.85161], [85.61621, 26.86721], [85.66239, 26.84822], [85.73483, 26.79613], [85.72315, 26.67471], [85.76907, 26.63076], [85.83126, 26.61134], [85.85126, 26.60866], [85.8492, 26.56667], [86.02729, 26.66756], [86.13596, 26.60651], [86.22513, 26.58863], [86.26235, 26.61886], [86.31564, 26.61925], [86.49726, 26.54218], [86.54258, 26.53819], [86.57073, 26.49825], [86.61313, 26.48658], [86.62686, 26.46891], [86.69124, 26.45169], [86.74025, 26.42386], [86.76797, 26.45892], [86.82898, 26.43919], [86.94543, 26.52076], [86.95912, 26.52076], [87.01559, 26.53228], [87.04691, 26.58685], [87.0707, 26.58571], [87.09147, 26.45039], [87.14751, 26.40542], [87.18863, 26.40558], [87.24682, 26.4143], [87.26587, 26.40592], [87.26568, 26.37294], [87.34568, 26.34787], [87.37314, 26.40815], [87.46566, 26.44058], [87.51571, 26.43106], [87.55274, 26.40596], [87.59175, 26.38342], [87.66803, 26.40294], [87.67893, 26.43501], [87.76004, 26.40711], [87.7918, 26.46737], [87.84193, 26.43663], [87.89085, 26.48565], [87.90115, 26.44923], [88.00895, 26.36029], [88.09414, 26.43732], [88.09963, 26.54195], [88.16452, 26.64111], [88.1659, 26.68177], [88.19107, 26.75516], [88.12302, 26.95324], [88.13422, 26.98705], [88.11719, 26.98758], [87.9887, 27.11045], [88.01587, 27.21388], [88.01646, 27.21612], [88.07277, 27.43007], [88.04008, 27.49223], [88.19107, 27.79285], [88.1973, 27.85067], [88.13378, 27.88015]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"NR\", iso1A3: \"NRU\", iso1N3: \"520\", wikidata: \"Q697\", nameEn: \"Nauru\", groups: [\"057\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"674\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[166.95155, 0.14829], [166.21778, -0.7977], [167.60042, -0.88259], [166.95155, 0.14829]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"NU\", iso1A3: \"NIU\", iso1N3: \"570\", wikidata: \"Q34020\", nameEn: \"Niue\", country: \"NZ\", groups: [\"061\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"683\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-170.83899, -18.53439], [-170.82274, -20.44429], [-168.63096, -18.60489], [-170.83899, -18.53439]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"NZ\", iso1A3: \"NZL\", iso1N3: \"554\", wikidata: \"Q664\", nameEn: \"New Zealand\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"OM\", iso1A3: \"OMN\", iso1N3: \"512\", wikidata: \"Q842\", nameEn: \"Oman\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"968\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[56.82555, 25.7713], [56.79239, 26.41236], [56.68954, 26.76645], [56.2644, 26.58649], [55.81777, 26.18798], [56.08666, 26.05038], [56.15498, 26.06828], [56.19334, 25.9795], [56.13963, 25.82765], [56.17416, 25.77239], [56.13579, 25.73524], [56.14826, 25.66351], [56.18363, 25.65508], [56.20473, 25.61119], [56.25365, 25.60211], [56.26636, 25.60643], [56.25341, 25.61443], [56.26534, 25.62825], [56.82555, 25.7713]]], [[[56.26062, 25.33108], [56.23362, 25.31253], [56.25008, 25.28843], [56.24465, 25.27505], [56.20838, 25.25668], [56.20872, 25.24104], [56.24341, 25.22867], [56.27628, 25.23404], [56.34438, 25.26653], [56.35172, 25.30681], [56.3111, 25.30107], [56.3005, 25.31815], [56.26062, 25.33108]], [[56.28423, 25.26344], [56.27086, 25.26128], [56.2716, 25.27916], [56.28102, 25.28486], [56.29379, 25.2754], [56.28423, 25.26344]]], [[[61.45114, 22.55394], [56.86325, 25.03856], [56.3227, 24.97284], [56.34873, 24.93205], [56.30269, 24.88334], [56.20568, 24.85063], [56.20062, 24.78565], [56.13684, 24.73699], [56.06128, 24.74457], [56.03535, 24.81161], [55.97836, 24.87673], [55.97467, 24.89639], [56.05106, 24.87461], [56.05715, 24.95727], [55.96316, 25.00857], [55.90849, 24.96771], [55.85094, 24.96858], [55.81116, 24.9116], [55.81348, 24.80102], [55.83408, 24.77858], [55.83271, 24.68567], [55.76461, 24.5287], [55.83271, 24.41521], [55.83395, 24.32776], [55.80747, 24.31069], [55.79145, 24.27914], [55.76781, 24.26209], [55.75939, 24.26114], [55.75382, 24.2466], [55.75257, 24.23466], [55.76558, 24.23227], [55.77658, 24.23476], [55.83367, 24.20193], [55.95472, 24.2172], [56.01799, 24.07426], [55.8308, 24.01633], [55.73301, 24.05994], [55.48677, 23.94946], [55.57358, 23.669], [55.22634, 23.10378], [55.2137, 22.71065], [55.66469, 21.99658], [54.99756, 20.00083], [52.00311, 19.00083], [52.78009, 17.35124], [52.74267, 17.29519], [52.81185, 17.28568], [57.49095, 8.14549], [61.45114, 22.55394]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PA\", iso1A3: \"PAN\", iso1N3: \"591\", wikidata: \"Q804\", nameEn: \"Panama\", groups: [\"013\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"507\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-77.32389, 8.81247], [-77.58292, 9.22278], [-78.79327, 9.93766], [-82.51044, 9.65379], [-82.56507, 9.57279], [-82.61345, 9.49881], [-82.66667, 9.49746], [-82.77206, 9.59573], [-82.87919, 9.62645], [-82.84871, 9.4973], [-82.93516, 9.46741], [-82.93516, 9.07687], [-82.72126, 8.97125], [-82.88253, 8.83331], [-82.91377, 8.774], [-82.92068, 8.74832], [-82.8794, 8.6981], [-82.82739, 8.60153], [-82.83975, 8.54755], [-82.83322, 8.52464], [-82.8382, 8.48117], [-82.8679, 8.44042], [-82.93056, 8.43465], [-83.05209, 8.33394], [-82.9388, 8.26634], [-82.88641, 8.10219], [-82.89137, 8.05755], [-82.89978, 8.04083], [-82.94503, 7.93865], [-82.13751, 6.97312], [-78.06168, 7.07793], [-77.89178, 7.22681], [-77.81426, 7.48319], [-77.72157, 7.47612], [-77.72514, 7.72348], [-77.57185, 7.51147], [-77.17257, 7.97422], [-77.45064, 8.49991], [-77.32389, 8.81247]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PE\", iso1A3: \"PER\", iso1N3: \"604\", wikidata: \"Q419\", nameEn: \"Peru\", groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"51\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-74.26675, -0.97229], [-74.42701, -0.50218], [-75.18513, -0.0308], [-75.25764, -0.11943], [-75.40192, -0.17196], [-75.61997, -0.10012], [-75.60169, -0.18708], [-75.53615, -0.19213], [-75.22862, -0.60048], [-75.22862, -0.95588], [-75.3872, -0.9374], [-75.57429, -1.55961], [-76.05203, -2.12179], [-76.6324, -2.58397], [-77.94147, -3.05454], [-78.19369, -3.36431], [-78.14324, -3.47653], [-78.22642, -3.51113], [-78.24589, -3.39907], [-78.34362, -3.38633], [-78.68394, -4.60754], [-78.85149, -4.66795], [-79.01659, -5.01481], [-79.1162, -4.97774], [-79.26248, -4.95167], [-79.59402, -4.46848], [-79.79722, -4.47558], [-80.13945, -4.29786], [-80.39256, -4.48269], [-80.46386, -4.41516], [-80.32114, -4.21323], [-80.45023, -4.20938], [-80.4822, -4.05477], [-80.46386, -4.01342], [-80.13232, -3.90317], [-80.19926, -3.68894], [-80.18741, -3.63994], [-80.19848, -3.59249], [-80.21642, -3.5888], [-80.20535, -3.51667], [-80.22629, -3.501], [-80.23651, -3.48652], [-80.24586, -3.48677], [-80.24123, -3.46124], [-80.20647, -3.431], [-80.30602, -3.39149], [-84.52388, -3.36941], [-85.71054, -21.15413], [-70.59118, -18.35072], [-70.378, -18.3495], [-70.31267, -18.31258], [-70.16394, -18.31737], [-69.96732, -18.25992], [-69.81607, -18.12582], [-69.75305, -17.94605], [-69.82868, -17.72048], [-69.79087, -17.65563], [-69.66483, -17.65083], [-69.46897, -17.4988], [-69.46863, -17.37466], [-69.62883, -17.28142], [-69.16896, -16.72233], [-69.00853, -16.66769], [-69.04027, -16.57214], [-68.98358, -16.42165], [-68.79464, -16.33272], [-68.96238, -16.194], [-69.09986, -16.22693], [-69.20291, -16.16668], [-69.40336, -15.61358], [-69.14856, -15.23478], [-69.36254, -14.94634], [-68.88135, -14.18639], [-69.05265, -13.68546], [-68.8864, -13.40792], [-68.85615, -12.87769], [-68.65044, -12.50689], [-68.98115, -11.8979], [-69.57156, -10.94555], [-69.57835, -10.94051], [-69.90896, -10.92744], [-70.38791, -11.07096], [-70.51395, -10.92249], [-70.64134, -11.0108], [-70.62487, -9.80666], [-70.55429, -9.76692], [-70.58453, -9.58303], [-70.53373, -9.42628], [-71.23394, -9.9668], [-72.14742, -9.98049], [-72.31883, -9.5184], [-72.72216, -9.41397], [-73.21498, -9.40904], [-72.92886, -9.04074], [-73.76576, -7.89884], [-73.65485, -7.77897], [-73.96938, -7.58465], [-73.77011, -7.28944], [-73.73986, -6.87919], [-73.12983, -6.43852], [-73.24579, -6.05764], [-72.83973, -5.14765], [-72.64391, -5.0391], [-71.87003, -4.51661], [-70.96814, -4.36915], [-70.77601, -4.15717], [-70.33236, -4.15214], [-70.19582, -4.3607], [-70.11305, -4.27281], [-70.00888, -4.37833], [-69.94708, -4.2431], [-70.3374, -3.79505], [-70.52393, -3.87553], [-70.71396, -3.7921], [-70.04609, -2.73906], [-70.94377, -2.23142], [-71.75223, -2.15058], [-72.92587, -2.44514], [-73.65312, -1.26222], [-74.26675, -0.97229]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PF\", iso1A3: \"PYF\", iso1N3: \"258\", wikidata: \"Q30971\", nameEn: \"French Polynesia\", country: \"FR\", groups: [\"EU\", \"Q1451600\", \"061\", \"009\", \"UN\"], callingCodes: [\"689\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-135.59706, -4.70473], [-156.48634, -15.52824], [-156.45576, -31.75456], [-133.59543, -28.4709], [-135.59706, -4.70473]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PG\", iso1A3: \"PNG\", iso1N3: \"598\", wikidata: \"Q691\", nameEn: \"Papua New Guinea\", groups: [\"054\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"675\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[141.03157, 2.12829], [140.99813, -6.3233], [140.85295, -6.72996], [140.90448, -6.85033], [141.01763, -6.90181], [141.01842, -9.35091], [141.88934, -9.36111], [142.19246, -9.15378], [142.48658, -9.36754], [143.29772, -9.33993], [143.87386, -9.02382], [145.2855, -9.62524], [156.73836, -14.50464], [154.74815, -7.33315], [155.60735, -6.92266], [155.69784, -6.92661], [155.92557, -6.84664], [156.03993, -6.65703], [156.03296, -6.55528], [160.43769, -4.17974], [141.03157, 2.12829]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PH\", iso1A3: \"PHL\", iso1N3: \"608\", wikidata: \"Q928\", nameEn: \"Philippines\", aliases: [\"PI\", \"RP\"], groups: [\"035\", \"142\", \"UN\"], callingCodes: [\"63\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[129.19694, 7.84182], [121.8109, 21.77688], [120.69238, 21.52331], [118.82252, 14.67191], [115.39742, 10.92666], [116.79524, 7.43869], [117.17735, 7.52841], [117.93857, 6.89845], [117.98544, 6.27477], [119.52945, 5.35672], [118.93936, 4.09009], [118.06469, 4.16638], [121.14448, 2.12444], [129.19694, 7.84182]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PK\", iso1A3: \"PAK\", iso1N3: \"586\", wikidata: \"Q843\", nameEn: \"Pakistan\", groups: [\"034\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"92\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[75.72737, 36.7529], [75.45562, 36.71971], [75.40481, 36.95382], [75.13839, 37.02622], [74.56453, 37.03023], [74.53739, 36.96224], [74.43389, 37.00977], [74.04856, 36.82648], [73.82685, 36.91421], [72.6323, 36.84601], [72.18135, 36.71838], [71.80267, 36.49924], [71.60491, 36.39429], [71.19505, 36.04134], [71.37969, 35.95865], [71.55273, 35.71483], [71.49917, 35.6267], [71.65435, 35.4479], [71.54294, 35.31037], [71.5541, 35.28776], [71.67495, 35.21262], [71.52938, 35.09023], [71.55273, 35.02615], [71.49917, 35.00478], [71.50329, 34.97328], [71.29472, 34.87728], [71.28356, 34.80882], [71.08718, 34.69034], [71.11602, 34.63047], [71.0089, 34.54568], [71.02401, 34.44835], [71.17662, 34.36769], [71.12815, 34.26619], [71.13078, 34.16503], [71.09453, 34.13524], [71.09307, 34.11961], [71.06933, 34.10564], [71.07345, 34.06242], [70.88119, 33.97933], [70.54336, 33.9463], [69.90203, 34.04194], [69.87307, 33.9689], [69.85671, 33.93719], [70.00503, 33.73528], [70.14236, 33.71701], [70.14785, 33.6553], [70.20141, 33.64387], [70.17062, 33.53535], [70.32775, 33.34496], [70.13686, 33.21064], [70.07369, 33.22557], [70.02563, 33.14282], [69.85259, 33.09451], [69.79766, 33.13247], [69.71526, 33.09911], [69.57656, 33.09911], [69.49004, 33.01509], [69.49854, 32.88843], [69.5436, 32.8768], [69.47082, 32.85834], [69.38018, 32.76601], [69.43649, 32.7302], [69.44747, 32.6678], [69.38155, 32.56601], [69.2868, 32.53938], [69.23599, 32.45946], [69.27932, 32.29119], [69.27032, 32.14141], [69.3225, 31.93186], [69.20577, 31.85957], [69.11514, 31.70782], [69.00939, 31.62249], [68.95995, 31.64822], [68.91078, 31.59687], [68.79997, 31.61665], [68.6956, 31.75687], [68.57475, 31.83158], [68.44222, 31.76446], [68.27605, 31.75863], [68.25614, 31.80357], [68.1655, 31.82691], [68.00071, 31.6564], [67.86887, 31.63536], [67.72056, 31.52304], [67.58323, 31.52772], [67.62374, 31.40473], [67.7748, 31.4188], [67.78854, 31.33203], [67.29964, 31.19586], [67.03323, 31.24519], [67.04147, 31.31561], [66.83273, 31.26867], [66.72561, 31.20526], [66.68166, 31.07597], [66.58175, 30.97532], [66.42645, 30.95309], [66.39194, 30.9408], [66.28413, 30.57001], [66.34869, 30.404], [66.23609, 30.06321], [66.36042, 29.9583], [66.24175, 29.85181], [65.04005, 29.53957], [64.62116, 29.58903], [64.19796, 29.50407], [64.12966, 29.39157], [63.5876, 29.50456], [62.47751, 29.40782], [60.87231, 29.86514], [61.31508, 29.38903], [61.53765, 29.00507], [61.65978, 28.77937], [61.93581, 28.55284], [62.40259, 28.42703], [62.59499, 28.24842], [62.79412, 28.28108], [62.7638, 28.02992], [62.84905, 27.47627], [62.79684, 27.34381], [62.80604, 27.22412], [63.19649, 27.25674], [63.32283, 27.14437], [63.25005, 27.08692], [63.25005, 26.84212], [63.18688, 26.83844], [63.1889, 26.65072], [62.77352, 26.64099], [62.31484, 26.528], [62.21304, 26.26601], [62.05117, 26.31647], [61.89391, 26.26251], [61.83831, 26.07249], [61.83968, 25.7538], [61.683, 25.66638], [61.6433, 25.27541], [61.46682, 24.57869], [68.11329, 23.53945], [68.20763, 23.85849], [68.39339, 23.96838], [68.74643, 23.97027], [68.7416, 24.31904], [68.90914, 24.33156], [68.97781, 24.26021], [69.07806, 24.29777], [69.19341, 24.25646], [69.29778, 24.28712], [69.59579, 24.29777], [69.73335, 24.17007], [70.03428, 24.172], [70.11712, 24.30915], [70.5667, 24.43787], [70.57906, 24.27774], [70.71502, 24.23517], [70.88393, 24.27398], [70.85784, 24.30903], [70.94985, 24.3791], [71.04461, 24.34657], [71.12838, 24.42662], [71.00341, 24.46038], [70.97594, 24.60904], [71.09405, 24.69017], [70.94002, 24.92843], [70.89148, 25.15064], [70.66695, 25.39314], [70.67382, 25.68186], [70.60378, 25.71898], [70.53649, 25.68928], [70.37444, 25.67443], [70.2687, 25.71156], [70.0985, 25.93238], [70.08193, 26.08094], [70.17532, 26.24118], [70.17532, 26.55362], [70.05584, 26.60398], [69.88555, 26.56836], [69.50904, 26.74892], [69.58519, 27.18109], [70.03136, 27.56627], [70.12502, 27.8057], [70.37307, 28.01208], [70.60927, 28.02178], [70.79054, 27.68423], [71.89921, 27.96035], [71.9244, 28.11555], [72.20329, 28.3869], [72.29495, 28.66367], [72.40402, 28.78283], [72.94272, 29.02487], [73.01337, 29.16422], [73.05886, 29.1878], [73.28094, 29.56646], [73.3962, 29.94707], [73.58665, 30.01848], [73.80299, 30.06969], [73.97225, 30.19829], [73.95736, 30.28466], [73.88993, 30.36305], [74.5616, 31.04153], [74.67971, 31.05479], [74.6852, 31.12771], [74.60006, 31.13711], [74.60281, 31.10419], [74.56023, 31.08303], [74.51629, 31.13829], [74.53223, 31.30321], [74.59773, 31.4136], [74.64713, 31.45605], [74.59319, 31.50197], [74.61517, 31.55698], [74.57498, 31.60382], [74.47771, 31.72227], [74.58907, 31.87824], [74.79919, 31.95983], [74.86236, 32.04485], [74.9269, 32.0658], [75.00793, 32.03786], [75.25649, 32.10187], [75.38046, 32.26836], [75.28259, 32.36556], [75.03265, 32.49538], [74.97634, 32.45367], [74.84725, 32.49075], [74.68362, 32.49298], [74.67431, 32.56676], [74.65251, 32.56416], [74.64424, 32.60985], [74.69542, 32.66792], [74.65345, 32.71225], [74.7113, 32.84219], [74.64675, 32.82604], [74.6289, 32.75561], [74.45312, 32.77755], [74.41467, 32.90563], [74.31227, 32.92795], [74.34875, 32.97823], [74.31854, 33.02891], [74.17571, 33.07495], [74.15374, 33.13477], [74.02144, 33.18908], [74.01366, 33.25199], [74.08782, 33.26232], [74.17983, 33.3679], [74.18121, 33.4745], [74.10115, 33.56392], [74.03576, 33.56718], [73.97367, 33.64061], [73.98968, 33.66155], [73.96423, 33.73071], [74.00891, 33.75437], [74.05898, 33.82089], [74.14001, 33.83002], [74.26086, 33.92237], [74.25262, 34.01577], [74.21554, 34.03853], [73.91341, 34.01235], [73.88732, 34.05105], [73.90677, 34.10504], [73.98208, 34.2522], [73.90517, 34.35317], [73.8475, 34.32935], [73.74862, 34.34183], [73.74999, 34.3781], [73.88732, 34.48911], [73.89419, 34.54568], [73.93951, 34.57169], [73.93401, 34.63386], [73.96423, 34.68244], [74.12897, 34.70073], [74.31239, 34.79626], [74.58083, 34.77386], [74.6663, 34.703], [75.01479, 34.64629], [75.38009, 34.55021], [75.75438, 34.51827], [76.04614, 34.67566], [76.15463, 34.6429], [76.47186, 34.78965], [76.67648, 34.76371], [76.74377, 34.84039], [76.74514, 34.92488], [76.87193, 34.96906], [76.99251, 34.93349], [77.11796, 35.05419], [76.93465, 35.39866], [76.85088, 35.39754], [76.75475, 35.52617], [76.77323, 35.66062], [76.50961, 35.8908], [76.33453, 35.84296], [76.14913, 35.82848], [76.15325, 35.9264], [75.93028, 36.13136], [76.00906, 36.17511], [76.0324, 36.41198], [75.92391, 36.56986], [75.72737, 36.7529]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PL\", iso1A3: \"POL\", iso1N3: \"616\", wikidata: \"Q36\", nameEn: \"Poland\", groups: [\"EU\", \"151\", \"150\", \"UN\"], callingCodes: [\"48\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[18.57853, 55.25302], [14.20811, 54.12784], [14.22634, 53.9291], [14.20647, 53.91671], [14.18544, 53.91258], [14.20823, 53.90776], [14.21323, 53.8664], [14.27249, 53.74464], [14.26782, 53.69866], [14.2836, 53.67721], [14.27133, 53.66613], [14.28477, 53.65955], [14.2853, 53.63392], [14.31904, 53.61581], [14.30416, 53.55499], [14.3273, 53.50587], [14.35209, 53.49506], [14.4215, 53.27724], [14.44133, 53.27427], [14.45125, 53.26241], [14.40662, 53.21098], [14.37853, 53.20405], [14.36696, 53.16444], [14.38679, 53.13669], [14.35044, 53.05829], [14.25954, 53.00264], [14.14056, 52.95786], [14.15873, 52.87715], [14.12256, 52.84311], [14.13806, 52.82392], [14.22071, 52.81175], [14.61073, 52.59847], [14.6289, 52.57136], [14.60081, 52.53116], [14.63056, 52.48993], [14.54423, 52.42568], [14.55228, 52.35264], [14.56378, 52.33838], [14.58149, 52.28007], [14.70139, 52.25038], [14.71319, 52.22144], [14.68344, 52.19612], [14.70616, 52.16927], [14.67683, 52.13936], [14.6917, 52.10283], [14.72971, 52.09167], [14.76026, 52.06624], [14.71339, 52.00337], [14.70488, 51.97679], [14.7139, 51.95643], [14.71836, 51.95606], [14.72163, 51.95188], [14.7177, 51.94048], [14.70601, 51.92944], [14.6933, 51.9044], [14.6588, 51.88359], [14.59089, 51.83302], [14.60493, 51.80473], [14.64625, 51.79472], [14.66386, 51.73282], [14.69065, 51.70842], [14.75392, 51.67445], [14.75759, 51.62318], [14.7727, 51.61263], [14.71125, 51.56209], [14.73047, 51.54606], [14.72652, 51.53902], [14.73219, 51.52922], [14.94749, 51.47155], [14.9652, 51.44793], [14.96899, 51.38367], [14.98008, 51.33449], [15.04288, 51.28387], [15.01242, 51.21285], [15.0047, 51.16874], [14.99311, 51.16249], [14.99414, 51.15813], [15.00083, 51.14974], [14.99646, 51.14365], [14.99079, 51.14284], [14.99689, 51.12205], [14.98229, 51.11354], [14.97938, 51.07742], [14.95529, 51.04552], [14.92942, 50.99744], [14.89252, 50.94999], [14.89681, 50.9422], [14.81664, 50.88148], [14.82803, 50.86966], [14.99852, 50.86817], [15.01088, 50.97984], [14.96419, 50.99108], [15.02433, 51.0242], [15.03895, 51.0123], [15.06218, 51.02269], [15.10152, 51.01095], [15.11937, 50.99021], [15.16744, 51.01959], [15.1743, 50.9833], [15.2361, 50.99886], [15.27043, 50.97724], [15.2773, 50.8907], [15.36656, 50.83956], [15.3803, 50.77187], [15.43798, 50.80833], [15.73186, 50.73885], [15.81683, 50.75666], [15.87331, 50.67188], [15.97219, 50.69799], [16.0175, 50.63009], [15.98317, 50.61528], [16.02437, 50.60046], [16.10265, 50.66405], [16.20839, 50.63096], [16.23174, 50.67101], [16.33611, 50.66579], [16.44597, 50.58041], [16.34572, 50.49575], [16.31413, 50.50274], [16.19526, 50.43291], [16.21585, 50.40627], [16.22821, 50.41054], [16.28118, 50.36891], [16.30289, 50.38292], [16.36495, 50.37679], [16.3622, 50.34875], [16.39379, 50.3207], [16.42674, 50.32509], [16.56407, 50.21009], [16.55446, 50.16613], [16.63137, 50.1142], [16.7014, 50.09659], [16.8456, 50.20834], [16.98018, 50.24172], [17.00353, 50.21449], [17.02825, 50.23118], [16.99803, 50.25753], [17.02138, 50.27772], [16.99803, 50.30316], [16.94448, 50.31281], [16.90877, 50.38642], [16.85933, 50.41093], [16.89229, 50.45117], [17.1224, 50.39494], [17.14498, 50.38117], [17.19579, 50.38817], [17.19991, 50.3654], [17.27681, 50.32246], [17.34273, 50.32947], [17.34548, 50.2628], [17.3702, 50.28123], [17.58889, 50.27837], [17.67764, 50.28977], [17.69292, 50.32859], [17.74648, 50.29966], [17.72176, 50.25665], [17.76296, 50.23382], [17.70528, 50.18812], [17.59404, 50.16437], [17.66683, 50.10275], [17.6888, 50.12037], [17.7506, 50.07896], [17.77669, 50.02253], [17.86886, 49.97452], [18.00191, 50.01723], [18.04585, 50.01194], [18.04585, 50.03311], [18.00396, 50.04954], [18.03212, 50.06574], [18.07898, 50.04535], [18.10628, 50.00223], [18.20241, 49.99958], [18.21752, 49.97309], [18.27107, 49.96779], [18.27794, 49.93863], [18.31914, 49.91565], [18.33278, 49.92415], [18.33562, 49.94747], [18.41604, 49.93498], [18.53423, 49.89906], [18.54495, 49.9079], [18.54299, 49.92537], [18.57697, 49.91565], [18.57045, 49.87849], [18.60341, 49.86256], [18.57183, 49.83334], [18.61278, 49.7618], [18.61368, 49.75426], [18.62645, 49.75002], [18.62943, 49.74603], [18.62676, 49.71983], [18.69817, 49.70473], [18.72838, 49.68163], [18.80479, 49.6815], [18.84786, 49.5446], [18.84521, 49.51672], [18.94536, 49.52143], [18.97283, 49.49914], [18.9742, 49.39557], [19.18019, 49.41165], [19.25435, 49.53391], [19.36009, 49.53747], [19.37795, 49.574], [19.45348, 49.61583], [19.52626, 49.57311], [19.53313, 49.52856], [19.57845, 49.46077], [19.64162, 49.45184], [19.6375, 49.40897], [19.72127, 49.39288], [19.78581, 49.41701], [19.82237, 49.27806], [19.75286, 49.20751], [19.86409, 49.19316], [19.90529, 49.23532], [19.98494, 49.22904], [20.08238, 49.1813], [20.13738, 49.31685], [20.21977, 49.35265], [20.31453, 49.34817], [20.31728, 49.39914], [20.39939, 49.3896], [20.46422, 49.41612], [20.5631, 49.375], [20.61666, 49.41791], [20.72274, 49.41813], [20.77971, 49.35383], [20.9229, 49.29626], [20.98733, 49.30774], [21.09799, 49.37176], [21.041, 49.41791], [21.12477, 49.43666], [21.19756, 49.4054], [21.27858, 49.45988], [21.43376, 49.41433], [21.62328, 49.4447], [21.77983, 49.35443], [21.82927, 49.39467], [21.96385, 49.3437], [22.04427, 49.22136], [22.56155, 49.08865], [22.89122, 49.00725], [22.86336, 49.10513], [22.72009, 49.20288], [22.748, 49.32759], [22.69444, 49.49378], [22.64534, 49.53094], [22.78304, 49.65543], [22.80261, 49.69098], [22.83179, 49.69875], [22.99329, 49.84249], [23.28221, 50.0957], [23.67635, 50.33385], [23.71382, 50.38248], [23.79445, 50.40481], [23.99563, 50.41289], [24.03668, 50.44507], [24.07048, 50.5071], [24.0996, 50.60752], [24.0595, 50.71625], [23.95925, 50.79271], [23.99254, 50.83847], [24.0952, 50.83262], [24.14524, 50.86128], [24.04576, 50.90196], [23.92217, 51.00836], [23.90376, 51.07697], [23.80678, 51.18405], [23.63858, 51.32182], [23.69905, 51.40871], [23.62751, 51.50512], [23.56236, 51.53673], [23.57053, 51.55938], [23.53198, 51.74298], [23.62691, 51.78208], [23.61523, 51.92066], [23.68733, 51.9906], [23.64066, 52.07626], [23.61, 52.11264], [23.54314, 52.12148], [23.47859, 52.18215], [23.20071, 52.22848], [23.18196, 52.28812], [23.34141, 52.44845], [23.45112, 52.53774], [23.58296, 52.59868], [23.73615, 52.6149], [23.93763, 52.71332], [23.91805, 52.94016], [23.94689, 52.95919], [23.92184, 53.02079], [23.87548, 53.0831], [23.91393, 53.16469], [23.85657, 53.22923], [23.81995, 53.24131], [23.62004, 53.60942], [23.51284, 53.95052], [23.48261, 53.98855], [23.52702, 54.04622], [23.49196, 54.14764], [23.45223, 54.17775], [23.42418, 54.17911], [23.39525, 54.21672], [23.3494, 54.25155], [23.24656, 54.25701], [23.15938, 54.29894], [23.15526, 54.31076], [23.13905, 54.31567], [23.104, 54.29794], [23.04323, 54.31567], [23.05726, 54.34565], [22.99649, 54.35927], [23.00584, 54.38514], [22.83756, 54.40827], [22.79705, 54.36264], [21.41123, 54.32395], [20.63871, 54.3706], [19.8038, 54.44203], [19.64312, 54.45423], [18.57853, 55.25302]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PM\", iso1A3: \"SPM\", iso1N3: \"666\", wikidata: \"Q34617\", nameEn: \"Saint Pierre and Miquelon\", country: \"FR\", groups: [\"EU\", \"Q1451600\", \"021\", \"003\", \"019\", \"UN\"], callingCodes: [\"508\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-56.72993, 46.65575], [-55.90758, 46.6223], [-56.27503, 47.39728], [-56.72993, 46.65575]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PN\", iso1A3: \"PCN\", iso1N3: \"612\", wikidata: \"Q35672\", nameEn: \"Pitcairn Islands\", country: \"GB\", groups: [\"BOTS\", \"061\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"64\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-133.59543, -28.4709], [-122.0366, -24.55017], [-133.61511, -21.93325], [-133.59543, -28.4709]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PR\", iso1A3: \"PRI\", iso1N3: \"630\", wikidata: \"Q1183\", nameEn: \"Puerto Rico\", aliases: [\"US-PR\"], country: \"US\", groups: [\"Q1352230\", \"029\", \"003\", \"419\", \"019\", \"UN\"], roadSpeedUnit: \"mph\", callingCodes: [\"1 787\", \"1 939\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-65.27974, 17.56928], [-65.02435, 18.73231], [-67.99519, 18.97186], [-68.23894, 17.84663], [-65.27974, 17.56928]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PS\", iso1A3: \"PSE\", iso1N3: \"275\", wikidata: \"Q219060\", nameEn: \"Palestine\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"PT\", iso1A3: \"PRT\", iso1N3: \"620\", wikidata: \"Q45\", nameEn: \"Portugal\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"PW\", iso1A3: \"PLW\", iso1N3: \"585\", wikidata: \"Q695\", nameEn: \"Palau\", groups: [\"057\", \"009\", \"UN\"], roadSpeedUnit: \"mph\", callingCodes: [\"680\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[128.97621, 3.08804], [136.39296, 1.54187], [136.04605, 12.45908], [128.97621, 3.08804]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"PY\", iso1A3: \"PRY\", iso1N3: \"600\", wikidata: \"Q733\", nameEn: \"Paraguay\", groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"595\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-58.16225, -20.16193], [-58.23216, -19.80058], [-59.06965, -19.29148], [-60.00638, -19.2981], [-61.73723, -19.63958], [-61.93912, -20.10053], [-62.26883, -20.55311], [-62.2757, -21.06657], [-62.64455, -22.25091], [-62.51761, -22.37684], [-62.22768, -22.55807], [-61.9756, -23.0507], [-61.0782, -23.62932], [-60.99754, -23.80934], [-60.28163, -24.04436], [-60.03367, -24.00701], [-59.45482, -24.34787], [-59.33886, -24.49935], [-58.33055, -24.97099], [-58.25492, -24.92528], [-57.80821, -25.13863], [-57.57431, -25.47269], [-57.87176, -25.93604], [-58.1188, -26.16704], [-58.3198, -26.83443], [-58.65321, -27.14028], [-58.59549, -27.29973], [-58.04205, -27.2387], [-56.85337, -27.5165], [-56.18313, -27.29851], [-55.89195, -27.3467], [-55.74475, -27.44485], [-55.59094, -27.32444], [-55.62322, -27.1941], [-55.39611, -26.97679], [-55.25243, -26.93808], [-55.16948, -26.96068], [-55.06351, -26.80195], [-55.00584, -26.78754], [-54.80868, -26.55669], [-54.70732, -26.45099], [-54.69333, -26.37705], [-54.67359, -25.98607], [-54.60664, -25.9691], [-54.62063, -25.91213], [-54.59398, -25.59224], [-54.59509, -25.53696], [-54.60196, -25.48397], [-54.62033, -25.46026], [-54.4423, -25.13381], [-54.28207, -24.07305], [-54.32807, -24.01865], [-54.6238, -23.83078], [-55.02691, -23.97317], [-55.0518, -23.98666], [-55.12292, -23.99669], [-55.41784, -23.9657], [-55.44117, -23.9185], [-55.43585, -23.87157], [-55.5555, -23.28237], [-55.52288, -23.2595], [-55.5446, -23.22811], [-55.63849, -22.95122], [-55.62493, -22.62765], [-55.68742, -22.58407], [-55.6986, -22.56268], [-55.72366, -22.5519], [-55.741, -22.52018], [-55.74941, -22.46436], [-55.8331, -22.29008], [-56.23206, -22.25347], [-56.45893, -22.08072], [-56.5212, -22.11556], [-56.6508, -22.28387], [-57.98625, -22.09157], [-57.94642, -21.73799], [-57.88239, -21.6868], [-57.93492, -21.65505], [-57.84536, -20.93155], [-58.16225, -20.16193]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"QA\", iso1A3: \"QAT\", iso1N3: \"634\", wikidata: \"Q846\", nameEn: \"Qatar\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"974\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[50.92992, 24.54396], [51.09638, 24.46907], [51.29972, 24.50747], [51.39468, 24.62785], [51.58834, 24.66608], [51.83108, 24.71675], [51.83682, 26.70231], [50.93865, 26.30758], [50.81266, 25.88946], [50.86149, 25.6965], [50.7801, 25.595], [50.80824, 25.54641], [50.57069, 25.57887], [50.8133, 24.74049], [50.92992, 24.54396]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"RE\", iso1A3: \"REU\", iso1N3: \"638\", wikidata: \"Q17070\", nameEn: \"R\\xE9union\", country: \"FR\", groups: [\"Q3320166\", \"EU\", \"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"262\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[53.37984, -21.23941], [56.73473, -21.9174], [56.62373, -20.2711], [53.37984, -21.23941]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"RO\", iso1A3: \"ROU\", iso1N3: \"642\", wikidata: \"Q218\", nameEn: \"Romania\", groups: [\"EU\", \"151\", \"150\", \"UN\"], callingCodes: [\"40\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[27.15622, 47.98538], [27.02985, 48.09083], [27.04118, 48.12522], [26.96119, 48.13003], [26.98042, 48.15752], [26.94265, 48.1969], [26.87708, 48.19919], [26.81161, 48.25049], [26.62823, 48.25804], [26.55202, 48.22445], [26.33504, 48.18418], [26.17711, 47.99246], [26.05901, 47.9897], [25.77723, 47.93919], [25.63878, 47.94924], [25.23778, 47.89403], [25.11144, 47.75203], [24.88896, 47.7234], [24.81893, 47.82031], [24.70632, 47.84428], [24.61994, 47.95062], [24.43578, 47.97131], [24.34926, 47.9244], [24.22566, 47.90231], [24.11281, 47.91487], [24.06466, 47.95317], [24.02999, 47.95087], [24.00801, 47.968], [23.98553, 47.96076], [23.96337, 47.96672], [23.94192, 47.94868], [23.89352, 47.94512], [23.8602, 47.9329], [23.80904, 47.98142], [23.75188, 47.99705], [23.66262, 47.98786], [23.63894, 48.00293], [23.5653, 48.00499], [23.52803, 48.01818], [23.4979, 47.96858], [23.33577, 48.0237], [23.27397, 48.08245], [23.15999, 48.12188], [23.1133, 48.08061], [23.08858, 48.00716], [23.0158, 47.99338], [22.92241, 48.02002], [22.94301, 47.96672], [22.89849, 47.95851], [22.77991, 47.87211], [22.76617, 47.8417], [22.67247, 47.7871], [22.46559, 47.76583], [22.41979, 47.7391], [22.31816, 47.76126], [22.00917, 47.50492], [22.03389, 47.42508], [22.01055, 47.37767], [21.94463, 47.38046], [21.78395, 47.11104], [21.648, 47.03902], [21.68645, 46.99595], [21.59581, 46.91628], [21.59307, 46.86935], [21.52028, 46.84118], [21.48935, 46.7577], [21.5151, 46.72147], [21.43926, 46.65109], [21.33214, 46.63035], [21.26929, 46.4993], [21.28061, 46.44941], [21.16872, 46.30118], [21.06572, 46.24897], [20.86797, 46.28884], [20.74574, 46.25467], [20.76085, 46.21002], [20.63863, 46.12728], [20.49718, 46.18721], [20.45377, 46.14405], [20.35573, 46.16629], [20.28324, 46.1438], [20.26068, 46.12332], [20.35862, 45.99356], [20.54818, 45.89939], [20.65645, 45.82801], [20.70069, 45.7493], [20.77416, 45.75601], [20.78446, 45.78522], [20.82364, 45.77738], [20.80361, 45.65875], [20.76798, 45.60969], [20.83321, 45.53567], [20.77217, 45.49788], [20.86026, 45.47295], [20.87948, 45.42743], [21.09894, 45.30144], [21.17612, 45.32566], [21.20392, 45.2677], [21.29398, 45.24148], [21.48278, 45.19557], [21.51299, 45.15345], [21.4505, 45.04294], [21.35855, 45.01941], [21.54938, 44.9327], [21.56328, 44.89502], [21.48202, 44.87199], [21.44013, 44.87613], [21.35643, 44.86364], [21.38802, 44.78133], [21.55007, 44.77304], [21.60019, 44.75208], [21.61942, 44.67059], [21.67504, 44.67107], [21.71692, 44.65349], [21.7795, 44.66165], [21.99364, 44.63395], [22.08016, 44.49844], [22.13234, 44.47444], [22.18315, 44.48179], [22.30844, 44.6619], [22.45301, 44.7194], [22.61917, 44.61489], [22.69196, 44.61587], [22.76749, 44.54446], [22.70981, 44.51852], [22.61368, 44.55719], [22.56493, 44.53419], [22.54021, 44.47836], [22.45436, 44.47258], [22.56012, 44.30712], [22.68166, 44.28206], [22.67173, 44.21564], [23.04988, 44.07694], [23.01674, 44.01946], [22.87873, 43.9844], [22.83753, 43.88055], [22.85314, 43.84452], [23.05288, 43.79494], [23.26772, 43.84843], [23.4507, 43.84936], [23.61687, 43.79289], [23.73978, 43.80627], [24.18149, 43.68218], [24.35364, 43.70211], [24.50264, 43.76314], [24.62281, 43.74082], [24.73542, 43.68523], [24.96682, 43.72693], [25.10718, 43.6831], [25.17144, 43.70261], [25.39528, 43.61866], [25.72792, 43.69263], [25.94911, 43.85745], [26.05584, 43.90925], [26.10115, 43.96908], [26.38764, 44.04356], [26.62712, 44.05698], [26.95141, 44.13555], [27.26845, 44.12602], [27.39757, 44.0141], [27.60834, 44.01206], [27.64542, 44.04958], [27.73468, 43.95326], [27.92008, 44.00761], [27.99558, 43.84193], [28.23293, 43.76], [29.24336, 43.70874], [30.04414, 45.08461], [29.69272, 45.19227], [29.65428, 45.25629], [29.68175, 45.26885], [29.59798, 45.38857], [29.42632, 45.44545], [29.24779, 45.43388], [28.96077, 45.33164], [28.94292, 45.28045], [28.81383, 45.3384], [28.78911, 45.24179], [28.71358, 45.22631], [28.5735, 45.24759], [28.34554, 45.32102], [28.28504, 45.43907], [28.21139, 45.46895], [28.18741, 45.47358], [28.08927, 45.6051], [28.16568, 45.6421], [28.13111, 45.92819], [28.08612, 46.01105], [28.13684, 46.18099], [28.10937, 46.22852], [28.19864, 46.31869], [28.18902, 46.35283], [28.25769, 46.43334], [28.22281, 46.50481], [28.24808, 46.64305], [28.12173, 46.82283], [28.09095, 46.97621], [27.81892, 47.1381], [27.73172, 47.29248], [27.68706, 47.28962], [27.60263, 47.32507], [27.55731, 47.46637], [27.47942, 47.48113], [27.3979, 47.59473], [27.32202, 47.64009], [27.25519, 47.71366], [27.29069, 47.73722], [27.1618, 47.92391], [27.15622, 47.98538]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"RS\", iso1A3: \"SRB\", iso1N3: \"688\", wikidata: \"Q403\", nameEn: \"Serbia\", groups: [\"039\", \"150\", \"UN\"], callingCodes: [\"381\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[19.66007, 46.19005], [19.56113, 46.16824], [19.52473, 46.1171], [19.28826, 45.99694], [19.14543, 45.9998], [19.10388, 46.04015], [19.0791, 45.96458], [19.01284, 45.96529], [18.99712, 45.93537], [18.81394, 45.91329], [18.85783, 45.85493], [18.90305, 45.71863], [18.96691, 45.66731], [18.88776, 45.57253], [18.94562, 45.53712], [19.07471, 45.53086], [19.08364, 45.48804], [18.99918, 45.49333], [18.97446, 45.37528], [19.10774, 45.29547], [19.28208, 45.23813], [19.41941, 45.23475], [19.43589, 45.17137], [19.19144, 45.17863], [19.14063, 45.12972], [19.07952, 45.14668], [19.1011, 45.01191], [19.05205, 44.97692], [19.15573, 44.95409], [19.06853, 44.89915], [19.02871, 44.92541], [18.98957, 44.90645], [19.01994, 44.85493], [19.18183, 44.92055], [19.36722, 44.88164], [19.32543, 44.74058], [19.26388, 44.65412], [19.16699, 44.52197], [19.13369, 44.52521], [19.12278, 44.50132], [19.14837, 44.45253], [19.14681, 44.41463], [19.11785, 44.40313], [19.10749, 44.39421], [19.10704, 44.38249], [19.10365, 44.37795], [19.10298, 44.36924], [19.11865, 44.36712], [19.1083, 44.3558], [19.11547, 44.34218], [19.13556, 44.338], [19.13332, 44.31492], [19.16741, 44.28648], [19.18328, 44.28383], [19.20508, 44.2917], [19.23306, 44.26097], [19.26945, 44.26957], [19.32464, 44.27185], [19.34773, 44.23244], [19.3588, 44.18353], [19.40927, 44.16722], [19.43905, 44.13088], [19.47338, 44.15034], [19.48386, 44.14332], [19.47321, 44.1193], [19.51167, 44.08158], [19.55999, 44.06894], [19.57467, 44.04716], [19.61991, 44.05254], [19.61836, 44.01464], [19.56498, 43.99922], [19.52515, 43.95573], [19.38439, 43.96611], [19.24363, 44.01502], [19.23465, 43.98764], [19.3986, 43.79668], [19.5176, 43.71403], [19.50455, 43.58385], [19.42696, 43.57987], [19.41941, 43.54056], [19.36653, 43.60921], [19.33426, 43.58833], [19.2553, 43.5938], [19.24774, 43.53061], [19.22807, 43.5264], [19.22229, 43.47926], [19.44315, 43.38846], [19.48171, 43.32644], [19.52962, 43.31623], [19.54598, 43.25158], [19.62661, 43.2286], [19.64063, 43.19027], [19.76918, 43.16044], [19.79255, 43.11951], [19.92576, 43.08539], [19.96549, 43.11098], [19.98887, 43.0538], [20.04729, 43.02732], [20.05431, 42.99571], [20.12325, 42.96237], [20.14896, 42.99058], [20.16415, 42.97177], [20.34528, 42.90676], [20.35692, 42.8335], [20.40594, 42.84853], [20.43734, 42.83157], [20.53484, 42.8885], [20.48692, 42.93208], [20.59929, 43.01067], [20.64557, 43.00826], [20.69515, 43.09641], [20.59929, 43.20492], [20.68688, 43.21335], [20.73811, 43.25068], [20.82145, 43.26769], [20.88685, 43.21697], [20.83727, 43.17842], [20.96287, 43.12416], [21.00749, 43.13984], [21.05378, 43.10707], [21.08952, 43.13471], [21.14465, 43.11089], [21.16734, 42.99694], [21.2041, 43.02277], [21.23877, 43.00848], [21.23534, 42.95523], [21.2719, 42.8994], [21.32974, 42.90424], [21.36941, 42.87397], [21.44047, 42.87276], [21.39045, 42.74888], [21.47498, 42.74695], [21.59154, 42.72643], [21.58755, 42.70418], [21.6626, 42.67813], [21.75025, 42.70125], [21.79413, 42.65923], [21.75672, 42.62695], [21.7327, 42.55041], [21.70522, 42.54176], [21.7035, 42.51899], [21.62556, 42.45106], [21.64209, 42.41081], [21.62887, 42.37664], [21.59029, 42.38042], [21.57021, 42.3647], [21.53467, 42.36809], [21.5264, 42.33634], [21.56772, 42.30946], [21.58992, 42.25915], [21.70111, 42.23789], [21.77176, 42.2648], [21.84654, 42.3247], [21.91595, 42.30392], [21.94405, 42.34669], [22.02908, 42.29848], [22.16384, 42.32103], [22.29605, 42.37477], [22.29275, 42.34913], [22.34773, 42.31725], [22.45919, 42.33822], [22.47498, 42.3915], [22.51961, 42.3991], [22.55669, 42.50144], [22.43983, 42.56851], [22.4997, 42.74144], [22.43309, 42.82057], [22.54302, 42.87774], [22.74826, 42.88701], [22.78397, 42.98253], [22.89521, 43.03625], [22.98104, 43.11199], [23.00806, 43.19279], [22.89727, 43.22417], [22.82036, 43.33665], [22.53397, 43.47225], [22.47582, 43.6558], [22.41043, 43.69566], [22.35558, 43.81281], [22.41449, 44.00514], [22.61688, 44.06534], [22.61711, 44.16938], [22.67173, 44.21564], [22.68166, 44.28206], [22.56012, 44.30712], [22.45436, 44.47258], [22.54021, 44.47836], [22.56493, 44.53419], [22.61368, 44.55719], [22.70981, 44.51852], [22.76749, 44.54446], [22.69196, 44.61587], [22.61917, 44.61489], [22.45301, 44.7194], [22.30844, 44.6619], [22.18315, 44.48179], [22.13234, 44.47444], [22.08016, 44.49844], [21.99364, 44.63395], [21.7795, 44.66165], [21.71692, 44.65349], [21.67504, 44.67107], [21.61942, 44.67059], [21.60019, 44.75208], [21.55007, 44.77304], [21.38802, 44.78133], [21.35643, 44.86364], [21.44013, 44.87613], [21.48202, 44.87199], [21.56328, 44.89502], [21.54938, 44.9327], [21.35855, 45.01941], [21.4505, 45.04294], [21.51299, 45.15345], [21.48278, 45.19557], [21.29398, 45.24148], [21.20392, 45.2677], [21.17612, 45.32566], [21.09894, 45.30144], [20.87948, 45.42743], [20.86026, 45.47295], [20.77217, 45.49788], [20.83321, 45.53567], [20.76798, 45.60969], [20.80361, 45.65875], [20.82364, 45.77738], [20.78446, 45.78522], [20.77416, 45.75601], [20.70069, 45.7493], [20.65645, 45.82801], [20.54818, 45.89939], [20.35862, 45.99356], [20.26068, 46.12332], [20.09713, 46.17315], [20.03533, 46.14509], [20.01816, 46.17696], [19.93508, 46.17553], [19.81491, 46.1313], [19.66007, 46.19005]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"RU\", iso1A3: \"RUS\", iso1N3: \"643\", wikidata: \"Q159\", nameEn: \"Russia\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"RW\", iso1A3: \"RWA\", iso1N3: \"646\", wikidata: \"Q1037\", nameEn: \"Rwanda\", groups: [\"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"250\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[30.47194, -1.0555], [30.35212, -1.06896], [30.16369, -1.34303], [29.912, -1.48269], [29.82657, -1.31187], [29.59061, -1.39016], [29.53062, -1.40499], [29.45038, -1.5054], [29.36322, -1.50887], [29.24323, -1.66826], [29.24458, -1.69663], [29.11847, -1.90576], [29.17562, -2.12278], [29.105, -2.27043], [29.00051, -2.29001], [28.95642, -2.37321], [28.89601, -2.37321], [28.86826, -2.41888], [28.86846, -2.44866], [28.89132, -2.47557], [28.89342, -2.49017], [28.88846, -2.50493], [28.87497, -2.50887], [28.86209, -2.5231], [28.86193, -2.53185], [28.87943, -2.55165], [28.89288, -2.55848], [28.90226, -2.62385], [28.89793, -2.66111], [28.94346, -2.69124], [29.00357, -2.70596], [29.04081, -2.7416], [29.0562, -2.58632], [29.32234, -2.6483], [29.36805, -2.82933], [29.88237, -2.75105], [29.95911, -2.33348], [30.14034, -2.43626], [30.42933, -2.31064], [30.54501, -2.41404], [30.83915, -2.35795], [30.89303, -2.08223], [30.80802, -1.91477], [30.84079, -1.64652], [30.71974, -1.43244], [30.57123, -1.33264], [30.50889, -1.16412], [30.45116, -1.10641], [30.47194, -1.0555]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SA\", iso1A3: \"SAU\", iso1N3: \"682\", wikidata: \"Q851\", nameEn: \"Saudi Arabia\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"966\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[40.01521, 32.05667], [39.29903, 32.23259], [38.99233, 31.99721], [36.99791, 31.50081], [37.99354, 30.49998], [37.66395, 30.33245], [37.4971, 29.99949], [36.75083, 29.86903], [36.50005, 29.49696], [36.07081, 29.18469], [34.8812, 29.36878], [34.4454, 27.91479], [37.8565, 22.00903], [39.63762, 18.37348], [40.99158, 15.81743], [42.15205, 16.40211], [42.76801, 16.40371], [42.94625, 16.39721], [42.94351, 16.49467], [42.97215, 16.51093], [43.11601, 16.53166], [43.15274, 16.67248], [43.22066, 16.65179], [43.21325, 16.74416], [43.25857, 16.75304], [43.26303, 16.79479], [43.24801, 16.80613], [43.22956, 16.80613], [43.22012, 16.83932], [43.18338, 16.84852], [43.1398, 16.90696], [43.19328, 16.94703], [43.1813, 16.98438], [43.18233, 17.02673], [43.23967, 17.03428], [43.17787, 17.14717], [43.20156, 17.25901], [43.32653, 17.31179], [43.22533, 17.38343], [43.29185, 17.53224], [43.43005, 17.56148], [43.70631, 17.35762], [44.50126, 17.47475], [46.31018, 17.20464], [46.76494, 17.29151], [47.00571, 16.94765], [47.48245, 17.10808], [47.58351, 17.50366], [48.19996, 18.20584], [49.04884, 18.59899], [52.00311, 19.00083], [54.99756, 20.00083], [55.66469, 21.99658], [55.2137, 22.71065], [55.13599, 22.63334], [52.56622, 22.94341], [51.59617, 24.12041], [51.58871, 24.27256], [51.41644, 24.39615], [51.58834, 24.66608], [51.39468, 24.62785], [51.29972, 24.50747], [51.09638, 24.46907], [50.92992, 24.54396], [50.8133, 24.74049], [50.57069, 25.57887], [50.302, 25.87592], [50.26923, 26.08243], [50.38162, 26.53976], [50.71771, 26.73086], [50.37726, 27.89227], [49.98877, 27.87827], [49.00421, 28.81495], [48.42991, 28.53628], [47.70561, 28.5221], [47.59863, 28.66798], [47.58376, 28.83382], [47.46202, 29.0014], [46.5527, 29.10283], [46.42415, 29.05947], [44.72255, 29.19736], [42.97796, 30.48295], [42.97601, 30.72204], [40.01521, 32.05667]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SB\", iso1A3: \"SLB\", iso1N3: \"090\", wikidata: \"Q685\", nameEn: \"Solomon Islands\", groups: [\"054\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"677\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[172.71443, -12.01327], [160.43769, -4.17974], [156.03296, -6.55528], [156.03993, -6.65703], [155.92557, -6.84664], [155.69784, -6.92661], [155.60735, -6.92266], [154.74815, -7.33315], [156.73836, -14.50464], [172.71443, -12.01327]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SC\", iso1A3: \"SYC\", iso1N3: \"690\", wikidata: \"Q1042\", nameEn: \"Seychelles\", groups: [\"014\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"248\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[43.75112, -10.38913], [54.83239, -10.93575], [66.3222, 5.65313], [43.75112, -10.38913]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SD\", iso1A3: \"SDN\", iso1N3: \"729\", wikidata: \"Q1049\", nameEn: \"Sudan\", groups: [\"015\", \"002\", \"UN\"], callingCodes: [\"249\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[37.8565, 22.00903], [34.0765, 22.00501], [33.99686, 21.76784], [33.57251, 21.72406], [33.17563, 22.00405], [24.99885, 21.99535], [24.99794, 19.99661], [23.99715, 20.00038], [23.99539, 19.49944], [23.99997, 15.69575], [23.62785, 15.7804], [23.38812, 15.69649], [23.10792, 15.71297], [22.93201, 15.55107], [22.92579, 15.47007], [22.99584, 15.40105], [22.99584, 15.22989], [22.66115, 14.86308], [22.70474, 14.69149], [22.38562, 14.58907], [22.44944, 14.24986], [22.55997, 14.23024], [22.5553, 14.11704], [22.22995, 13.96754], [22.08674, 13.77863], [22.29689, 13.3731], [22.1599, 13.19281], [22.02914, 13.13976], [21.94819, 13.05637], [21.81432, 12.81362], [21.89371, 12.68001], [21.98711, 12.63292], [22.15679, 12.66634], [22.22684, 12.74682], [22.46345, 12.61925], [22.38873, 12.45514], [22.50548, 12.16769], [22.48369, 12.02766], [22.64092, 12.07485], [22.54907, 11.64372], [22.7997, 11.40424], [22.93124, 11.41645], [22.97249, 11.21955], [22.87758, 10.91915], [23.02221, 10.69235], [23.3128, 10.45214], [23.67164, 9.86923], [23.69155, 9.67566], [24.09319, 9.66572], [24.12744, 9.73784], [24.49389, 9.79962], [24.84653, 9.80643], [24.97739, 9.9081], [25.05688, 10.06776], [25.0918, 10.33718], [25.78141, 10.42599], [25.93163, 10.38159], [25.93241, 10.17941], [26.21338, 9.91545], [26.35815, 9.57946], [26.70685, 9.48735], [27.14427, 9.62858], [27.90704, 9.61323], [28.99983, 9.67155], [29.06988, 9.74826], [29.53844, 9.75133], [29.54, 10.07949], [29.94629, 10.29245], [30.00389, 10.28633], [30.53005, 9.95992], [30.82893, 9.71451], [30.84605, 9.7498], [31.28504, 9.75287], [31.77539, 10.28939], [31.99177, 10.65065], [32.46967, 11.04662], [32.39358, 11.18207], [32.39578, 11.70208], [32.10079, 11.95203], [32.73921, 11.95203], [32.73921, 12.22757], [33.25876, 12.22111], [33.13988, 11.43248], [33.26977, 10.83632], [33.24645, 10.77913], [33.52294, 10.64382], [33.66604, 10.44254], [33.80913, 10.32994], [33.90159, 10.17179], [33.96984, 10.15446], [33.99185, 9.99623], [33.96323, 9.80972], [33.9082, 9.762], [33.87958, 9.49937], [34.10229, 9.50238], [34.08717, 9.55243], [34.13186, 9.7492], [34.20484, 9.9033], [34.22718, 10.02506], [34.32102, 10.11599], [34.34783, 10.23914], [34.2823, 10.53508], [34.4372, 10.781], [34.59062, 10.89072], [34.77383, 10.74588], [34.77532, 10.69027], [34.86618, 10.74588], [34.86916, 10.78832], [34.97491, 10.86147], [34.97789, 10.91559], [34.93172, 10.95946], [35.01215, 11.19626], [34.95704, 11.24448], [35.09556, 11.56278], [35.05832, 11.71158], [35.11492, 11.85156], [35.24302, 11.91132], [35.70476, 12.67101], [36.01458, 12.72478], [36.14268, 12.70879], [36.16651, 12.88019], [36.13374, 12.92665], [36.24545, 13.36759], [36.38993, 13.56459], [36.48824, 13.83954], [36.44653, 13.95666], [36.54376, 14.25597], [36.44337, 15.14963], [36.54276, 15.23478], [36.69761, 15.75323], [36.76371, 15.80831], [36.92193, 16.23451], [36.99777, 17.07172], [37.42694, 17.04041], [37.50967, 17.32199], [38.13362, 17.53906], [38.37133, 17.66269], [38.45916, 17.87167], [38.57727, 17.98125], [39.63762, 18.37348], [37.8565, 22.00903]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SE\", iso1A3: \"SWE\", iso1N3: \"752\", wikidata: \"Q34\", nameEn: \"Sweden\", groups: [\"EU\", \"154\", \"150\", \"UN\"], callingCodes: [\"46\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[24.15791, 65.85385], [23.90497, 66.15802], [23.71339, 66.21299], [23.64982, 66.30603], [23.67591, 66.3862], [23.63776, 66.43568], [23.85959, 66.56434], [23.89488, 66.772], [23.98059, 66.79585], [23.98563, 66.84149], [23.56214, 67.17038], [23.58735, 67.20752], [23.54701, 67.25435], [23.75372, 67.29914], [23.75372, 67.43688], [23.39577, 67.46974], [23.54701, 67.59306], [23.45627, 67.85297], [23.65793, 67.9497], [23.40081, 68.05545], [23.26469, 68.15134], [23.15377, 68.14759], [23.10336, 68.26551], [22.73028, 68.40881], [22.00429, 68.50692], [21.03001, 68.88969], [20.90649, 68.89696], [20.85104, 68.93142], [20.91658, 68.96764], [20.78802, 69.03087], [20.55258, 69.06069], [20.0695, 69.04469], [20.28444, 68.93283], [20.33435, 68.80174], [20.22027, 68.67246], [19.95647, 68.55546], [20.22027, 68.48759], [19.93508, 68.35911], [18.97255, 68.52416], [18.63032, 68.50849], [18.39503, 68.58672], [18.1241, 68.53721], [18.13836, 68.20874], [17.90787, 67.96537], [17.30416, 68.11591], [16.7409, 67.91037], [16.38441, 67.52923], [16.12774, 67.52106], [16.09922, 67.4364], [16.39154, 67.21653], [16.35589, 67.06419], [15.37197, 66.48217], [15.49318, 66.28509], [15.05113, 66.15572], [14.53778, 66.12399], [14.50926, 65.31786], [13.64276, 64.58402], [14.11117, 64.46674], [14.16051, 64.18725], [13.98222, 64.00953], [13.23411, 64.09087], [12.74105, 64.02171], [12.14928, 63.59373], [12.19919, 63.47935], [11.98529, 63.27487], [12.19919, 63.00104], [12.07085, 62.6297], [12.29187, 62.25699], [12.14746, 61.7147], [12.40595, 61.57226], [12.57707, 61.56547], [12.86939, 61.35427], [12.69115, 61.06584], [12.2277, 61.02442], [12.59133, 60.50559], [12.52003, 60.13846], [12.36317, 59.99259], [12.15641, 59.8926], [11.87121, 59.86039], [11.92112, 59.69531], [11.69297, 59.59442], [11.8213, 59.24985], [11.65732, 58.90177], [11.45199, 58.89604], [11.4601, 58.99022], [11.34459, 59.11672], [11.15367, 59.07862], [11.08911, 58.98745], [10.64958, 58.89391], [10.40861, 58.38489], [12.16597, 56.60205], [12.07466, 56.29488], [12.65312, 56.04345], [12.6372, 55.91371], [12.88472, 55.63369], [12.60345, 55.42675], [12.84405, 55.13257], [14.28399, 55.1553], [14.89259, 55.5623], [15.79951, 55.54655], [19.64795, 57.06466], [19.84909, 57.57876], [20.5104, 59.15546], [19.08191, 60.19152], [19.23413, 60.61414], [20.15877, 63.06556], [24.14112, 65.39731], [24.15107, 65.81427], [24.14798, 65.83466], [24.15791, 65.85385]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SG\", iso1A3: \"SGP\", iso1N3: \"702\", wikidata: \"Q334\", nameEn: \"Singapore\", groups: [\"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"65\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[104.00131, 1.42405], [103.93384, 1.42926], [103.89565, 1.42841], [103.86383, 1.46288], [103.81181, 1.47953], [103.76395, 1.45183], [103.74161, 1.4502], [103.7219, 1.46108], [103.67468, 1.43166], [103.62738, 1.35255], [103.56591, 1.19719], [103.66049, 1.18825], [103.74084, 1.12902], [104.03085, 1.26954], [104.12282, 1.27714], [104.08072, 1.35998], [104.09162, 1.39694], [104.08871, 1.42015], [104.07348, 1.43322], [104.04622, 1.44691], [104.02277, 1.4438], [104.00131, 1.42405]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SH\", iso1A3: \"SHN\", iso1N3: \"654\", wikidata: \"Q192184\", nameEn: \"Saint Helena, Ascension and Tristan da Cunha\", country: \"GB\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"SI\", iso1A3: \"SVN\", iso1N3: \"705\", wikidata: \"Q215\", nameEn: \"Slovenia\", groups: [\"EU\", \"039\", \"150\", \"UN\"], callingCodes: [\"386\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[16.50139, 46.56684], [16.39217, 46.63673], [16.38594, 46.6549], [16.41863, 46.66238], [16.42641, 46.69228], [16.37816, 46.69975], [16.30966, 46.7787], [16.31303, 46.79838], [16.3408, 46.80641], [16.34547, 46.83836], [16.2941, 46.87137], [16.2365, 46.87775], [16.21892, 46.86961], [16.15711, 46.85434], [16.14365, 46.8547], [16.10983, 46.867], [16.05786, 46.83927], [15.99054, 46.82772], [15.99126, 46.78199], [15.98432, 46.74991], [15.99769, 46.7266], [16.02808, 46.71094], [16.04347, 46.68694], [16.04036, 46.6549], [15.99988, 46.67947], [15.98512, 46.68463], [15.94864, 46.68769], [15.87691, 46.7211], [15.8162, 46.71897], [15.78518, 46.70712], [15.76771, 46.69863], [15.73823, 46.70011], [15.72279, 46.69548], [15.69523, 46.69823], [15.67411, 46.70735], [15.6543, 46.70616], [15.6543, 46.69228], [15.6365, 46.6894], [15.63255, 46.68069], [15.62317, 46.67947], [15.59826, 46.68908], [15.54533, 46.66985], [15.55333, 46.64988], [15.54431, 46.6312], [15.46906, 46.61321], [15.45514, 46.63697], [15.41235, 46.65556], [15.23711, 46.63994], [15.14215, 46.66131], [15.01451, 46.641], [14.98024, 46.6009], [14.96002, 46.63459], [14.92283, 46.60848], [14.87129, 46.61], [14.86419, 46.59411], [14.83549, 46.56614], [14.81836, 46.51046], [14.72185, 46.49974], [14.66892, 46.44936], [14.5942, 46.43434], [14.56463, 46.37208], [14.52176, 46.42617], [14.45877, 46.41717], [14.42608, 46.44614], [14.314, 46.43327], [14.28326, 46.44315], [14.15989, 46.43327], [14.12097, 46.47724], [14.04002, 46.49117], [14.00422, 46.48474], [13.89837, 46.52331], [13.7148, 46.5222], [13.68684, 46.43881], [13.59777, 46.44137], [13.5763, 46.42613], [13.5763, 46.40915], [13.47019, 46.3621], [13.43418, 46.35992], [13.44808, 46.33507], [13.37671, 46.29668], [13.42218, 46.20758], [13.47587, 46.22725], [13.56114, 46.2054], [13.56682, 46.18703], [13.64451, 46.18966], [13.66472, 46.17392], [13.64053, 46.13587], [13.57072, 46.09022], [13.50104, 46.05986], [13.49568, 46.04839], [13.50998, 46.04498], [13.49702, 46.01832], [13.47474, 46.00546], [13.50104, 45.98078], [13.52963, 45.96588], [13.56759, 45.96991], [13.58903, 45.99009], [13.62074, 45.98388], [13.63458, 45.98947], [13.64307, 45.98326], [13.6329, 45.94894], [13.63815, 45.93607], [13.61931, 45.91782], [13.60857, 45.89907], [13.59565, 45.89446], [13.58644, 45.88173], [13.57563, 45.8425], [13.58858, 45.83503], [13.59784, 45.8072], [13.66986, 45.79955], [13.8235, 45.7176], [13.83332, 45.70855], [13.83422, 45.68703], [13.87933, 45.65207], [13.9191, 45.6322], [13.8695, 45.60835], [13.86771, 45.59898], [13.84106, 45.58185], [13.78445, 45.5825], [13.74587, 45.59811], [13.7198, 45.59352], [13.6076, 45.64761], [13.45644, 45.59464], [13.56979, 45.4895], [13.62902, 45.45898], [13.67398, 45.4436], [13.7785, 45.46787], [13.81742, 45.43729], [13.88124, 45.42637], [13.90771, 45.45149], [13.97309, 45.45258], [13.99488, 45.47551], [13.96063, 45.50825], [14.00578, 45.52352], [14.07116, 45.48752], [14.20348, 45.46896], [14.22371, 45.50388], [14.24239, 45.50607], [14.26611, 45.48239], [14.27681, 45.4902], [14.32487, 45.47142], [14.36693, 45.48642], [14.49769, 45.54424], [14.5008, 45.60852], [14.53816, 45.6205], [14.57397, 45.67165], [14.60977, 45.66403], [14.59576, 45.62812], [14.69694, 45.57366], [14.68605, 45.53006], [14.71718, 45.53442], [14.80124, 45.49515], [14.81992, 45.45913], [14.90554, 45.47769], [14.92266, 45.52788], [15.02385, 45.48533], [15.05187, 45.49079], [15.16862, 45.42309], [15.27758, 45.46678], [15.33051, 45.45258], [15.38188, 45.48752], [15.30249, 45.53224], [15.29837, 45.5841], [15.27747, 45.60504], [15.31027, 45.6303], [15.34695, 45.63382], [15.34214, 45.64702], [15.38952, 45.63682], [15.4057, 45.64727], [15.34919, 45.71623], [15.30872, 45.69014], [15.25423, 45.72275], [15.40836, 45.79491], [15.47531, 45.79802], [15.47325, 45.8253], [15.52234, 45.82195], [15.57952, 45.84953], [15.64185, 45.82915], [15.66662, 45.84085], [15.70411, 45.8465], [15.68232, 45.86819], [15.68383, 45.88867], [15.67967, 45.90455], [15.70636, 45.92116], [15.70327, 46.00015], [15.71246, 46.01196], [15.72977, 46.04682], [15.62317, 46.09103], [15.6083, 46.11992], [15.59909, 46.14761], [15.64904, 46.19229], [15.6434, 46.21396], [15.67395, 46.22478], [15.75436, 46.21969], [15.75479, 46.20336], [15.78817, 46.21719], [15.79284, 46.25811], [15.97965, 46.30652], [16.07616, 46.3463], [16.07314, 46.36458], [16.05065, 46.3833], [16.05281, 46.39141], [16.14859, 46.40547], [16.18824, 46.38282], [16.30233, 46.37837], [16.30162, 46.40437], [16.27329, 46.41467], [16.27398, 46.42875], [16.25124, 46.48067], [16.23961, 46.49653], [16.26759, 46.50566], [16.26733, 46.51505], [16.29793, 46.5121], [16.37193, 46.55008], [16.38771, 46.53608], [16.44036, 46.5171], [16.5007, 46.49644], [16.52604, 46.47831], [16.59527, 46.47524], [16.52604, 46.5051], [16.52885, 46.53303], [16.50139, 46.56684]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SJ\", iso1A3: \"SJM\", iso1N3: \"744\", wikidata: \"Q842829\", nameEn: \"Svalbard and Jan Mayen\", country: \"NO\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"SK\", iso1A3: \"SVK\", iso1N3: \"703\", wikidata: \"Q214\", nameEn: \"Slovakia\", groups: [\"EU\", \"151\", \"150\", \"UN\"], callingCodes: [\"421\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[19.82237, 49.27806], [19.78581, 49.41701], [19.72127, 49.39288], [19.6375, 49.40897], [19.64162, 49.45184], [19.57845, 49.46077], [19.53313, 49.52856], [19.52626, 49.57311], [19.45348, 49.61583], [19.37795, 49.574], [19.36009, 49.53747], [19.25435, 49.53391], [19.18019, 49.41165], [18.9742, 49.39557], [18.97283, 49.49914], [18.94536, 49.52143], [18.84521, 49.51672], [18.74761, 49.492], [18.67757, 49.50895], [18.6144, 49.49824], [18.57183, 49.51162], [18.53063, 49.49022], [18.54848, 49.47059], [18.44686, 49.39467], [18.4084, 49.40003], [18.4139, 49.36517], [18.36446, 49.3267], [18.18456, 49.28909], [18.15022, 49.24518], [18.1104, 49.08624], [18.06885, 49.03157], [17.91814, 49.01784], [17.87831, 48.92679], [17.77944, 48.92318], [17.73126, 48.87885], [17.7094, 48.86721], [17.5295, 48.81117], [17.45671, 48.85004], [17.3853, 48.80936], [17.29054, 48.85546], [17.19355, 48.87602], [17.11202, 48.82925], [17.00215, 48.70887], [16.93955, 48.60371], [16.94611, 48.53614], [16.85204, 48.44968], [16.8497, 48.38321], [16.83588, 48.3844], [16.83317, 48.38138], [16.84243, 48.35258], [16.90903, 48.32519], [16.89461, 48.31332], [16.97701, 48.17385], [17.02919, 48.13996], [17.05735, 48.14179], [17.09168, 48.09366], [17.07039, 48.0317], [17.16001, 48.00636], [17.23699, 48.02094], [17.71215, 47.7548], [18.02938, 47.75665], [18.29305, 47.73541], [18.56496, 47.76588], [18.66521, 47.76772], [18.74074, 47.8157], [18.8506, 47.82308], [18.76821, 47.87469], [18.76134, 47.97499], [18.82176, 48.04206], [19.01952, 48.07052], [19.23924, 48.0595], [19.28182, 48.08336], [19.47957, 48.09437], [19.52489, 48.19791], [19.63338, 48.25006], [19.92452, 48.1283], [20.24312, 48.2784], [20.29943, 48.26104], [20.5215, 48.53336], [20.83248, 48.5824], [21.11516, 48.49546], [21.44063, 48.58456], [21.6068, 48.50365], [21.67134, 48.3989], [21.72525, 48.34628], [21.8279, 48.33321], [21.83339, 48.36242], [22.14689, 48.4005], [22.16023, 48.56548], [22.21379, 48.6218], [22.34151, 48.68893], [22.42934, 48.92857], [22.48296, 48.99172], [22.54338, 49.01424], [22.56155, 49.08865], [22.04427, 49.22136], [21.96385, 49.3437], [21.82927, 49.39467], [21.77983, 49.35443], [21.62328, 49.4447], [21.43376, 49.41433], [21.27858, 49.45988], [21.19756, 49.4054], [21.12477, 49.43666], [21.041, 49.41791], [21.09799, 49.37176], [20.98733, 49.30774], [20.9229, 49.29626], [20.77971, 49.35383], [20.72274, 49.41813], [20.61666, 49.41791], [20.5631, 49.375], [20.46422, 49.41612], [20.39939, 49.3896], [20.31728, 49.39914], [20.31453, 49.34817], [20.21977, 49.35265], [20.13738, 49.31685], [20.08238, 49.1813], [19.98494, 49.22904], [19.90529, 49.23532], [19.86409, 49.19316], [19.75286, 49.20751], [19.82237, 49.27806]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SL\", iso1A3: \"SLE\", iso1N3: \"694\", wikidata: \"Q1044\", nameEn: \"Sierra Leone\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"232\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-10.27575, 8.48711], [-10.37257, 8.48941], [-10.54891, 8.31174], [-10.63934, 8.35326], [-10.70565, 8.29235], [-10.61422, 8.5314], [-10.47707, 8.67669], [-10.56197, 8.81225], [-10.5783, 9.06386], [-10.74484, 9.07998], [-10.6534, 9.29919], [-11.2118, 10.00098], [-11.89624, 9.99763], [-11.91023, 9.93927], [-12.12634, 9.87203], [-12.24262, 9.92386], [-12.47254, 9.86834], [-12.76788, 9.3133], [-12.94095, 9.26335], [-13.08953, 9.0409], [-13.18586, 9.0925], [-13.29911, 9.04245], [-14.36218, 8.64107], [-12.15048, 6.15992], [-11.50429, 6.92704], [-11.4027, 6.97746], [-11.29417, 7.21576], [-10.60422, 7.7739], [-10.60492, 8.04072], [-10.57523, 8.04829], [-10.51554, 8.1393], [-10.45023, 8.15627], [-10.35227, 8.15223], [-10.29839, 8.21283], [-10.31635, 8.28554], [-10.30084, 8.30008], [-10.27575, 8.48711]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SM\", iso1A3: \"SMR\", iso1N3: \"674\", wikidata: \"Q238\", nameEn: \"San Marino\", groups: [\"039\", \"150\", \"UN\"], callingCodes: [\"378\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[12.45648, 43.89369], [12.48771, 43.89706], [12.49429, 43.90973], [12.49247, 43.91774], [12.49724, 43.92248], [12.50269, 43.92363], [12.50496, 43.93017], [12.51553, 43.94096], [12.51427, 43.94897], [12.50655, 43.95796], [12.50875, 43.96198], [12.50622, 43.97131], [12.51109, 43.97201], [12.51064, 43.98165], [12.5154, 43.98508], [12.51463, 43.99122], [12.50678, 43.99113], [12.49406, 43.98492], [12.47853, 43.98052], [12.46205, 43.97463], [12.44684, 43.96597], [12.43662, 43.95698], [12.42005, 43.9578], [12.41414, 43.95273], [12.40415, 43.95485], [12.40506, 43.94325], [12.41165, 43.93769], [12.41551, 43.92984], [12.40733, 43.92379], [12.41233, 43.90956], [12.40935, 43.9024], [12.41641, 43.89991], [12.44184, 43.90498], [12.45648, 43.89369]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SN\", iso1A3: \"SEN\", iso1N3: \"686\", wikidata: \"Q1041\", nameEn: \"Senegal\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"221\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-14.32144, 16.61495], [-15.00557, 16.64997], [-15.6509, 16.50315], [-16.27016, 16.51565], [-16.4429, 16.20605], [-16.44814, 16.09753], [-16.48967, 16.0496], [-16.50854, 16.09032], [-17.15288, 16.07139], [-18.35085, 14.63444], [-17.43598, 13.59273], [-15.47902, 13.58758], [-15.36504, 13.79313], [-14.93719, 13.80173], [-14.34721, 13.46578], [-13.8955, 13.59126], [-13.79409, 13.34472], [-14.36795, 13.23033], [-15.14917, 13.57989], [-15.26908, 13.37768], [-15.80478, 13.34832], [-15.80355, 13.16729], [-16.69343, 13.16791], [-16.74676, 13.06025], [-17.43966, 13.04579], [-17.4623, 11.92379], [-16.70562, 12.34803], [-16.38191, 12.36449], [-16.20591, 12.46157], [-15.67302, 12.42974], [-15.17582, 12.6847], [-13.70523, 12.68013], [-13.05296, 12.64003], [-13.06603, 12.49342], [-12.87336, 12.51892], [-12.35415, 12.32758], [-11.91331, 12.42008], [-11.46267, 12.44559], [-11.37536, 12.40788], [-11.39935, 12.97808], [-11.63025, 13.39174], [-11.83345, 13.33333], [-12.06897, 13.71049], [-11.93043, 13.84505], [-12.23936, 14.76324], [-13.11029, 15.52116], [-13.43135, 16.09022], [-13.80075, 16.13961], [-14.32144, 16.61495]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SO\", iso1A3: \"SOM\", iso1N3: \"706\", wikidata: \"Q1045\", nameEn: \"Somalia\", groups: [\"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"252\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[51.12877, 12.56479], [43.90659, 12.3823], [42.95776, 10.98533], [42.69452, 10.62672], [42.87643, 10.18441], [43.0937, 9.90579], [43.23518, 9.84605], [43.32613, 9.59205], [44.19222, 8.93028], [46.99339, 7.9989], [47.92477, 8.00111], [47.97917, 8.00124], [44.98104, 4.91821], [44.02436, 4.9451], [43.40263, 4.79289], [43.04177, 4.57923], [42.97746, 4.44032], [42.84526, 4.28357], [42.55853, 4.20518], [42.07619, 4.17667], [41.89488, 3.97375], [41.31368, 3.14314], [40.98767, 2.82959], [41.00099, -0.83068], [41.56, -1.59812], [41.56362, -1.66375], [41.75542, -1.85308], [57.49095, 8.14549], [51.12877, 12.56479]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SR\", iso1A3: \"SUR\", iso1N3: \"740\", wikidata: \"Q730\", nameEn: \"Suriname\", groups: [\"005\", \"419\", \"019\", \"UN\"], driveSide: \"left\", callingCodes: [\"597\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-54.26916, 5.26909], [-54.01877, 5.52789], [-54.01074, 5.68785], [-53.7094, 6.2264], [-56.84822, 6.73257], [-57.31629, 5.33714], [-57.22536, 5.15605], [-57.37442, 5.0208], [-57.8699, 4.89394], [-58.0307, 3.95513], [-57.35891, 3.32121], [-56.70519, 2.02964], [-56.55439, 2.02003], [-56.47045, 1.95135], [-55.99278, 1.83137], [-55.89863, 1.89861], [-55.92159, 2.05236], [-56.13054, 2.27723], [-55.96292, 2.53188], [-55.71493, 2.40342], [-55.01919, 2.564], [-54.6084, 2.32856], [-54.42864, 2.42442], [-54.28534, 2.67798], [-53.9849, 3.58697], [-53.98914, 3.627], [-54.05128, 3.63557], [-54.19367, 3.84387], [-54.38444, 4.13222], [-54.4717, 4.91964], [-54.26916, 5.26909]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SS\", iso1A3: \"SSD\", iso1N3: \"728\", wikidata: \"Q958\", nameEn: \"South Sudan\", groups: [\"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"211\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[34.10229, 9.50238], [33.87958, 9.49937], [33.9082, 9.762], [33.96323, 9.80972], [33.99185, 9.99623], [33.96984, 10.15446], [33.90159, 10.17179], [33.80913, 10.32994], [33.66604, 10.44254], [33.52294, 10.64382], [33.24645, 10.77913], [33.26977, 10.83632], [33.13988, 11.43248], [33.25876, 12.22111], [32.73921, 12.22757], [32.73921, 11.95203], [32.10079, 11.95203], [32.39578, 11.70208], [32.39358, 11.18207], [32.46967, 11.04662], [31.99177, 10.65065], [31.77539, 10.28939], [31.28504, 9.75287], [30.84605, 9.7498], [30.82893, 9.71451], [30.53005, 9.95992], [30.00389, 10.28633], [29.94629, 10.29245], [29.54, 10.07949], [29.53844, 9.75133], [29.06988, 9.74826], [28.99983, 9.67155], [27.90704, 9.61323], [27.14427, 9.62858], [26.70685, 9.48735], [26.35815, 9.57946], [26.21338, 9.91545], [25.93241, 10.17941], [25.93163, 10.38159], [25.78141, 10.42599], [25.0918, 10.33718], [25.05688, 10.06776], [24.97739, 9.9081], [24.84653, 9.80643], [24.49389, 9.79962], [24.12744, 9.73784], [24.09319, 9.66572], [23.69155, 9.67566], [23.62179, 9.53823], [23.64981, 9.44303], [23.64358, 9.28637], [23.56263, 9.19418], [23.4848, 9.16959], [23.44744, 8.99128], [23.59065, 8.99743], [23.51905, 8.71749], [24.25691, 8.69288], [24.13238, 8.36959], [24.35965, 8.26177], [24.85156, 8.16933], [24.98855, 7.96588], [25.25319, 7.8487], [25.29214, 7.66675], [25.20649, 7.61115], [25.20337, 7.50312], [25.35281, 7.42595], [25.37461, 7.33024], [25.90076, 7.09549], [26.38022, 6.63493], [26.32729, 6.36272], [26.58259, 6.1987], [26.51721, 6.09655], [27.22705, 5.71254], [27.22705, 5.62889], [27.28621, 5.56382], [27.23017, 5.37167], [27.26886, 5.25876], [27.44012, 5.07349], [27.56656, 4.89375], [27.65462, 4.89375], [27.76469, 4.79284], [27.79551, 4.59976], [28.20719, 4.35614], [28.6651, 4.42638], [28.8126, 4.48784], [29.03054, 4.48784], [29.22207, 4.34297], [29.43341, 4.50101], [29.49726, 4.7007], [29.82087, 4.56246], [29.79666, 4.37809], [30.06964, 4.13221], [30.1621, 4.10586], [30.22374, 3.93896], [30.27658, 3.95653], [30.47691, 3.83353], [30.55396, 3.84451], [30.57378, 3.74567], [30.56277, 3.62703], [30.78512, 3.67097], [30.80713, 3.60506], [30.85997, 3.5743], [30.85153, 3.48867], [30.97601, 3.693], [31.16666, 3.79853], [31.29476, 3.8015], [31.50478, 3.67814], [31.50776, 3.63652], [31.72075, 3.74354], [31.81459, 3.82083], [31.86821, 3.78664], [31.96205, 3.6499], [31.95907, 3.57408], [32.05187, 3.589], [32.08491, 3.56287], [32.08866, 3.53543], [32.19888, 3.50867], [32.20782, 3.6053], [32.41337, 3.748], [32.72021, 3.77327], [32.89746, 3.81339], [33.02852, 3.89296], [33.18356, 3.77812], [33.51264, 3.75068], [33.9873, 4.23316], [34.47601, 4.72162], [35.34151, 5.02364], [35.30992, 4.90402], [35.47843, 4.91872], [35.42366, 4.76969], [35.51424, 4.61643], [35.9419, 4.61933], [35.82118, 4.77382], [35.81968, 5.10757], [35.8576, 5.33413], [35.50792, 5.42431], [35.29938, 5.34042], [35.31188, 5.50106], [35.13058, 5.62118], [35.12611, 5.68937], [35.00546, 5.89387], [34.96227, 6.26415], [35.01738, 6.46991], [34.87736, 6.60161], [34.77459, 6.5957], [34.65096, 6.72589], [34.53776, 6.74808], [34.53925, 6.82794], [34.47669, 6.91076], [34.35753, 6.91963], [34.19369, 7.04382], [34.19369, 7.12807], [34.01495, 7.25664], [34.03878, 7.27437], [34.02984, 7.36449], [33.87642, 7.5491], [33.71407, 7.65983], [33.44745, 7.7543], [33.32531, 7.71297], [33.24637, 7.77939], [33.04944, 7.78989], [33.0006, 7.90333], [33.08401, 8.05822], [33.18083, 8.13047], [33.1853, 8.29264], [33.19721, 8.40317], [33.3119, 8.45474], [33.54575, 8.47094], [33.66938, 8.44442], [33.71407, 8.3678], [33.87195, 8.41938], [33.89579, 8.4842], [34.01346, 8.50041], [34.14453, 8.60204], [34.14304, 9.04654], [34.10229, 9.50238]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"ST\", iso1A3: \"STP\", iso1N3: \"678\", wikidata: \"Q1039\", nameEn: \"S\\xE3o Tom\\xE9 and Principe\", groups: [\"017\", \"202\", \"002\", \"UN\"], callingCodes: [\"239\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[4.34149, 1.91417], [6.6507, -0.28606], [7.9035, 1.92304], [4.34149, 1.91417]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SV\", iso1A3: \"SLV\", iso1N3: \"222\", wikidata: \"Q792\", nameEn: \"El Salvador\", groups: [\"013\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"503\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-89.34776, 14.43013], [-89.39028, 14.44561], [-89.57441, 14.41637], [-89.58814, 14.33165], [-89.50614, 14.26084], [-89.52397, 14.22628], [-89.61844, 14.21937], [-89.70756, 14.1537], [-89.75569, 14.07073], [-89.73251, 14.04133], [-89.76103, 14.02923], [-89.81807, 14.07073], [-89.88937, 14.0396], [-90.10505, 13.85104], [-90.11344, 13.73679], [-90.55276, 12.8866], [-88.11443, 12.63306], [-87.7346, 13.13228], [-87.55124, 13.12523], [-87.69751, 13.25228], [-87.73714, 13.32715], [-87.80177, 13.35689], [-87.84675, 13.41078], [-87.83467, 13.44655], [-87.77354, 13.45767], [-87.73841, 13.44169], [-87.72115, 13.46083], [-87.71657, 13.50577], [-87.78148, 13.52906], [-87.73106, 13.75443], [-87.68821, 13.80829], [-87.7966, 13.91353], [-88.00331, 13.86948], [-88.07641, 13.98447], [-88.23018, 13.99915], [-88.25791, 13.91108], [-88.48982, 13.86458], [-88.49738, 13.97224], [-88.70661, 14.04317], [-88.73182, 14.10919], [-88.815, 14.11652], [-88.85785, 14.17763], [-88.94608, 14.20207], [-89.04187, 14.33644], [-89.34776, 14.43013]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SX\", iso1A3: \"SXM\", iso1N3: \"534\", wikidata: \"Q26273\", nameEn: \"Sint Maarten\", aliases: [\"NL-SX\"], country: \"NL\", groups: [\"Q1451600\", \"029\", \"003\", \"419\", \"019\", \"UN\"], callingCodes: [\"1 721\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-63.33064, 17.9615], [-63.1055, 17.86651], [-62.93924, 18.02904], [-63.02323, 18.05757], [-63.04039, 18.05619], [-63.0579, 18.06614], [-63.07759, 18.04943], [-63.09686, 18.04608], [-63.11042, 18.05339], [-63.13502, 18.05445], [-63.33064, 17.9615]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SY\", iso1A3: \"SYR\", iso1N3: \"760\", wikidata: \"Q858\", nameEn: \"Syria\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"963\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[42.23683, 37.2863], [42.21548, 37.28026], [42.20454, 37.28715], [42.22381, 37.30238], [42.22257, 37.31395], [42.2112, 37.32491], [42.19301, 37.31323], [42.18225, 37.28569], [42.00894, 37.17209], [41.515, 37.08084], [41.21937, 37.07665], [40.90856, 37.13147], [40.69136, 37.0996], [39.81589, 36.75538], [39.21538, 36.66834], [39.03217, 36.70911], [38.74042, 36.70629], [38.55908, 36.84429], [38.38859, 36.90064], [38.21064, 36.91842], [37.81974, 36.76055], [37.68048, 36.75065], [37.49103, 36.66904], [37.47253, 36.63243], [37.21988, 36.6736], [37.16177, 36.66069], [37.10894, 36.6704], [37.08279, 36.63495], [37.02088, 36.66422], [37.01647, 36.69512], [37.04619, 36.71101], [37.04399, 36.73483], [36.99886, 36.74012], [36.99557, 36.75997], [36.66727, 36.82901], [36.61581, 36.74629], [36.62681, 36.71189], [36.57398, 36.65186], [36.58829, 36.58295], [36.54206, 36.49539], [36.6081, 36.33772], [36.65653, 36.33861], [36.68672, 36.23677], [36.6125, 36.22592], [36.50463, 36.2419], [36.4617, 36.20461], [36.39206, 36.22088], [36.37474, 36.01163], [36.33956, 35.98687], [36.30099, 36.00985], [36.28338, 36.00273], [36.29769, 35.96086], [36.27678, 35.94839], [36.25366, 35.96264], [36.19973, 35.95195], [36.17441, 35.92076], [36.1623, 35.80925], [36.14029, 35.81015], [36.13919, 35.83692], [36.11827, 35.85923], [35.99829, 35.88242], [36.01844, 35.92403], [36.00514, 35.94113], [35.98499, 35.94107], [35.931, 35.92109], [35.51152, 36.10954], [35.48515, 34.70851], [35.97386, 34.63322], [35.98718, 34.64977], [36.29165, 34.62991], [36.32399, 34.69334], [36.35135, 34.68516], [36.35384, 34.65447], [36.42941, 34.62505], [36.46003, 34.6378], [36.45299, 34.59438], [36.41429, 34.61175], [36.39846, 34.55672], [36.3369, 34.52629], [36.34745, 34.5002], [36.4442, 34.50165], [36.46179, 34.46541], [36.55853, 34.41609], [36.53039, 34.3798], [36.56556, 34.31881], [36.60778, 34.31009], [36.58667, 34.27667], [36.59195, 34.2316], [36.62537, 34.20251], [36.5128, 34.09916], [36.50576, 34.05982], [36.41078, 34.05253], [36.28589, 33.91981], [36.38263, 33.86579], [36.3967, 33.83365], [36.14517, 33.85118], [36.06778, 33.82927], [35.9341, 33.6596], [36.05723, 33.57904], [35.94465, 33.52774], [35.94816, 33.47886], [35.88668, 33.43183], [35.82577, 33.40479], [35.81324, 33.36354], [35.77477, 33.33609], [35.813, 33.3172], [35.77513, 33.27342], [35.81295, 33.24841], [35.81647, 33.2028], [35.83846, 33.19397], [35.84285, 33.16673], [35.81911, 33.1336], [35.81911, 33.11077], [35.84802, 33.1031], [35.87188, 32.98028], [35.89298, 32.9456], [35.87012, 32.91976], [35.84021, 32.8725], [35.83758, 32.82817], [35.78745, 32.77938], [35.75983, 32.74803], [35.88405, 32.71321], [35.93307, 32.71966], [35.96633, 32.66237], [36.02239, 32.65911], [36.08074, 32.51463], [36.20379, 32.52751], [36.20875, 32.49529], [36.23948, 32.50108], [36.40959, 32.37908], [36.83946, 32.31293], [38.79171, 33.37328], [40.64314, 34.31604], [40.97676, 34.39788], [41.12388, 34.65742], [41.2345, 34.80049], [41.21654, 35.1508], [41.26569, 35.42708], [41.38184, 35.62502], [41.37027, 35.84095], [41.2564, 36.06012], [41.28864, 36.35368], [41.40058, 36.52502], [41.81736, 36.58782], [42.36697, 37.0627], [42.35724, 37.10998], [42.32313, 37.17814], [42.34735, 37.22548], [42.2824, 37.2798], [42.26039, 37.27017], [42.23683, 37.2863]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"SZ\", iso1A3: \"SWZ\", iso1N3: \"748\", wikidata: \"Q1050\", nameEn: \"Eswatini\", aliases: [\"Swaziland\"], groups: [\"018\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"268\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[31.86881, -25.99973], [31.4175, -25.71886], [31.31237, -25.7431], [31.13073, -25.91558], [30.95819, -26.26303], [30.78927, -26.48271], [30.81101, -26.84722], [30.88826, -26.79622], [30.97757, -26.92706], [30.96088, -27.0245], [31.15027, -27.20151], [31.49834, -27.31549], [31.97592, -27.31675], [31.97463, -27.11057], [32.00893, -26.8096], [32.09664, -26.80721], [32.13315, -26.84345], [32.13409, -26.5317], [32.07352, -26.40185], [32.10435, -26.15656], [32.08599, -26.00978], [32.00916, -25.999], [31.974, -25.95387], [31.86881, -25.99973]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TA\", iso1A3: \"TAA\", wikidata: \"Q220982\", nameEn: \"Tristan da Cunha\", aliases: [\"SH-TA\"], country: \"GB\", groups: [\"SH\", \"BOTS\", \"011\", \"202\", \"002\", \"UN\"], isoStatus: \"excRes\", driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"290 8\", \"44 20\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-13.38232, -34.07258], [-16.67337, -41.9188], [-5.88482, -41.4829], [-13.38232, -34.07258]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TC\", iso1A3: \"TCA\", iso1N3: \"796\", wikidata: \"Q18221\", nameEn: \"Turks and Caicos Islands\", country: \"GB\", groups: [\"BOTS\", \"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1 649\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-71.70065, 25.7637], [-72.98446, 20.4801], [-69.80718, 21.35956], [-71.70065, 25.7637]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TD\", iso1A3: \"TCD\", iso1N3: \"148\", wikidata: \"Q657\", nameEn: \"Chad\", groups: [\"017\", \"202\", \"002\", \"UN\"], callingCodes: [\"235\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[23.99539, 19.49944], [15.99566, 23.49639], [14.99751, 23.00539], [15.19692, 21.99339], [15.20213, 21.49365], [15.28332, 21.44557], [15.62515, 20.95395], [15.57248, 20.92138], [15.55382, 20.86507], [15.56004, 20.79488], [15.59841, 20.74039], [15.6721, 20.70069], [15.99632, 20.35364], [15.75098, 19.93002], [15.6032, 18.77402], [15.50373, 16.89649], [14.37425, 15.72591], [13.86301, 15.04043], [13.78991, 14.87519], [13.809, 14.72915], [13.67878, 14.64013], [13.68573, 14.55276], [13.48259, 14.46704], [13.47559, 14.40881], [13.6302, 13.71094], [14.08251, 13.0797], [14.46881, 13.08259], [14.56101, 12.91036], [14.55058, 12.78256], [14.83314, 12.62963], [14.90827, 12.3269], [14.89019, 12.16593], [14.96952, 12.0925], [15.00146, 12.1223], [15.0349, 12.10698], [15.05786, 12.0608], [15.04808, 11.8731], [15.11579, 11.79313], [15.06595, 11.71126], [15.13149, 11.5537], [15.0585, 11.40481], [15.10021, 11.04101], [15.04957, 11.02347], [15.09127, 10.87431], [15.06737, 10.80921], [15.15532, 10.62846], [15.14936, 10.53915], [15.23724, 10.47764], [15.30874, 10.31063], [15.50535, 10.1098], [15.68761, 9.99344], [15.41408, 9.92876], [15.24618, 9.99246], [15.14043, 9.99246], [15.05999, 9.94845], [14.95722, 9.97926], [14.80082, 9.93818], [14.4673, 10.00264], [14.20411, 10.00055], [14.1317, 9.82413], [14.01793, 9.73169], [13.97544, 9.6365], [14.37094, 9.2954], [14.35707, 9.19611], [14.83566, 8.80557], [15.09484, 8.65982], [15.20426, 8.50892], [15.50743, 7.79302], [15.59272, 7.7696], [15.56964, 7.58936], [15.49743, 7.52179], [15.73118, 7.52006], [15.79942, 7.44149], [16.40703, 7.68809], [16.41583, 7.77971], [16.58315, 7.88657], [16.59415, 7.76444], [16.658, 7.75353], [16.6668, 7.67281], [16.8143, 7.53971], [17.67288, 7.98905], [17.93926, 7.95853], [18.02731, 8.01085], [18.6085, 8.05009], [18.64153, 8.08714], [18.62612, 8.14163], [18.67455, 8.22226], [18.79783, 8.25929], [19.11044, 8.68172], [18.86388, 8.87971], [19.06421, 9.00367], [20.36748, 9.11019], [20.82979, 9.44696], [21.26348, 9.97642], [21.34934, 9.95907], [21.52766, 10.2105], [21.63553, 10.217], [21.71479, 10.29932], [21.72139, 10.64136], [22.45889, 11.00246], [22.87758, 10.91915], [22.97249, 11.21955], [22.93124, 11.41645], [22.7997, 11.40424], [22.54907, 11.64372], [22.64092, 12.07485], [22.48369, 12.02766], [22.50548, 12.16769], [22.38873, 12.45514], [22.46345, 12.61925], [22.22684, 12.74682], [22.15679, 12.66634], [21.98711, 12.63292], [21.89371, 12.68001], [21.81432, 12.81362], [21.94819, 13.05637], [22.02914, 13.13976], [22.1599, 13.19281], [22.29689, 13.3731], [22.08674, 13.77863], [22.22995, 13.96754], [22.5553, 14.11704], [22.55997, 14.23024], [22.44944, 14.24986], [22.38562, 14.58907], [22.70474, 14.69149], [22.66115, 14.86308], [22.99584, 15.22989], [22.99584, 15.40105], [22.92579, 15.47007], [22.93201, 15.55107], [23.10792, 15.71297], [23.38812, 15.69649], [23.62785, 15.7804], [23.99997, 15.69575], [23.99539, 19.49944]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TF\", iso1A3: \"ATF\", iso1N3: \"260\", wikidata: \"Q129003\", nameEn: \"French Southern Territories\", country: \"FR\", groups: [\"EU\", \"UN\"] }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"TG\", iso1A3: \"TGO\", iso1N3: \"768\", wikidata: \"Q945\", nameEn: \"Togo\", groups: [\"011\", \"202\", \"002\", \"UN\"], callingCodes: [\"228\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[0.50388, 11.01011], [-0.13493, 11.14075], [-0.14462, 11.10811], [-0.05733, 11.08628], [-0.0275, 11.11202], [-514e-5, 11.10763], [342e-5, 11.08317], [0.02395, 11.06229], [0.03355, 10.9807], [-63e-4, 10.96417], [-908e-5, 10.91644], [-0.02685, 10.8783], [-0.0228, 10.81916], [-0.07183, 10.76794], [-0.07327, 10.71845], [-0.09141, 10.7147], [-0.05945, 10.63458], [0.12886, 10.53149], [0.18846, 10.4096], [0.29453, 10.41546], [0.33028, 10.30408], [0.39584, 10.31112], [0.35293, 10.09412], [0.41371, 10.06361], [0.41252, 10.02018], [0.36366, 10.03309], [0.32075, 9.72781], [0.34816, 9.71607], [0.34816, 9.66907], [0.32313, 9.6491], [0.28261, 9.69022], [0.26712, 9.66437], [0.29334, 9.59387], [0.36008, 9.6256], [0.38153, 9.58682], [0.23851, 9.57389], [0.2409, 9.52335], [0.30406, 9.521], [0.31241, 9.50337], [0.2254, 9.47869], [0.25758, 9.42696], [0.33148, 9.44812], [0.36485, 9.49749], [0.49118, 9.48339], [0.56388, 9.40697], [0.45424, 9.04581], [0.52455, 8.87746], [0.37319, 8.75262], [0.47211, 8.59945], [0.64731, 8.48866], [0.73432, 8.29529], [0.63897, 8.25873], [0.5913, 8.19622], [0.61156, 8.18324], [0.6056, 8.13959], [0.58891, 8.12779], [0.62943, 7.85751], [0.58295, 7.62368], [0.51979, 7.58706], [0.52455, 7.45354], [0.57223, 7.39326], [0.62943, 7.41099], [0.65327, 7.31643], [0.59606, 7.01252], [0.52217, 6.9723], [0.52098, 6.94391], [0.56508, 6.92971], [0.52853, 6.82921], [0.57406, 6.80348], [0.58176, 6.76049], [0.6497, 6.73682], [0.63659, 6.63857], [0.74862, 6.56517], [0.71048, 6.53083], [0.89283, 6.33779], [0.99652, 6.33779], [1.03108, 6.24064], [1.05969, 6.22998], [1.09187, 6.17074], [1.19966, 6.17069], [1.19771, 6.11522], [1.27574, 5.93551], [1.67336, 6.02702], [1.62913, 6.24075], [1.79826, 6.28221], [1.76906, 6.43189], [1.58105, 6.68619], [1.61812, 6.74843], [1.55877, 6.99737], [1.64249, 6.99562], [1.61838, 9.0527], [1.5649, 9.16941], [1.41746, 9.3226], [1.33675, 9.54765], [1.36624, 9.5951], [1.35507, 9.99525], [0.77666, 10.37665], [0.80358, 10.71459], [0.8804, 10.803], [0.91245, 10.99597], [0.66104, 10.99964], [0.4958, 10.93269], [0.50521, 10.98035], [0.48852, 10.98561], [0.50388, 11.01011]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TH\", iso1A3: \"THA\", iso1N3: \"764\", wikidata: \"Q869\", nameEn: \"Thailand\", groups: [\"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"66\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[100.08404, 20.36626], [99.95721, 20.46301], [99.91616, 20.44986], [99.90499, 20.4487], [99.89692, 20.44789], [99.89301, 20.44311], [99.89168, 20.44548], [99.88451, 20.44596], [99.88211, 20.44488], [99.86383, 20.44371], [99.81096, 20.33687], [99.68255, 20.32077], [99.46008, 20.39673], [99.46077, 20.36198], [99.5569, 20.20676], [99.52943, 20.14811], [99.416, 20.08614], [99.20328, 20.12877], [99.0735, 20.10298], [98.98679, 19.7419], [98.83661, 19.80931], [98.56065, 19.67807], [98.51182, 19.71303], [98.24884, 19.67876], [98.13829, 19.78541], [98.03314, 19.80941], [98.04364, 19.65755], [97.84715, 19.55782], [97.88423, 19.5041], [97.78769, 19.39429], [97.84186, 19.29526], [97.78606, 19.26769], [97.84024, 19.22217], [97.83479, 19.09972], [97.73797, 19.04261], [97.73654, 18.9812], [97.66487, 18.9371], [97.73836, 18.88478], [97.76752, 18.58097], [97.5258, 18.4939], [97.36444, 18.57138], [97.34522, 18.54596], [97.50383, 18.26844], [97.56219, 18.33885], [97.64116, 18.29778], [97.60841, 18.23846], [97.73723, 17.97912], [97.66794, 17.88005], [97.76407, 17.71595], [97.91829, 17.54504], [98.11185, 17.36829], [98.10439, 17.33847], [98.34566, 17.04822], [98.39441, 17.06266], [98.52624, 16.89979], [98.49603, 16.8446], [98.53833, 16.81934], [98.46994, 16.73613], [98.50253, 16.7139], [98.49713, 16.69022], [98.51043, 16.70107], [98.51579, 16.69433], [98.51472, 16.68521], [98.51833, 16.676], [98.51113, 16.64503], [98.5695, 16.62826], [98.57912, 16.55983], [98.63817, 16.47424], [98.68074, 16.27068], [98.84485, 16.42354], [98.92656, 16.36425], [98.8376, 16.11706], [98.69585, 16.13353], [98.57019, 16.04578], [98.59853, 15.87197], [98.541, 15.65406], [98.58598, 15.46821], [98.56027, 15.33471], [98.4866, 15.39154], [98.39351, 15.34177], [98.41906, 15.27103], [98.40522, 15.25268], [98.30446, 15.30667], [98.22, 15.21327], [98.18821, 15.13125], [98.24874, 14.83013], [98.56762, 14.37701], [98.97356, 14.04868], [99.16695, 13.72621], [99.20617, 13.20575], [99.12225, 13.19847], [99.10646, 13.05804], [99.18748, 12.9898], [99.18905, 12.84799], [99.29254, 12.68921], [99.409, 12.60603], [99.47519, 12.1353], [99.56445, 12.14805], [99.53424, 12.02317], [99.64891, 11.82699], [99.64108, 11.78948], [99.5672, 11.62732], [99.47598, 11.62434], [99.39485, 11.3925], [99.31573, 11.32081], [99.32756, 11.28545], [99.06938, 10.94857], [99.02337, 10.97217], [98.99701, 10.92962], [99.0069, 10.85485], [98.86819, 10.78336], [98.78511, 10.68351], [98.77275, 10.62548], [98.81944, 10.52761], [98.7391, 10.31488], [98.55174, 9.92804], [98.52291, 9.92389], [98.47298, 9.95782], [98.33094, 9.91973], [98.12555, 9.44056], [97.63455, 9.60854], [97.19814, 8.18901], [99.31854, 5.99868], [99.50117, 6.44501], [99.91873, 6.50233], [100.0756, 6.4045], [100.12, 6.42105], [100.19511, 6.72559], [100.29651, 6.68439], [100.30828, 6.66462], [100.31618, 6.66781], [100.31884, 6.66423], [100.32671, 6.66526], [100.32607, 6.65933], [100.31929, 6.65413], [100.35413, 6.54932], [100.41152, 6.52299], [100.41791, 6.5189], [100.42351, 6.51762], [100.43027, 6.52389], [100.66986, 6.45086], [100.74361, 6.50811], [100.74822, 6.46231], [100.81045, 6.45086], [100.85884, 6.24929], [101.10313, 6.25617], [101.12618, 6.19431], [101.06165, 6.14161], [101.12388, 6.11411], [101.087, 5.9193], [101.02708, 5.91013], [100.98815, 5.79464], [101.14062, 5.61613], [101.25755, 5.71065], [101.25524, 5.78633], [101.58019, 5.93534], [101.69773, 5.75881], [101.75074, 5.79091], [101.80144, 5.74505], [101.89188, 5.8386], [101.91776, 5.84269], [101.92819, 5.85511], [101.94712, 5.98421], [101.9714, 6.00575], [101.97114, 6.01992], [101.99209, 6.04075], [102.01835, 6.05407], [102.09182, 6.14161], [102.07732, 6.193], [102.08127, 6.22679], [102.09086, 6.23546], [102.46318, 7.22462], [102.47649, 9.66162], [102.52395, 11.25257], [102.91449, 11.65512], [102.90973, 11.75613], [102.83957, 11.8519], [102.78427, 11.98746], [102.77026, 12.06815], [102.70176, 12.1686], [102.73134, 12.37091], [102.78116, 12.40284], [102.7796, 12.43781], [102.57567, 12.65358], [102.51963, 12.66117], [102.4994, 12.71736], [102.53053, 12.77506], [102.49335, 12.92711], [102.48694, 12.97537], [102.52275, 12.99813], [102.46011, 13.08057], [102.43422, 13.09061], [102.36146, 13.26006], [102.36001, 13.31142], [102.34611, 13.35618], [102.35692, 13.38274], [102.35563, 13.47307], [102.361, 13.50551], [102.33828, 13.55613], [102.36859, 13.57488], [102.44601, 13.5637], [102.5358, 13.56933], [102.57573, 13.60461], [102.62483, 13.60883], [102.58635, 13.6286], [102.5481, 13.6589], [102.56848, 13.69366], [102.72727, 13.77806], [102.77864, 13.93374], [102.91251, 14.01531], [102.93275, 14.19044], [103.16469, 14.33075], [103.39353, 14.35639], [103.53518, 14.42575], [103.71109, 14.4348], [103.70175, 14.38052], [103.93836, 14.3398], [104.27616, 14.39861], [104.55014, 14.36091], [104.69335, 14.42726], [104.97667, 14.38806], [105.02804, 14.23722], [105.08408, 14.20402], [105.14012, 14.23873], [105.17748, 14.34432], [105.20894, 14.34967], [105.43783, 14.43865], [105.53864, 14.55731], [105.5121, 14.80802], [105.61162, 15.00037], [105.46661, 15.13132], [105.58043, 15.32724], [105.50662, 15.32054], [105.4692, 15.33709], [105.47635, 15.3796], [105.58191, 15.41031], [105.60446, 15.53301], [105.61756, 15.68792], [105.46573, 15.74742], [105.42285, 15.76971], [105.37959, 15.84074], [105.34115, 15.92737], [105.38508, 15.987], [105.42001, 16.00657], [105.06204, 16.09792], [105.00262, 16.25627], [104.88057, 16.37311], [104.73349, 16.565], [104.76099, 16.69302], [104.7397, 16.81005], [104.76442, 16.84752], [104.7373, 16.91125], [104.73712, 17.01404], [104.80716, 17.19025], [104.80061, 17.39367], [104.69867, 17.53038], [104.45404, 17.66788], [104.35432, 17.82871], [104.2757, 17.86139], [104.21776, 17.99335], [104.10927, 18.10826], [104.06533, 18.21656], [103.97725, 18.33631], [103.93916, 18.33914], [103.85642, 18.28666], [103.82449, 18.33979], [103.699, 18.34125], [103.60957, 18.40528], [103.47773, 18.42841], [103.41044, 18.4486], [103.30977, 18.4341], [103.24779, 18.37807], [103.23818, 18.34875], [103.29757, 18.30475], [103.17093, 18.2618], [103.14994, 18.23172], [103.1493, 18.17799], [103.07343, 18.12351], [103.07823, 18.03833], [103.0566, 18.00144], [103.01998, 17.97095], [102.9912, 17.9949], [102.95812, 18.0054], [102.86323, 17.97531], [102.81988, 17.94233], [102.79044, 17.93612], [102.75954, 17.89561], [102.68538, 17.86653], [102.67543, 17.84529], [102.69946, 17.81686], [102.68194, 17.80151], [102.59485, 17.83537], [102.5896, 17.84889], [102.61432, 17.92273], [102.60971, 17.95411], [102.59234, 17.96127], [102.45523, 17.97106], [102.11359, 18.21532], [101.88485, 18.02474], [101.78087, 18.07559], [101.72294, 17.92867], [101.44667, 17.7392], [101.15108, 17.47586], [100.96541, 17.57926], [101.02185, 17.87637], [101.1793, 18.0544], [101.19118, 18.2125], [101.15108, 18.25624], [101.18227, 18.34367], [101.06047, 18.43247], [101.27585, 18.68875], [101.22832, 18.73377], [101.25803, 18.89545], [101.35606, 19.04716], [101.261, 19.12717], [101.24911, 19.33334], [101.20604, 19.35296], [101.21347, 19.46223], [101.26991, 19.48324], [101.26545, 19.59242], [101.08928, 19.59748], [100.90302, 19.61901], [100.77231, 19.48324], [100.64606, 19.55884], [100.58219, 19.49164], [100.49604, 19.53504], [100.398, 19.75047], [100.5094, 19.87904], [100.58808, 20.15791], [100.55218, 20.17741], [100.51052, 20.14928], [100.47567, 20.19133], [100.4537, 20.19971], [100.44992, 20.23644], [100.41473, 20.25625], [100.37439, 20.35156], [100.33383, 20.4028], [100.25769, 20.3992], [100.22076, 20.31598], [100.16668, 20.2986], [100.1712, 20.24324], [100.11785, 20.24787], [100.09337, 20.26293], [100.09999, 20.31614], [100.08404, 20.36626]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TJ\", iso1A3: \"TJK\", iso1N3: \"762\", wikidata: \"Q863\", nameEn: \"Tajikistan\", groups: [\"143\", \"142\", \"UN\"], callingCodes: [\"992\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[70.45251, 41.04438], [70.38028, 41.02014], [70.36655, 40.90296], [69.69434, 40.62615], [69.59441, 40.70181], [69.53021, 40.77621], [69.38327, 40.7918], [69.32834, 40.70233], [69.3455, 40.57988], [69.2643, 40.57506], [69.21063, 40.54469], [69.27066, 40.49274], [69.28525, 40.41894], [69.30774, 40.36102], [69.33794, 40.34819], [69.32833, 40.29794], [69.30808, 40.2821], [69.24817, 40.30357], [69.25229, 40.26362], [69.30104, 40.24502], [69.30448, 40.18774], [69.2074, 40.21488], [69.15659, 40.2162], [69.04544, 40.22904], [68.85832, 40.20885], [68.84357, 40.18604], [68.79276, 40.17555], [68.77902, 40.20492], [68.5332, 40.14826], [68.52771, 40.11676], [68.62796, 40.07789], [69.01523, 40.15771], [69.01935, 40.11466], [68.96579, 40.06949], [68.84906, 40.04952], [68.93695, 39.91167], [68.88889, 39.87163], [68.63071, 39.85265], [68.61972, 39.68905], [68.54166, 39.53929], [68.12053, 39.56317], [67.70992, 39.66156], [67.62889, 39.60234], [67.44899, 39.57799], [67.46547, 39.53564], [67.39681, 39.52505], [67.46822, 39.46146], [67.45998, 39.315], [67.36522, 39.31287], [67.33226, 39.23739], [67.67833, 39.14479], [67.68915, 39.00775], [68.09704, 39.02589], [68.19743, 38.85985], [68.06948, 38.82115], [68.12877, 38.73677], [68.05598, 38.71641], [68.0807, 38.64136], [68.05873, 38.56087], [68.11366, 38.47169], [68.06274, 38.39435], [68.13289, 38.40822], [68.40343, 38.19484], [68.27159, 37.91477], [68.12635, 37.93], [67.81566, 37.43107], [67.8474, 37.31594], [67.78329, 37.1834], [67.7803, 37.08978], [67.87917, 37.0591], [68.02194, 36.91923], [68.18542, 37.02074], [68.27605, 37.00977], [68.29253, 37.10621], [68.41201, 37.10402], [68.41888, 37.13906], [68.61851, 37.19815], [68.6798, 37.27906], [68.81438, 37.23862], [68.80889, 37.32494], [68.91189, 37.26704], [68.88168, 37.33368], [68.96407, 37.32603], [69.03274, 37.25174], [69.25152, 37.09426], [69.39529, 37.16752], [69.45022, 37.23315], [69.36645, 37.40462], [69.44954, 37.4869], [69.51888, 37.5844], [69.80041, 37.5746], [69.84435, 37.60616], [69.93362, 37.61378], [69.95971, 37.5659], [70.15015, 37.52519], [70.28243, 37.66706], [70.27694, 37.81258], [70.1863, 37.84296], [70.17206, 37.93276], [70.4898, 38.12546], [70.54673, 38.24541], [70.60407, 38.28046], [70.61526, 38.34774], [70.64966, 38.34999], [70.69189, 38.37031], [70.6761, 38.39144], [70.67438, 38.40597], [70.69807, 38.41861], [70.72485, 38.4131], [70.75455, 38.4252], [70.77132, 38.45548], [70.78581, 38.45502], [70.78702, 38.45031], [70.79766, 38.44944], [70.80521, 38.44447], [70.81697, 38.44507], [70.82538, 38.45394], [70.84376, 38.44688], [70.88719, 38.46826], [70.92728, 38.43021], [70.98693, 38.48862], [71.03545, 38.44779], [71.0556, 38.40176], [71.09542, 38.42517], [71.10592, 38.42077], [71.10957, 38.40671], [71.1451, 38.40106], [71.21291, 38.32797], [71.33114, 38.30339], [71.33869, 38.27335], [71.37803, 38.25641], [71.36444, 38.15358], [71.29878, 38.04429], [71.28922, 38.01272], [71.27622, 37.99946], [71.27278, 37.96496], [71.24969, 37.93031], [71.2809, 37.91995], [71.296, 37.93403], [71.32871, 37.88564], [71.51565, 37.95349], [71.58843, 37.92425], [71.59255, 37.79956], [71.55752, 37.78677], [71.54324, 37.77104], [71.53053, 37.76534], [71.55234, 37.73209], [71.54186, 37.69691], [71.51972, 37.61945], [71.5065, 37.60912], [71.49693, 37.53527], [71.50616, 37.50733], [71.5256, 37.47971], [71.49612, 37.4279], [71.47685, 37.40281], [71.4862, 37.33405], [71.49821, 37.31975], [71.50674, 37.31502], [71.48536, 37.26017], [71.4824, 37.24921], [71.48339, 37.23937], [71.47386, 37.2269], [71.4555, 37.21418], [71.4494, 37.18137], [71.44127, 37.11856], [71.43097, 37.05855], [71.45578, 37.03094], [71.46923, 36.99925], [71.48481, 36.93218], [71.51502, 36.89128], [71.57195, 36.74943], [71.67083, 36.67346], [71.83229, 36.68084], [72.31676, 36.98115], [72.54095, 37.00007], [72.66381, 37.02014], [72.79693, 37.22222], [73.06884, 37.31729], [73.29633, 37.46495], [73.77197, 37.4417], [73.76647, 37.33913], [73.61129, 37.27469], [73.64974, 37.23643], [73.82552, 37.22659], [73.8564, 37.26158], [74.20308, 37.34208], [74.23339, 37.41116], [74.41055, 37.3948], [74.56161, 37.37734], [74.68383, 37.3948], [74.8294, 37.3435], [74.88887, 37.23275], [75.12328, 37.31839], [75.09719, 37.37297], [75.15899, 37.41443], [75.06011, 37.52779], [74.94338, 37.55501], [74.8912, 37.67576], [75.00935, 37.77486], [74.92416, 37.83428], [74.9063, 38.03033], [74.82665, 38.07359], [74.80331, 38.19889], [74.69894, 38.22155], [74.69619, 38.42947], [74.51217, 38.47034], [74.17022, 38.65504], [73.97933, 38.52945], [73.79806, 38.61106], [73.80656, 38.66449], [73.7033, 38.84782], [73.7445, 38.93867], [73.82964, 38.91517], [73.81728, 39.04007], [73.75823, 39.023], [73.60638, 39.24534], [73.54572, 39.27567], [73.55396, 39.3543], [73.5004, 39.38402], [73.59241, 39.40843], [73.59831, 39.46425], [73.45096, 39.46677], [73.31912, 39.38615], [73.18454, 39.35536], [72.85934, 39.35116], [72.62027, 39.39696], [72.33173, 39.33093], [72.23834, 39.17248], [72.17242, 39.2661], [72.09689, 39.26823], [72.04059, 39.36704], [71.90601, 39.27674], [71.79202, 39.27355], [71.7522, 39.32031], [71.80164, 39.40631], [71.76816, 39.45456], [71.62688, 39.44056], [71.5517, 39.45722], [71.55856, 39.57588], [71.49814, 39.61397], [71.08752, 39.50704], [71.06418, 39.41586], [70.7854, 39.38933], [70.64087, 39.58792], [70.44757, 39.60128], [70.2869, 39.53141], [70.11111, 39.58223], [69.87491, 39.53882], [69.68677, 39.59281], [69.3594, 39.52516], [69.26938, 39.8127], [69.35649, 40.01994], [69.43134, 39.98431], [69.43557, 39.92877], [69.53615, 39.93991], [69.5057, 40.03277], [69.53855, 40.0887], [69.53794, 40.11833], [69.55555, 40.12296], [69.57615, 40.10524], [69.64704, 40.12165], [69.67001, 40.10639], [70.01283, 40.23288], [70.58297, 40.00891], [70.57384, 39.99394], [70.47557, 39.93216], [70.55033, 39.96619], [70.58912, 39.95211], [70.65946, 39.9878], [70.65827, 40.0981], [70.7928, 40.12797], [70.80495, 40.16813], [70.9818, 40.22392], [70.8607, 40.217], [70.62342, 40.17396], [70.56394, 40.26421], [70.57149, 40.3442], [70.37511, 40.38605], [70.32626, 40.45174], [70.49871, 40.52503], [70.80009, 40.72825], [70.45251, 41.04438]]], [[[70.68112, 40.90612], [70.6158, 40.97661], [70.56077, 41.00642], [70.54223, 40.98787], [70.57501, 40.98941], [70.6721, 40.90555], [70.68112, 40.90612]]], [[[70.74189, 39.86319], [70.53651, 39.89155], [70.52631, 39.86989], [70.54998, 39.85137], [70.59667, 39.83542], [70.63105, 39.77923], [70.74189, 39.86319]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TK\", iso1A3: \"TKL\", iso1N3: \"772\", wikidata: \"Q36823\", nameEn: \"Tokelau\", country: \"NZ\", groups: [\"061\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"690\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-168.251, -9.44289], [-174.18635, -7.80441], [-174.17993, -10.13616], [-168.251, -9.44289]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TL\", iso1A3: \"TLS\", iso1N3: \"626\", wikidata: \"Q574\", nameEn: \"East Timor\", aliases: [\"Timor-Leste\", \"TP\"], groups: [\"035\", \"142\", \"UN\"], driveSide: \"left\", callingCodes: [\"670\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[124.46701, -9.13002], [124.94011, -8.85617], [124.97742, -9.08128], [125.11764, -8.96359], [125.18632, -9.03142], [125.18907, -9.16434], [125.09434, -9.19669], [125.04044, -9.17093], [124.97892, -9.19281], [125.09025, -9.46406], [125.68138, -9.85176], [127.55165, -9.05052], [127.42116, -8.22471], [125.87691, -8.31789], [125.58506, -7.95311], [124.92337, -8.75859], [124.33472, -9.11416], [124.04628, -9.22671], [124.04286, -9.34243], [124.10539, -9.41206], [124.14517, -9.42324], [124.21247, -9.36904], [124.28115, -9.42189], [124.28115, -9.50453], [124.3535, -9.48493], [124.35258, -9.43002], [124.38554, -9.3582], [124.45971, -9.30263], [124.46701, -9.13002]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TM\", iso1A3: \"TKM\", iso1N3: \"795\", wikidata: \"Q874\", nameEn: \"Turkmenistan\", groups: [\"143\", \"142\", \"UN\"], callingCodes: [\"993\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[60.5078, 41.21694], [60.06581, 41.4363], [60.18117, 41.60082], [60.06032, 41.76287], [60.08504, 41.80997], [60.33223, 41.75058], [59.95046, 41.97966], [60.0356, 42.01028], [60.04659, 42.08982], [59.96419, 42.1428], [60.00539, 42.212], [59.94633, 42.27655], [59.4341, 42.29738], [59.2955, 42.37064], [59.17317, 42.52248], [58.93422, 42.5407], [58.6266, 42.79314], [58.57991, 42.64988], [58.27504, 42.69632], [58.14321, 42.62159], [58.29427, 42.56497], [58.51674, 42.30348], [58.40688, 42.29535], [58.3492, 42.43335], [57.99214, 42.50021], [57.90975, 42.4374], [57.92897, 42.24047], [57.84932, 42.18555], [57.6296, 42.16519], [57.30275, 42.14076], [57.03633, 41.92043], [56.96218, 41.80383], [57.03359, 41.41777], [57.13796, 41.36625], [57.03423, 41.25435], [56.00314, 41.32584], [55.45471, 41.25609], [54.95182, 41.92424], [54.20635, 42.38477], [52.97575, 42.1308], [52.47884, 41.78034], [52.26048, 41.69249], [51.7708, 40.29239], [53.89734, 37.3464], [54.24565, 37.32047], [54.36211, 37.34912], [54.58664, 37.45809], [54.67247, 37.43532], [54.77822, 37.51597], [54.81804, 37.61285], [54.77684, 37.62264], [54.851, 37.75739], [55.13412, 37.94705], [55.44152, 38.08564], [55.76561, 38.12238], [55.97847, 38.08024], [56.33278, 38.08132], [56.32454, 38.18502], [56.43303, 38.26054], [56.62255, 38.24005], [56.73928, 38.27887], [57.03453, 38.18717], [57.21169, 38.28965], [57.37236, 38.09321], [57.35042, 37.98546], [57.79534, 37.89299], [58.21399, 37.77281], [58.22999, 37.6856], [58.39959, 37.63134], [58.47786, 37.6433], [58.5479, 37.70526], [58.6921, 37.64548], [58.9338, 37.67374], [59.22905, 37.51161], [59.33507, 37.53146], [59.39797, 37.47892], [59.39385, 37.34257], [59.55178, 37.13594], [59.74678, 37.12499], [60.00768, 37.04102], [60.34767, 36.63214], [61.14516, 36.64644], [61.18187, 36.55348], [61.1393, 36.38782], [61.22719, 36.12759], [61.12007, 35.95992], [61.22444, 35.92879], [61.26152, 35.80749], [61.22719, 35.67038], [61.27371, 35.61482], [61.58742, 35.43803], [61.77693, 35.41341], [61.97743, 35.4604], [62.05709, 35.43803], [62.15871, 35.33278], [62.29191, 35.25964], [62.29878, 35.13312], [62.48006, 35.28796], [62.62288, 35.22067], [62.74098, 35.25432], [62.90853, 35.37086], [63.0898, 35.43131], [63.12276, 35.53196], [63.10079, 35.63024], [63.23262, 35.67487], [63.10318, 35.81782], [63.12276, 35.86208], [63.29579, 35.85985], [63.53475, 35.90881], [63.56496, 35.95106], [63.98519, 36.03773], [64.05385, 36.10433], [64.43288, 36.24401], [64.57295, 36.34362], [64.62514, 36.44311], [64.61141, 36.6351], [64.97945, 37.21913], [65.51778, 37.23881], [65.64263, 37.34388], [65.64137, 37.45061], [65.72274, 37.55438], [66.30993, 37.32409], [66.55743, 37.35409], [66.52303, 37.39827], [66.65761, 37.45497], [66.52852, 37.58568], [66.53676, 37.80084], [66.67684, 37.96776], [66.56697, 38.0435], [66.41042, 38.02403], [66.24013, 38.16238], [65.83913, 38.25733], [65.55873, 38.29052], [64.32576, 38.98691], [64.19086, 38.95561], [63.70778, 39.22349], [63.6913, 39.27666], [62.43337, 39.98528], [62.34273, 40.43206], [62.11751, 40.58242], [61.87856, 41.12257], [61.4446, 41.29407], [61.39732, 41.19873], [61.33199, 41.14946], [61.22212, 41.14946], [61.03261, 41.25691], [60.5078, 41.21694]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TN\", iso1A3: \"TUN\", iso1N3: \"788\", wikidata: \"Q948\", nameEn: \"Tunisia\", groups: [\"015\", \"002\", \"UN\"], callingCodes: [\"216\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[11.2718, 37.6713], [7.89009, 38.19924], [8.59123, 37.14286], [8.64044, 36.9401], [8.62972, 36.86499], [8.67706, 36.8364], [8.57613, 36.78062], [8.46537, 36.7706], [8.47609, 36.66607], [8.16167, 36.48817], [8.18936, 36.44939], [8.40731, 36.42208], [8.2626, 35.91733], [8.26472, 35.73669], [8.35371, 35.66373], [8.36086, 35.47774], [8.30329, 35.29884], [8.47318, 35.23376], [8.3555, 35.10007], [8.30727, 34.95378], [8.25189, 34.92009], [8.29655, 34.72798], [8.20482, 34.57575], [7.86264, 34.3987], [7.81242, 34.21841], [7.74207, 34.16492], [7.66174, 34.20167], [7.52851, 34.06493], [7.54088, 33.7726], [7.73687, 33.42114], [7.83028, 33.18851], [8.11433, 33.10175], [8.1179, 33.05086], [8.31895, 32.83483], [8.35999, 32.50101], [9.07483, 32.07865], [9.55544, 30.23971], [9.76848, 30.34366], [9.88152, 30.34074], [10.29516, 30.90337], [10.12239, 31.42098], [10.31364, 31.72648], [10.48497, 31.72956], [10.62788, 31.96629], [10.7315, 31.97235], [11.04234, 32.2145], [11.53898, 32.4138], [11.57828, 32.48013], [11.46037, 32.6307], [11.51549, 33.09826], [11.55852, 33.1409], [11.58941, 33.36891], [11.2718, 37.6713]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TO\", iso1A3: \"TON\", iso1N3: \"776\", wikidata: \"Q678\", nameEn: \"Tonga\", groups: [\"061\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"676\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-176.74538, -22.89767], [-180, -22.90585], [-180, -24.21376], [-173.10761, -24.19665], [-173.13438, -14.94228], [-176.76826, -14.95183], [-176.74538, -22.89767]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TR\", iso1A3: \"TUR\", iso1N3: \"792\", wikidata: \"Q43\", nameEn: \"Turkey\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"90\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[41.54366, 41.52185], [40.89217, 41.72528], [34.8305, 42.4581], [28.32297, 41.98371], [28.02971, 41.98066], [27.91479, 41.97902], [27.83492, 41.99709], [27.81235, 41.94803], [27.69949, 41.97515], [27.55191, 41.90928], [27.52379, 41.93756], [27.45478, 41.96591], [27.27411, 42.10409], [27.22376, 42.10152], [27.19251, 42.06028], [27.08486, 42.08735], [27.03277, 42.0809], [26.95638, 42.00741], [26.79143, 41.97386], [26.62996, 41.97644], [26.56051, 41.92995], [26.57961, 41.90024], [26.53968, 41.82653], [26.36952, 41.82265], [26.33589, 41.76802], [26.32952, 41.73637], [26.35957, 41.71149], [26.47958, 41.67037], [26.5209, 41.62592], [26.59196, 41.60491], [26.59742, 41.48058], [26.61767, 41.42281], [26.62997, 41.34613], [26.5837, 41.32131], [26.5209, 41.33993], [26.39861, 41.25053], [26.32259, 41.24929], [26.31928, 41.07386], [26.3606, 41.02027], [26.33297, 40.98388], [26.35894, 40.94292], [26.32259, 40.94042], [26.28623, 40.93005], [26.29441, 40.89119], [26.26169, 40.9168], [26.20856, 40.86048], [26.21351, 40.83298], [26.15685, 40.80709], [26.12854, 40.77339], [26.12495, 40.74283], [26.08638, 40.73214], [26.0754, 40.72772], [26.03489, 40.73051], [25.94795, 40.72797], [26.04292, 40.3958], [25.61285, 40.17161], [25.94257, 39.39358], [26.43357, 39.43096], [26.70773, 39.0312], [26.61814, 38.81372], [26.21136, 38.65436], [26.32173, 38.48731], [26.24183, 38.44695], [26.21136, 38.17558], [27.05537, 37.9131], [27.16428, 37.72343], [26.99377, 37.69034], [26.95583, 37.64989], [27.14757, 37.32], [27.20312, 36.94571], [27.45627, 36.9008], [27.24613, 36.71622], [27.46117, 36.53789], [27.89482, 36.69898], [27.95037, 36.46155], [28.23708, 36.56812], [29.30783, 36.01033], [29.48192, 36.18377], [29.61002, 36.1731], [29.61805, 36.14179], [29.69611, 36.10365], [29.73302, 35.92555], [32.82353, 35.70297], [35.51152, 36.10954], [35.931, 35.92109], [35.98499, 35.94107], [36.00514, 35.94113], [36.01844, 35.92403], [35.99829, 35.88242], [36.11827, 35.85923], [36.13919, 35.83692], [36.14029, 35.81015], [36.1623, 35.80925], [36.17441, 35.92076], [36.19973, 35.95195], [36.25366, 35.96264], [36.27678, 35.94839], [36.29769, 35.96086], [36.28338, 36.00273], [36.30099, 36.00985], [36.33956, 35.98687], [36.37474, 36.01163], [36.39206, 36.22088], [36.4617, 36.20461], [36.50463, 36.2419], [36.6125, 36.22592], [36.68672, 36.23677], [36.65653, 36.33861], [36.6081, 36.33772], [36.54206, 36.49539], [36.58829, 36.58295], [36.57398, 36.65186], [36.62681, 36.71189], [36.61581, 36.74629], [36.66727, 36.82901], [36.99557, 36.75997], [36.99886, 36.74012], [37.04399, 36.73483], [37.04619, 36.71101], [37.01647, 36.69512], [37.02088, 36.66422], [37.08279, 36.63495], [37.10894, 36.6704], [37.16177, 36.66069], [37.21988, 36.6736], [37.47253, 36.63243], [37.49103, 36.66904], [37.68048, 36.75065], [37.81974, 36.76055], [38.21064, 36.91842], [38.38859, 36.90064], [38.55908, 36.84429], [38.74042, 36.70629], [39.03217, 36.70911], [39.21538, 36.66834], [39.81589, 36.75538], [40.69136, 37.0996], [40.90856, 37.13147], [41.21937, 37.07665], [41.515, 37.08084], [42.00894, 37.17209], [42.18225, 37.28569], [42.19301, 37.31323], [42.2112, 37.32491], [42.22257, 37.31395], [42.22381, 37.30238], [42.20454, 37.28715], [42.21548, 37.28026], [42.23683, 37.2863], [42.26039, 37.27017], [42.2824, 37.2798], [42.34735, 37.22548], [42.32313, 37.17814], [42.35724, 37.10998], [42.56725, 37.14878], [42.78887, 37.38615], [42.93705, 37.32015], [43.11403, 37.37436], [43.30083, 37.30629], [43.33508, 37.33105], [43.50787, 37.24436], [43.56702, 37.25675], [43.63085, 37.21957], [43.7009, 37.23692], [43.8052, 37.22825], [43.82699, 37.19477], [43.84878, 37.22205], [43.90949, 37.22453], [44.02002, 37.33229], [44.13521, 37.32486], [44.2613, 37.25055], [44.27998, 37.16501], [44.22239, 37.15756], [44.18503, 37.09551], [44.25975, 36.98119], [44.30645, 36.97373], [44.35937, 37.02843], [44.35315, 37.04955], [44.38117, 37.05825], [44.42631, 37.05825], [44.63179, 37.19229], [44.76698, 37.16162], [44.78319, 37.1431], [44.7868, 37.16644], [44.75986, 37.21549], [44.81021, 37.2915], [44.58449, 37.45018], [44.61401, 37.60165], [44.56887, 37.6429], [44.62096, 37.71985], [44.55498, 37.783], [44.45948, 37.77065], [44.3883, 37.85433], [44.22509, 37.88859], [44.42476, 38.25763], [44.50115, 38.33939], [44.44386, 38.38295], [44.38309, 38.36117], [44.3119, 38.37887], [44.3207, 38.49799], [44.32058, 38.62752], [44.28065, 38.6465], [44.26155, 38.71427], [44.30322, 38.81581], [44.18863, 38.93881], [44.20946, 39.13975], [44.1043, 39.19842], [44.03667, 39.39223], [44.22452, 39.4169], [44.29818, 39.378], [44.37921, 39.4131], [44.42832, 39.4131], [44.41849, 39.56659], [44.48111, 39.61579], [44.47298, 39.68788], [44.6137, 39.78393], [44.65422, 39.72163], [44.71806, 39.71124], [44.81043, 39.62677], [44.80977, 39.65768], [44.75779, 39.7148], [44.61845, 39.8281], [44.46635, 39.97733], [44.26973, 40.04866], [44.1778, 40.02845], [44.1057, 40.03555], [43.92307, 40.01787], [43.65688, 40.11199], [43.65221, 40.14889], [43.71136, 40.16673], [43.59928, 40.34019], [43.60862, 40.43267], [43.54791, 40.47413], [43.63664, 40.54159], [43.7425, 40.66805], [43.74872, 40.7365], [43.67712, 40.84846], [43.67712, 40.93084], [43.58683, 40.98961], [43.47319, 41.02251], [43.44984, 41.0988], [43.4717, 41.12611], [43.44973, 41.17666], [43.36118, 41.2028], [43.23096, 41.17536], [43.1945, 41.25242], [43.13373, 41.25503], [43.21707, 41.30331], [43.02956, 41.37891], [42.8785, 41.50516], [42.84899, 41.47265], [42.78995, 41.50126], [42.84471, 41.58912], [42.72794, 41.59714], [42.59202, 41.58183], [42.51772, 41.43606], [42.26387, 41.49346], [41.95134, 41.52466], [41.81939, 41.43621], [41.7124, 41.47417], [41.7148, 41.4932], [41.54366, 41.52185]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TT\", iso1A3: \"TTO\", iso1N3: \"780\", wikidata: \"Q754\", nameEn: \"Trinidad and Tobago\", groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", callingCodes: [\"1 868\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-61.62505, 11.18974], [-62.08693, 10.04435], [-60.89962, 9.81445], [-60.07172, 11.77667], [-61.62505, 11.18974]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TV\", iso1A3: \"TUV\", iso1N3: \"798\", wikidata: \"Q672\", nameEn: \"Tuvalu\", groups: [\"061\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"688\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[174, -5], [174, -11.5], [179.99999, -11.5], [179.99999, -5], [174, -5]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TW\", iso1A3: \"TWN\", iso1N3: \"158\", wikidata: \"Q865\", nameEn: \"Taiwan\", aliases: [\"RC\"], groups: [\"030\", \"142\"], callingCodes: [\"886\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[121.8109, 21.77688], [122.26612, 25.98197], [120.5128, 26.536], [120.0693, 26.3959], [119.78816, 26.2348], [119.98511, 25.37624], [119.42295, 25.0886], [118.6333, 24.46259], [118.42453, 24.54644], [118.35291, 24.51645], [118.28244, 24.51231], [118.11703, 24.39734], [120.69238, 21.52331], [121.8109, 21.77688]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"TZ\", iso1A3: \"TZA\", iso1N3: \"834\", wikidata: \"Q924\", nameEn: \"Tanzania\", groups: [\"014\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"255\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[30.80408, -0.99911], [30.76635, -0.9852], [30.70631, -1.01175], [30.64166, -1.06601], [30.47194, -1.0555], [30.45116, -1.10641], [30.50889, -1.16412], [30.57123, -1.33264], [30.71974, -1.43244], [30.84079, -1.64652], [30.80802, -1.91477], [30.89303, -2.08223], [30.83915, -2.35795], [30.54501, -2.41404], [30.41789, -2.66266], [30.52747, -2.65841], [30.40662, -2.86151], [30.4987, -2.9573], [30.57926, -2.89791], [30.6675, -2.98987], [30.83823, -2.97837], [30.84165, -3.25152], [30.45915, -3.56532], [30.22042, -4.01738], [30.03323, -4.26631], [29.88172, -4.35743], [29.82885, -4.36153], [29.77289, -4.41733], [29.75109, -4.45836], [29.63827, -4.44681], [29.43673, -4.44845], [29.52552, -6.2731], [30.2567, -7.14121], [30.79243, -8.27382], [31.00796, -8.58615], [31.37533, -8.60769], [31.57147, -8.70619], [31.57147, -8.81388], [31.71158, -8.91386], [31.81587, -8.88618], [31.94663, -8.93846], [31.94196, -9.02303], [31.98866, -9.07069], [32.08206, -9.04609], [32.16146, -9.05993], [32.25486, -9.13371], [32.43543, -9.11988], [32.49147, -9.14754], [32.53661, -9.24281], [32.75611, -9.28583], [32.76233, -9.31963], [32.95389, -9.40138], [32.99397, -9.36712], [33.14925, -9.49322], [33.31581, -9.48554], [33.48052, -9.62442], [33.76677, -9.58516], [33.93298, -9.71647], [33.9638, -9.62206], [33.95829, -9.54066], [34.03865, -9.49398], [34.54499, -10.0678], [34.51911, -10.12279], [34.57581, -10.56271], [34.65946, -10.6828], [34.67047, -10.93796], [34.61161, -11.01611], [34.63305, -11.11731], [34.79375, -11.32245], [34.91153, -11.39799], [34.96296, -11.57354], [35.63599, -11.55927], [35.82767, -11.41081], [36.19094, -11.57593], [36.19094, -11.70008], [36.62068, -11.72884], [36.80309, -11.56836], [37.3936, -11.68949], [37.76614, -11.53352], [37.8388, -11.3123], [37.93618, -11.26228], [38.21598, -11.27289], [38.47258, -11.4199], [38.88996, -11.16978], [39.24395, -11.17433], [39.58249, -10.96043], [40.00295, -10.80255], [40.44265, -10.4618], [40.74206, -10.25691], [40.14328, -4.64201], [39.62121, -4.68136], [39.44306, -4.93877], [39.21631, -4.67835], [37.81321, -3.69179], [37.75036, -3.54243], [37.63099, -3.50723], [37.5903, -3.42735], [37.71745, -3.304], [37.67199, -3.06222], [34.0824, -1.02264], [34.03084, -1.05101], [34.02286, -1.00779], [33.93107, -0.99298], [30.80408, -0.99911]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"UA\", iso1A3: \"UKR\", iso1N3: \"804\", wikidata: \"Q212\", nameEn: \"Ukraine\", groups: [\"151\", \"150\", \"UN\"], callingCodes: [\"380\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[33.57318, 46.10317], [33.61467, 46.13561], [33.63854, 46.14147], [33.61517, 46.22615], [33.646, 46.23028], [33.74047, 46.18555], [33.79715, 46.20482], [33.85234, 46.19863], [33.91549, 46.15938], [34.05272, 46.10838], [34.07311, 46.11769], [34.12929, 46.10494], [34.181, 46.06804], [34.25111, 46.0532], [34.33912, 46.06114], [34.41221, 46.00245], [34.44155, 45.95995], [34.48729, 45.94267], [34.52011, 45.95097], [34.55889, 45.99347], [34.60861, 45.99347], [34.66679, 45.97136], [34.75479, 45.90705], [34.80153, 45.90047], [34.79905, 45.81009], [34.96015, 45.75634], [35.23066, 45.79231], [37.62608, 46.82615], [38.12112, 46.86078], [38.3384, 46.98085], [38.22955, 47.12069], [38.23049, 47.2324], [38.32112, 47.2585], [38.33074, 47.30508], [38.22225, 47.30788], [38.28954, 47.39255], [38.28679, 47.53552], [38.35062, 47.61631], [38.76379, 47.69346], [38.79628, 47.81109], [38.87979, 47.87719], [39.73935, 47.82876], [39.82213, 47.96396], [39.77544, 48.04206], [39.88256, 48.04482], [39.83724, 48.06501], [39.94847, 48.22811], [40.00752, 48.22445], [39.99241, 48.31768], [39.97325, 48.31399], [39.9693, 48.29904], [39.95248, 48.29972], [39.91465, 48.26743], [39.90041, 48.3049], [39.84273, 48.30947], [39.84136, 48.33321], [39.94847, 48.35055], [39.88794, 48.44226], [39.86196, 48.46633], [39.84548, 48.57821], [39.79764, 48.58668], [39.67226, 48.59368], [39.71765, 48.68673], [39.73104, 48.7325], [39.79466, 48.83739], [39.97182, 48.79398], [40.08168, 48.87443], [40.03636, 48.91957], [39.98967, 48.86901], [39.78368, 48.91596], [39.74874, 48.98675], [39.72649, 48.9754], [39.71353, 48.98959], [39.6683, 48.99454], [39.6836, 49.05121], [39.93437, 49.05709], [40.01988, 49.1761], [40.22176, 49.25683], [40.18331, 49.34996], [40.14912, 49.37681], [40.1141, 49.38798], [40.03087, 49.45452], [40.03636, 49.52321], [40.16683, 49.56865], [40.13249, 49.61672], [39.84548, 49.56064], [39.65047, 49.61761], [39.59142, 49.73758], [39.44496, 49.76067], [39.27968, 49.75976], [39.1808, 49.88911], [38.9391, 49.79524], [38.90477, 49.86787], [38.73311, 49.90238], [38.68677, 50.00904], [38.65688, 49.97176], [38.35408, 50.00664], [38.32524, 50.08866], [38.18517, 50.08161], [38.21675, 49.98104], [38.02999, 49.90592], [38.02999, 49.94482], [37.90776, 50.04194], [37.79515, 50.08425], [37.75807, 50.07896], [37.61113, 50.21976], [37.62879, 50.24481], [37.62486, 50.29966], [37.47243, 50.36277], [37.48204, 50.46079], [37.08468, 50.34935], [36.91762, 50.34963], [36.69377, 50.26982], [36.64571, 50.218], [36.56655, 50.2413], [36.58371, 50.28563], [36.47817, 50.31457], [36.30101, 50.29088], [36.20763, 50.3943], [36.06893, 50.45205], [35.8926, 50.43829], [35.80388, 50.41356], [35.73659, 50.35489], [35.61711, 50.35707], [35.58003, 50.45117], [35.47463, 50.49247], [35.39464, 50.64751], [35.48116, 50.66405], [35.47704, 50.77274], [35.41367, 50.80227], [35.39307, 50.92145], [35.32598, 50.94524], [35.40837, 51.04119], [35.31774, 51.08434], [35.20375, 51.04723], [35.12685, 51.16191], [35.14058, 51.23162], [34.97304, 51.2342], [34.82472, 51.17483], [34.6874, 51.18], [34.6613, 51.25053], [34.38802, 51.2746], [34.31661, 51.23936], [34.23009, 51.26429], [34.33446, 51.363], [34.22048, 51.4187], [34.30562, 51.5205], [34.17599, 51.63253], [34.07765, 51.67065], [34.42922, 51.72852], [34.41136, 51.82793], [34.09413, 52.00835], [34.11199, 52.14087], [34.05239, 52.20132], [33.78789, 52.37204], [33.55718, 52.30324], [33.48027, 52.31499], [33.51323, 52.35779], [33.18913, 52.3754], [32.89937, 52.2461], [32.85405, 52.27888], [32.69475, 52.25535], [32.54781, 52.32423], [32.3528, 52.32842], [32.38988, 52.24946], [32.33083, 52.23685], [32.34044, 52.1434], [32.2777, 52.10266], [32.23331, 52.08085], [32.08813, 52.03319], [31.92159, 52.05144], [31.96141, 52.08015], [31.85018, 52.11305], [31.81722, 52.09955], [31.7822, 52.11406], [31.38326, 52.12991], [31.25142, 52.04131], [31.13332, 52.1004], [30.95589, 52.07775], [30.90897, 52.00699], [30.76443, 51.89739], [30.68804, 51.82806], [30.51946, 51.59649], [30.64992, 51.35014], [30.56203, 51.25655], [30.36153, 51.33984], [30.34642, 51.42555], [30.17888, 51.51025], [29.77376, 51.4461], [29.7408, 51.53417], [29.54372, 51.48372], [29.49773, 51.39814], [29.42357, 51.4187], [29.32881, 51.37843], [29.25191, 51.49828], [29.25603, 51.57089], [29.20659, 51.56918], [29.16402, 51.64679], [29.1187, 51.65872], [28.99098, 51.56833], [28.95528, 51.59222], [28.81795, 51.55552], [28.76027, 51.48802], [28.78224, 51.45294], [28.75615, 51.41442], [28.73143, 51.46236], [28.69161, 51.44695], [28.64429, 51.5664], [28.47051, 51.59734], [28.37592, 51.54505], [28.23452, 51.66988], [28.10658, 51.57857], [27.95827, 51.56065], [27.91844, 51.61952], [27.85253, 51.62293], [27.76052, 51.47604], [27.67125, 51.50854], [27.71932, 51.60672], [27.55727, 51.63486], [27.51058, 51.5854], [27.47212, 51.61184], [27.24828, 51.60161], [27.26613, 51.65957], [27.20948, 51.66713], [27.20602, 51.77291], [26.99422, 51.76933], [26.9489, 51.73788], [26.80043, 51.75777], [26.69759, 51.82284], [26.46962, 51.80501], [26.39367, 51.87315], [26.19084, 51.86781], [26.00408, 51.92967], [25.83217, 51.92587], [25.80574, 51.94556], [25.73673, 51.91973], [25.46163, 51.92205], [25.20228, 51.97143], [24.98784, 51.91273], [24.37123, 51.88222], [24.29021, 51.80841], [24.3163, 51.75063], [24.13075, 51.66979], [23.99907, 51.58369], [23.8741, 51.59734], [23.91118, 51.63316], [23.7766, 51.66809], [23.60906, 51.62122], [23.6736, 51.50255], [23.62751, 51.50512], [23.69905, 51.40871], [23.63858, 51.32182], [23.80678, 51.18405], [23.90376, 51.07697], [23.92217, 51.00836], [24.04576, 50.90196], [24.14524, 50.86128], [24.0952, 50.83262], [23.99254, 50.83847], [23.95925, 50.79271], [24.0595, 50.71625], [24.0996, 50.60752], [24.07048, 50.5071], [24.03668, 50.44507], [23.99563, 50.41289], [23.79445, 50.40481], [23.71382, 50.38248], [23.67635, 50.33385], [23.28221, 50.0957], [22.99329, 49.84249], [22.83179, 49.69875], [22.80261, 49.69098], [22.78304, 49.65543], [22.64534, 49.53094], [22.69444, 49.49378], [22.748, 49.32759], [22.72009, 49.20288], [22.86336, 49.10513], [22.89122, 49.00725], [22.56155, 49.08865], [22.54338, 49.01424], [22.48296, 48.99172], [22.42934, 48.92857], [22.34151, 48.68893], [22.21379, 48.6218], [22.16023, 48.56548], [22.14689, 48.4005], [22.2083, 48.42534], [22.38133, 48.23726], [22.49806, 48.25189], [22.59007, 48.15121], [22.58733, 48.10813], [22.66835, 48.09162], [22.73427, 48.12005], [22.81804, 48.11363], [22.87847, 48.04665], [22.84276, 47.98602], [22.89849, 47.95851], [22.94301, 47.96672], [22.92241, 48.02002], [23.0158, 47.99338], [23.08858, 48.00716], [23.1133, 48.08061], [23.15999, 48.12188], [23.27397, 48.08245], [23.33577, 48.0237], [23.4979, 47.96858], [23.52803, 48.01818], [23.5653, 48.00499], [23.63894, 48.00293], [23.66262, 47.98786], [23.75188, 47.99705], [23.80904, 47.98142], [23.8602, 47.9329], [23.89352, 47.94512], [23.94192, 47.94868], [23.96337, 47.96672], [23.98553, 47.96076], [24.00801, 47.968], [24.02999, 47.95087], [24.06466, 47.95317], [24.11281, 47.91487], [24.22566, 47.90231], [24.34926, 47.9244], [24.43578, 47.97131], [24.61994, 47.95062], [24.70632, 47.84428], [24.81893, 47.82031], [24.88896, 47.7234], [25.11144, 47.75203], [25.23778, 47.89403], [25.63878, 47.94924], [25.77723, 47.93919], [26.05901, 47.9897], [26.17711, 47.99246], [26.33504, 48.18418], [26.55202, 48.22445], [26.62823, 48.25804], [26.6839, 48.35828], [26.79239, 48.29071], [26.82809, 48.31629], [26.71274, 48.40388], [26.85556, 48.41095], [26.93384, 48.36558], [27.03821, 48.37653], [27.0231, 48.42485], [27.08078, 48.43214], [27.13434, 48.37288], [27.27855, 48.37534], [27.32159, 48.4434], [27.37604, 48.44398], [27.37741, 48.41026], [27.44333, 48.41209], [27.46942, 48.454], [27.5889, 48.49224], [27.59027, 48.46311], [27.6658, 48.44034], [27.74422, 48.45926], [27.79225, 48.44244], [27.81902, 48.41874], [27.87533, 48.4037], [27.88391, 48.36699], [27.95883, 48.32368], [28.04527, 48.32661], [28.09873, 48.3124], [28.07504, 48.23494], [28.17666, 48.25963], [28.19314, 48.20749], [28.2856, 48.23202], [28.32508, 48.23384], [28.35519, 48.24957], [28.36996, 48.20543], [28.34912, 48.1787], [28.30586, 48.1597], [28.30609, 48.14018], [28.34009, 48.13147], [28.38712, 48.17567], [28.43701, 48.15832], [28.42454, 48.12047], [28.48428, 48.0737], [28.53921, 48.17453], [28.69896, 48.13106], [28.85232, 48.12506], [28.8414, 48.03392], [28.9306, 47.96255], [29.1723, 47.99013], [29.19839, 47.89261], [29.27804, 47.88893], [29.20663, 47.80367], [29.27255, 47.79953], [29.22242, 47.73607], [29.22414, 47.60012], [29.11743, 47.55001], [29.18603, 47.43387], [29.3261, 47.44664], [29.39889, 47.30179], [29.47854, 47.30366], [29.48678, 47.36043], [29.5733, 47.36508], [29.59665, 47.25521], [29.54996, 47.24962], [29.57696, 47.13581], [29.49732, 47.12878], [29.53044, 47.07851], [29.61038, 47.09932], [29.62137, 47.05069], [29.57056, 46.94766], [29.72986, 46.92234], [29.75458, 46.8604], [29.87405, 46.88199], [29.98814, 46.82358], [29.94522, 46.80055], [29.9743, 46.75325], [29.94409, 46.56002], [29.88916, 46.54302], [30.02511, 46.45132], [30.16794, 46.40967], [30.09103, 46.38694], [29.94114, 46.40114], [29.88329, 46.35851], [29.74496, 46.45605], [29.66359, 46.4215], [29.6763, 46.36041], [29.5939, 46.35472], [29.49914, 46.45889], [29.35357, 46.49505], [29.24886, 46.37912], [29.23547, 46.55435], [29.02409, 46.49582], [29.01241, 46.46177], [28.9306, 46.45699], [29.004, 46.31495], [28.98478, 46.31803], [28.94953, 46.25852], [29.06656, 46.19716], [28.94643, 46.09176], [29.00613, 46.04962], [28.98004, 46.00385], [28.74383, 45.96664], [28.78503, 45.83475], [28.69852, 45.81753], [28.70401, 45.78019], [28.52823, 45.73803], [28.47879, 45.66994], [28.51587, 45.6613], [28.54196, 45.58062], [28.49252, 45.56716], [28.51449, 45.49982], [28.43072, 45.48538], [28.41836, 45.51715], [28.30201, 45.54744], [28.21139, 45.46895], [28.28504, 45.43907], [28.34554, 45.32102], [28.5735, 45.24759], [28.71358, 45.22631], [28.78911, 45.24179], [28.81383, 45.3384], [28.94292, 45.28045], [28.96077, 45.33164], [29.24779, 45.43388], [29.42632, 45.44545], [29.59798, 45.38857], [29.68175, 45.26885], [29.65428, 45.25629], [29.69272, 45.19227], [30.04414, 45.08461], [31.62627, 45.50633], [33.54017, 46.0123], [33.59087, 46.06013], [33.57318, 46.10317]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"UG\", iso1A3: \"UGA\", iso1N3: \"800\", wikidata: \"Q1036\", nameEn: \"Uganda\", groups: [\"014\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"256\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[33.93107, -0.99298], [33.9264, -0.54188], [33.98449, -0.13079], [33.90936, 0.10581], [34.10067, 0.36372], [34.08727, 0.44713], [34.11408, 0.48884], [34.13493, 0.58118], [34.20196, 0.62289], [34.27345, 0.63182], [34.31516, 0.75693], [34.40041, 0.80266], [34.43349, 0.85254], [34.52369, 1.10692], [34.57427, 1.09868], [34.58029, 1.14712], [34.67562, 1.21265], [34.80223, 1.22754], [34.82606, 1.26626], [34.82606, 1.30944], [34.7918, 1.36752], [34.87819, 1.5596], [34.92734, 1.56109], [34.9899, 1.6668], [34.98692, 1.97348], [34.90947, 2.42447], [34.95267, 2.47209], [34.77244, 2.70272], [34.78137, 2.76223], [34.73967, 2.85447], [34.65774, 2.8753], [34.60114, 2.93034], [34.56242, 3.11478], [34.45815, 3.18319], [34.40006, 3.37949], [34.41794, 3.44342], [34.39112, 3.48802], [34.44922, 3.51627], [34.45815, 3.67385], [34.15429, 3.80464], [34.06046, 4.15235], [33.9873, 4.23316], [33.51264, 3.75068], [33.18356, 3.77812], [33.02852, 3.89296], [32.89746, 3.81339], [32.72021, 3.77327], [32.41337, 3.748], [32.20782, 3.6053], [32.19888, 3.50867], [32.08866, 3.53543], [32.08491, 3.56287], [32.05187, 3.589], [31.95907, 3.57408], [31.96205, 3.6499], [31.86821, 3.78664], [31.81459, 3.82083], [31.72075, 3.74354], [31.50776, 3.63652], [31.50478, 3.67814], [31.29476, 3.8015], [31.16666, 3.79853], [30.97601, 3.693], [30.85153, 3.48867], [30.94081, 3.50847], [30.93486, 3.40737], [30.84251, 3.26908], [30.77101, 3.04897], [30.8574, 2.9508], [30.8857, 2.83923], [30.75612, 2.5863], [30.74271, 2.43601], [30.83059, 2.42559], [30.91102, 2.33332], [30.96911, 2.41071], [31.06593, 2.35862], [31.07934, 2.30207], [31.12104, 2.27676], [31.1985, 2.29462], [31.20148, 2.2217], [31.28042, 2.17853], [31.30127, 2.11006], [30.48503, 1.21675], [30.24671, 1.14974], [30.22139, 0.99635], [30.1484, 0.89805], [29.98307, 0.84295], [29.95477, 0.64486], [29.97413, 0.52124], [29.87284, 0.39166], [29.81922, 0.16824], [29.77454, 0.16675], [29.7224, 0.07291], [29.72687, -0.08051], [29.65091, -0.46777], [29.67474, -0.47969], [29.67176, -0.55714], [29.62708, -0.71055], [29.63006, -0.8997], [29.58388, -0.89821], [29.59061, -1.39016], [29.82657, -1.31187], [29.912, -1.48269], [30.16369, -1.34303], [30.35212, -1.06896], [30.47194, -1.0555], [30.64166, -1.06601], [30.70631, -1.01175], [30.76635, -0.9852], [30.80408, -0.99911], [33.93107, -0.99298]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"UM\", iso1A3: \"UMI\", iso1N3: \"581\", wikidata: \"Q16645\", nameEn: \"United States Minor Outlying Islands\", country: \"US\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"UN\", wikidata: \"Q1065\", nameEn: \"United Nations\", level: \"unitedNations\", isoStatus: \"excRes\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"US\", iso1A3: \"USA\", iso1N3: \"840\", wikidata: \"Q30\", nameEn: \"United States of America\" }, geometry: null },\n  { type: \"Feature\", properties: { iso1A2: \"UY\", iso1A3: \"URY\", iso1N3: \"858\", wikidata: \"Q77\", nameEn: \"Uruguay\", groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"598\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-57.65132, -30.19229], [-57.61478, -30.25165], [-57.64859, -30.35095], [-57.89115, -30.49572], [-57.8024, -30.77193], [-57.89476, -30.95994], [-57.86729, -31.06352], [-57.9908, -31.34924], [-57.98127, -31.3872], [-58.07569, -31.44916], [-58.0023, -31.53084], [-58.00076, -31.65016], [-58.20252, -31.86966], [-58.10036, -32.25338], [-58.22362, -32.52416], [-58.1224, -32.98842], [-58.40475, -33.11777], [-58.44442, -33.84033], [-58.34425, -34.15035], [-57.83001, -34.69099], [-54.78916, -36.21945], [-52.83257, -34.01481], [-53.37138, -33.74313], [-53.39593, -33.75169], [-53.44031, -33.69344], [-53.52794, -33.68908], [-53.53459, -33.16843], [-53.1111, -32.71147], [-53.37671, -32.57005], [-53.39572, -32.58596], [-53.76024, -32.0751], [-54.17384, -31.86168], [-55.50821, -30.91349], [-55.50841, -30.9027], [-55.51862, -30.89828], [-55.52712, -30.89997], [-55.53276, -30.90218], [-55.53431, -30.89714], [-55.54572, -30.89051], [-55.55218, -30.88193], [-55.55373, -30.8732], [-55.5634, -30.8686], [-55.58866, -30.84117], [-55.87388, -31.05053], [-56.4619, -30.38457], [-56.4795, -30.3899], [-56.49267, -30.39471], [-56.90236, -30.02578], [-57.22502, -30.26121], [-57.65132, -30.19229]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"UZ\", iso1A3: \"UZB\", iso1N3: \"860\", wikidata: \"Q265\", nameEn: \"Uzbekistan\", groups: [\"143\", \"142\", \"UN\"], callingCodes: [\"998\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[65.85194, 42.85481], [65.53277, 43.31856], [65.18666, 43.48835], [64.96464, 43.74748], [64.53885, 43.56941], [63.34656, 43.64003], [62.01711, 43.51008], [61.01475, 44.41383], [58.59711, 45.58671], [55.97842, 44.99622], [55.97832, 44.99622], [55.97822, 44.99617], [55.97811, 44.99617], [55.97801, 44.99612], [55.97801, 44.99607], [55.97791, 44.99607], [55.9778, 44.99607], [55.9777, 44.99601], [55.9777, 44.99596], [55.9776, 44.99591], [55.97749, 44.99591], [55.97739, 44.99591], [55.97739, 44.99586], [55.97729, 44.99586], [55.97718, 44.99581], [55.97708, 44.99576], [55.97698, 44.9957], [55.97698, 44.99565], [55.97687, 44.9956], [55.97677, 44.9956], [55.97677, 44.99555], [55.97677, 44.9955], [55.97667, 44.99545], [55.97656, 44.99539], [55.97646, 44.99534], [55.97646, 44.99529], [55.97636, 44.99524], [55.97636, 44.99519], [55.97625, 44.99514], [55.97615, 44.99508], [55.97615, 44.99503], [55.97615, 44.99498], [55.97615, 44.99493], [55.97615, 44.99483], [55.97615, 44.99477], [55.97605, 44.99477], [55.97605, 44.99467], [55.97605, 44.99462], [55.97605, 44.99457], [55.97605, 44.99452], [55.97594, 44.99446], [55.97584, 44.99441], [55.97584, 44.99436], [55.97584, 44.99431], [55.97584, 44.99426], [55.97584, 44.99421], [55.97584, 44.99415], [55.97584, 44.99405], [55.97584, 44.994], [55.97584, 44.9939], [55.97584, 44.99384], [55.97584, 44.99374], [55.97584, 44.99369], [55.97584, 44.99359], [55.97584, 44.99353], [55.97584, 44.99348], [55.97584, 44.99343], [55.97584, 44.99338], [55.97584, 44.99328], [55.97584, 44.99322], [56.00314, 41.32584], [57.03423, 41.25435], [57.13796, 41.36625], [57.03359, 41.41777], [56.96218, 41.80383], [57.03633, 41.92043], [57.30275, 42.14076], [57.6296, 42.16519], [57.84932, 42.18555], [57.92897, 42.24047], [57.90975, 42.4374], [57.99214, 42.50021], [58.3492, 42.43335], [58.40688, 42.29535], [58.51674, 42.30348], [58.29427, 42.56497], [58.14321, 42.62159], [58.27504, 42.69632], [58.57991, 42.64988], [58.6266, 42.79314], [58.93422, 42.5407], [59.17317, 42.52248], [59.2955, 42.37064], [59.4341, 42.29738], [59.94633, 42.27655], [60.00539, 42.212], [59.96419, 42.1428], [60.04659, 42.08982], [60.0356, 42.01028], [59.95046, 41.97966], [60.33223, 41.75058], [60.08504, 41.80997], [60.06032, 41.76287], [60.18117, 41.60082], [60.06581, 41.4363], [60.5078, 41.21694], [61.03261, 41.25691], [61.22212, 41.14946], [61.33199, 41.14946], [61.39732, 41.19873], [61.4446, 41.29407], [61.87856, 41.12257], [62.11751, 40.58242], [62.34273, 40.43206], [62.43337, 39.98528], [63.6913, 39.27666], [63.70778, 39.22349], [64.19086, 38.95561], [64.32576, 38.98691], [65.55873, 38.29052], [65.83913, 38.25733], [66.24013, 38.16238], [66.41042, 38.02403], [66.56697, 38.0435], [66.67684, 37.96776], [66.53676, 37.80084], [66.52852, 37.58568], [66.65761, 37.45497], [66.52303, 37.39827], [66.55743, 37.35409], [66.64699, 37.32958], [66.95598, 37.40162], [67.08232, 37.35469], [67.13039, 37.27168], [67.2224, 37.24545], [67.2581, 37.17216], [67.51868, 37.26102], [67.78329, 37.1834], [67.8474, 37.31594], [67.81566, 37.43107], [68.12635, 37.93], [68.27159, 37.91477], [68.40343, 38.19484], [68.13289, 38.40822], [68.06274, 38.39435], [68.11366, 38.47169], [68.05873, 38.56087], [68.0807, 38.64136], [68.05598, 38.71641], [68.12877, 38.73677], [68.06948, 38.82115], [68.19743, 38.85985], [68.09704, 39.02589], [67.68915, 39.00775], [67.67833, 39.14479], [67.33226, 39.23739], [67.36522, 39.31287], [67.45998, 39.315], [67.46822, 39.46146], [67.39681, 39.52505], [67.46547, 39.53564], [67.44899, 39.57799], [67.62889, 39.60234], [67.70992, 39.66156], [68.12053, 39.56317], [68.54166, 39.53929], [68.61972, 39.68905], [68.63071, 39.85265], [68.88889, 39.87163], [68.93695, 39.91167], [68.84906, 40.04952], [68.96579, 40.06949], [69.01935, 40.11466], [69.01523, 40.15771], [68.62796, 40.07789], [68.52771, 40.11676], [68.5332, 40.14826], [68.77902, 40.20492], [68.79276, 40.17555], [68.84357, 40.18604], [68.85832, 40.20885], [69.04544, 40.22904], [69.15659, 40.2162], [69.2074, 40.21488], [69.30448, 40.18774], [69.30104, 40.24502], [69.25229, 40.26362], [69.24817, 40.30357], [69.30808, 40.2821], [69.32833, 40.29794], [69.33794, 40.34819], [69.30774, 40.36102], [69.28525, 40.41894], [69.27066, 40.49274], [69.21063, 40.54469], [69.2643, 40.57506], [69.3455, 40.57988], [69.32834, 40.70233], [69.38327, 40.7918], [69.53021, 40.77621], [69.59441, 40.70181], [69.69434, 40.62615], [70.36655, 40.90296], [70.38028, 41.02014], [70.45251, 41.04438], [70.80009, 40.72825], [70.49871, 40.52503], [70.32626, 40.45174], [70.37511, 40.38605], [70.57149, 40.3442], [70.56394, 40.26421], [70.62342, 40.17396], [70.8607, 40.217], [70.9818, 40.22392], [70.95789, 40.28761], [71.05901, 40.28765], [71.13042, 40.34106], [71.36663, 40.31593], [71.4246, 40.28619], [71.51215, 40.26943], [71.51549, 40.22986], [71.61725, 40.20615], [71.61931, 40.26775], [71.68386, 40.26984], [71.70569, 40.20391], [71.69621, 40.18492], [71.71719, 40.17886], [71.73054, 40.14818], [71.82646, 40.21872], [71.85002, 40.25647], [72.05464, 40.27586], [71.96401, 40.31907], [72.18648, 40.49893], [72.24368, 40.46091], [72.40346, 40.4007], [72.44191, 40.48222], [72.41513, 40.50856], [72.38384, 40.51535], [72.41714, 40.55736], [72.34406, 40.60144], [72.40517, 40.61917], [72.47795, 40.5532], [72.66713, 40.5219], [72.66713, 40.59076], [72.69579, 40.59778], [72.73995, 40.58409], [72.74768, 40.58051], [72.74862, 40.57131], [72.75982, 40.57273], [72.74894, 40.59592], [72.74866, 40.60873], [72.80137, 40.67856], [72.84754, 40.67229], [72.85372, 40.7116], [72.8722, 40.71111], [72.93296, 40.73089], [72.99133, 40.76457], [73.0612, 40.76678], [73.13412, 40.79122], [73.13267, 40.83512], [73.01869, 40.84681], [72.94454, 40.8094], [72.84291, 40.85512], [72.68157, 40.84942], [72.59136, 40.86947], [72.55109, 40.96046], [72.48742, 40.97136], [72.45206, 41.03018], [72.38511, 41.02785], [72.36138, 41.04384], [72.34757, 41.06104], [72.34026, 41.04539], [72.324, 41.03381], [72.18339, 40.99571], [72.17594, 41.02377], [72.21061, 41.05607], [72.1792, 41.10621], [72.14864, 41.13363], [72.17594, 41.15522], [72.16433, 41.16483], [72.10745, 41.15483], [72.07249, 41.11739], [71.85964, 41.19081], [71.91457, 41.2982], [71.83914, 41.3546], [71.76625, 41.4466], [71.71132, 41.43012], [71.73054, 41.54713], [71.65914, 41.49599], [71.6787, 41.42111], [71.57227, 41.29175], [71.46688, 41.31883], [71.43814, 41.19644], [71.46148, 41.13958], [71.40198, 41.09436], [71.34877, 41.16807], [71.27187, 41.11015], [71.25813, 41.18796], [71.11806, 41.15359], [71.02193, 41.19494], [70.9615, 41.16393], [70.86263, 41.23833], [70.77885, 41.24813], [70.78572, 41.36419], [70.67586, 41.47953], [70.48909, 41.40335], [70.17682, 41.5455], [70.69777, 41.92554], [71.28719, 42.18033], [71.13263, 42.28356], [70.94483, 42.26238], [69.49545, 41.545], [69.45751, 41.56863], [69.39485, 41.51518], [69.45081, 41.46246], [69.37468, 41.46555], [69.35554, 41.47211], [69.29778, 41.43673], [69.25059, 41.46693], [69.23332, 41.45847], [69.22671, 41.46298], [69.20439, 41.45391], [69.18528, 41.45175], [69.17701, 41.43769], [69.15137, 41.43078], [69.05006, 41.36183], [69.01308, 41.22804], [68.7217, 41.05025], [68.73945, 40.96989], [68.65662, 40.93861], [68.62221, 41.03019], [68.49983, 40.99669], [68.58444, 40.91447], [68.63, 40.59358], [68.49983, 40.56437], [67.96736, 40.83798], [68.1271, 41.0324], [68.08273, 41.08148], [67.98511, 41.02794], [67.9644, 41.14611], [66.69129, 41.1311], [66.53302, 41.87388], [66.00546, 41.94455], [66.09482, 42.93426], [65.85194, 42.85481]], [[70.68112, 40.90612], [70.6721, 40.90555], [70.57501, 40.98941], [70.54223, 40.98787], [70.56077, 41.00642], [70.6158, 40.97661], [70.68112, 40.90612]]], [[[71.21139, 40.03369], [71.12218, 40.03052], [71.06305, 40.1771], [71.00236, 40.18154], [71.01035, 40.05481], [71.11037, 40.01984], [71.11668, 39.99291], [71.09063, 39.99], [71.10501, 39.95568], [71.04979, 39.89808], [71.10531, 39.91354], [71.16101, 39.88423], [71.23067, 39.93581], [71.1427, 39.95026], [71.21139, 40.03369]]], [[[71.86463, 39.98598], [71.78838, 40.01404], [71.71511, 39.96348], [71.7504, 39.93701], [71.84316, 39.95582], [71.86463, 39.98598]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"VA\", iso1A3: \"VAT\", iso1N3: \"336\", wikidata: \"Q237\", nameEn: \"Vatican City\", aliases: [\"Holy See\"], groups: [\"039\", \"150\"], callingCodes: [\"379\", \"39 06\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[12.45181, 41.90056], [12.45446, 41.90028], [12.45435, 41.90143], [12.45626, 41.90172], [12.45691, 41.90125], [12.4577, 41.90115], [12.45834, 41.90174], [12.45826, 41.90281], [12.45755, 41.9033], [12.45762, 41.9058], [12.45561, 41.90629], [12.45543, 41.90738], [12.45091, 41.90625], [12.44984, 41.90545], [12.44815, 41.90326], [12.44582, 41.90194], [12.44834, 41.90095], [12.45181, 41.90056]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"VC\", iso1A3: \"VCT\", iso1N3: \"670\", wikidata: \"Q757\", nameEn: \"St. Vincent and the Grenadines\", aliases: [\"WV\"], groups: [\"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", callingCodes: [\"1 784\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-62.64026, 12.69984], [-59.94058, 12.34011], [-61.69315, 14.26451], [-62.64026, 12.69984]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"VE\", iso1A3: \"VEN\", iso1N3: \"862\", wikidata: \"Q717\", nameEn: \"Venezuela\", aliases: [\"YV\"], groups: [\"005\", \"419\", \"019\", \"UN\"], callingCodes: [\"58\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-71.22331, 13.01387], [-70.92579, 11.96275], [-71.3275, 11.85], [-71.9675, 11.65536], [-72.24983, 11.14138], [-72.4767, 11.1117], [-72.88002, 10.44309], [-72.98085, 9.85253], [-73.36905, 9.16636], [-73.02119, 9.27584], [-72.94052, 9.10663], [-72.77415, 9.10165], [-72.65474, 8.61428], [-72.4042, 8.36513], [-72.36987, 8.19976], [-72.35163, 8.01163], [-72.39137, 8.03534], [-72.47213, 7.96106], [-72.48801, 7.94329], [-72.48183, 7.92909], [-72.47042, 7.92306], [-72.45806, 7.91141], [-72.46183, 7.90682], [-72.44454, 7.86031], [-72.46763, 7.79518], [-72.47827, 7.65604], [-72.45321, 7.57232], [-72.47415, 7.48928], [-72.43132, 7.40034], [-72.19437, 7.37034], [-72.04895, 7.03837], [-71.82441, 7.04314], [-71.44118, 7.02116], [-71.42212, 7.03854], [-71.37234, 7.01588], [-71.03941, 6.98163], [-70.7596, 7.09799], [-70.10716, 6.96516], [-69.41843, 6.1072], [-67.60654, 6.2891], [-67.4625, 6.20625], [-67.43513, 5.98835], [-67.58558, 5.84537], [-67.63914, 5.64963], [-67.59141, 5.5369], [-67.83341, 5.31104], [-67.85358, 4.53249], [-67.62671, 3.74303], [-67.50067, 3.75812], [-67.30945, 3.38393], [-67.85862, 2.86727], [-67.85862, 2.79173], [-67.65696, 2.81691], [-67.21967, 2.35778], [-66.85795, 1.22998], [-66.28507, 0.74585], [-65.6727, 1.01353], [-65.50158, 0.92086], [-65.57288, 0.62856], [-65.11657, 1.12046], [-64.38932, 1.5125], [-64.34654, 1.35569], [-64.08274, 1.64792], [-64.06135, 1.94722], [-63.39827, 2.16098], [-63.39114, 2.4317], [-64.0257, 2.48156], [-64.02908, 2.79797], [-64.48379, 3.7879], [-64.84028, 4.24665], [-64.72977, 4.28931], [-64.57648, 4.12576], [-64.14512, 4.12932], [-63.99183, 3.90172], [-63.86082, 3.94796], [-63.70218, 3.91417], [-63.67099, 4.01731], [-63.50611, 3.83592], [-63.42233, 3.89995], [-63.4464, 3.9693], [-63.21111, 3.96219], [-62.98296, 3.59935], [-62.7655, 3.73099], [-62.74411, 4.03331], [-62.57656, 4.04754], [-62.44822, 4.18621], [-62.13094, 4.08309], [-61.54629, 4.2822], [-61.48569, 4.43149], [-61.29675, 4.44216], [-61.31457, 4.54167], [-61.15703, 4.49839], [-60.98303, 4.54167], [-60.86539, 4.70512], [-60.5802, 4.94312], [-60.73204, 5.20931], [-61.4041, 5.95304], [-61.15058, 6.19558], [-61.20762, 6.58174], [-61.13632, 6.70922], [-60.54873, 6.8631], [-60.39419, 6.94847], [-60.28074, 7.1162], [-60.44116, 7.20817], [-60.54098, 7.14804], [-60.63367, 7.25061], [-60.59802, 7.33194], [-60.71923, 7.55817], [-60.64793, 7.56877], [-60.51959, 7.83373], [-60.38056, 7.8302], [-60.02407, 8.04557], [-59.97059, 8.20791], [-59.83156, 8.23261], [-59.80661, 8.28906], [-59.85562, 8.35213], [-59.98508, 8.53046], [-59.54058, 8.6862], [-60.89962, 9.81445], [-62.08693, 10.04435], [-61.62505, 11.18974], [-63.73917, 11.92623], [-63.19938, 16.44103], [-67.89186, 12.4116], [-68.01417, 11.77722], [-68.33524, 11.78151], [-68.99639, 11.79035], [-71.22331, 13.01387]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"VG\", iso1A3: \"VGB\", iso1N3: \"092\", wikidata: \"Q25305\", nameEn: \"British Virgin Islands\", country: \"GB\", groups: [\"BOTS\", \"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1 284\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-64.47127, 17.55688], [-63.88746, 19.15706], [-65.02435, 18.73231], [-64.86027, 18.39056], [-64.64673, 18.36549], [-64.47127, 17.55688]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"VI\", iso1A3: \"VIR\", iso1N3: \"850\", wikidata: \"Q11703\", nameEn: \"United States Virgin Islands\", aliases: [\"US-VI\"], country: \"US\", groups: [\"Q1352230\", \"029\", \"003\", \"419\", \"019\", \"UN\"], driveSide: \"left\", roadSpeedUnit: \"mph\", roadHeightUnit: \"ft\", callingCodes: [\"1 340\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-65.02435, 18.73231], [-65.27974, 17.56928], [-64.47127, 17.55688], [-64.64673, 18.36549], [-64.86027, 18.39056], [-65.02435, 18.73231]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"VN\", iso1A3: \"VNM\", iso1N3: \"704\", wikidata: \"Q881\", nameEn: \"Vietnam\", groups: [\"035\", \"142\", \"UN\"], callingCodes: [\"84\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[108.10003, 21.47338], [108.0569, 21.53604], [108.02926, 21.54997], [107.97932, 21.54503], [107.97383, 21.53961], [107.97074, 21.54072], [107.96774, 21.53601], [107.95232, 21.5388], [107.92652, 21.58906], [107.90006, 21.5905], [107.86114, 21.65128], [107.80355, 21.66141], [107.66967, 21.60787], [107.56537, 21.61945], [107.54047, 21.5934], [107.49065, 21.59774], [107.49532, 21.62958], [107.47197, 21.6672], [107.41593, 21.64839], [107.38636, 21.59774], [107.35989, 21.60063], [107.35834, 21.6672], [107.29296, 21.74674], [107.24625, 21.7077], [107.20734, 21.71493], [107.10771, 21.79879], [107.02615, 21.81981], [107.00964, 21.85948], [107.06101, 21.88982], [107.05634, 21.92303], [106.99252, 21.95191], [106.97228, 21.92592], [106.92714, 21.93459], [106.9178, 21.97357], [106.81038, 21.97934], [106.74345, 22.00965], [106.72551, 21.97923], [106.69276, 21.96013], [106.68274, 21.99811], [106.70142, 22.02409], [106.6983, 22.15102], [106.67495, 22.1885], [106.69986, 22.22309], [106.6516, 22.33977], [106.55976, 22.34841], [106.57221, 22.37], [106.55665, 22.46498], [106.58395, 22.474], [106.61269, 22.60301], [106.65316, 22.5757], [106.71698, 22.58432], [106.72321, 22.63606], [106.76293, 22.73491], [106.82404, 22.7881], [106.83685, 22.8098], [106.81271, 22.8226], [106.78422, 22.81532], [106.71128, 22.85982], [106.71387, 22.88296], [106.6734, 22.89587], [106.6516, 22.86862], [106.60179, 22.92884], [106.55976, 22.92311], [106.51306, 22.94891], [106.49749, 22.91164], [106.34961, 22.86718], [106.27022, 22.87722], [106.19705, 22.98475], [106.00179, 22.99049], [105.99568, 22.94178], [105.90119, 22.94168], [105.8726, 22.92756], [105.72382, 23.06641], [105.57594, 23.075], [105.56037, 23.16806], [105.49966, 23.20669], [105.42805, 23.30824], [105.40782, 23.28107], [105.32376, 23.39684], [105.22569, 23.27249], [105.17276, 23.28679], [105.11672, 23.25247], [105.07002, 23.26248], [104.98712, 23.19176], [104.96532, 23.20463], [104.9486, 23.17235], [104.91435, 23.18666], [104.87992, 23.17141], [104.87382, 23.12854], [104.79478, 23.12934], [104.8334, 23.01484], [104.86765, 22.95178], [104.84942, 22.93631], [104.77114, 22.90017], [104.72755, 22.81984], [104.65283, 22.83419], [104.60457, 22.81841], [104.58122, 22.85571], [104.47225, 22.75813], [104.35593, 22.69353], [104.25683, 22.76534], [104.27084, 22.8457], [104.11384, 22.80363], [104.03734, 22.72945], [104.01088, 22.51823], [103.99247, 22.51958], [103.97384, 22.50634], [103.96783, 22.51173], [103.96352, 22.50584], [103.95191, 22.5134], [103.94513, 22.52553], [103.93286, 22.52703], [103.87904, 22.56683], [103.64506, 22.79979], [103.56255, 22.69499], [103.57812, 22.65764], [103.52675, 22.59155], [103.43646, 22.70648], [103.43179, 22.75816], [103.32282, 22.8127], [103.28079, 22.68063], [103.18895, 22.64471], [103.15782, 22.59873], [103.17961, 22.55705], [103.07843, 22.50097], [103.0722, 22.44775], [102.9321, 22.48659], [102.8636, 22.60735], [102.60675, 22.73376], [102.57095, 22.7036], [102.51802, 22.77969], [102.46665, 22.77108], [102.42618, 22.69212], [102.38415, 22.67919], [102.41061, 22.64184], [102.25339, 22.4607], [102.26428, 22.41321], [102.16621, 22.43336], [102.14099, 22.40092], [102.18712, 22.30403], [102.51734, 22.02676], [102.49092, 21.99002], [102.62301, 21.91447], [102.67145, 21.65894], [102.74189, 21.66713], [102.82115, 21.73667], [102.81894, 21.83888], [102.85637, 21.84501], [102.86077, 21.71213], [102.97965, 21.74076], [102.98846, 21.58936], [102.86297, 21.4255], [102.94223, 21.46034], [102.88939, 21.3107], [102.80794, 21.25736], [102.89825, 21.24707], [102.97745, 21.05821], [103.03469, 21.05821], [103.12055, 20.89994], [103.21497, 20.89832], [103.38032, 20.79501], [103.45737, 20.82382], [103.68633, 20.66324], [103.73478, 20.6669], [103.82282, 20.8732], [103.98024, 20.91531], [104.11121, 20.96779], [104.27412, 20.91433], [104.63957, 20.6653], [104.38199, 20.47155], [104.40621, 20.3849], [104.47886, 20.37459], [104.66158, 20.47774], [104.72102, 20.40554], [104.62195, 20.36633], [104.61315, 20.24452], [104.86852, 20.14121], [104.91695, 20.15567], [104.9874, 20.09573], [104.8465, 19.91783], [104.8355, 19.80395], [104.68359, 19.72729], [104.64837, 19.62365], [104.53169, 19.61743], [104.41281, 19.70035], [104.23229, 19.70242], [104.06498, 19.66926], [104.05617, 19.61743], [104.10832, 19.51575], [104.06058, 19.43484], [103.87125, 19.31854], [104.5361, 18.97747], [104.64617, 18.85668], [105.12829, 18.70453], [105.19654, 18.64196], [105.1327, 18.58355], [105.10408, 18.43533], [105.15942, 18.38691], [105.38366, 18.15315], [105.46292, 18.22008], [105.64784, 17.96687], [105.60381, 17.89356], [105.76612, 17.67147], [105.85744, 17.63221], [106.09019, 17.36399], [106.18991, 17.28227], [106.24444, 17.24714], [106.29287, 17.3018], [106.31929, 17.20509], [106.43597, 17.01362], [106.50862, 16.9673], [106.55045, 17.0031], [106.54824, 16.92729], [106.51963, 16.92097], [106.52183, 16.87884], [106.55265, 16.86831], [106.55485, 16.68704], [106.59013, 16.62259], [106.58267, 16.6012], [106.61477, 16.60713], [106.66052, 16.56892], [106.65832, 16.47816], [106.74418, 16.41904], [106.84104, 16.55415], [106.88727, 16.52671], [106.88067, 16.43594], [106.96638, 16.34938], [106.97385, 16.30204], [107.02597, 16.31132], [107.09091, 16.3092], [107.15035, 16.26271], [107.14595, 16.17816], [107.25822, 16.13587], [107.33968, 16.05549], [107.44975, 16.08511], [107.46296, 16.01106], [107.39471, 15.88829], [107.34188, 15.89464], [107.21419, 15.83747], [107.21859, 15.74638], [107.27143, 15.71459], [107.27583, 15.62769], [107.34408, 15.62345], [107.3815, 15.49832], [107.50699, 15.48771], [107.53341, 15.40496], [107.62367, 15.42193], [107.60605, 15.37524], [107.62587, 15.2266], [107.58844, 15.20111], [107.61926, 15.13949], [107.61486, 15.0566], [107.46516, 15.00982], [107.48277, 14.93751], [107.59285, 14.87795], [107.51579, 14.79282], [107.54361, 14.69092], [107.55371, 14.628], [107.52102, 14.59034], [107.52569, 14.54665], [107.48521, 14.40346], [107.44941, 14.41552], [107.39493, 14.32655], [107.40427, 14.24509], [107.33577, 14.11832], [107.37158, 14.07906], [107.35757, 14.02319], [107.38247, 13.99147], [107.44318, 13.99751], [107.46498, 13.91593], [107.45252, 13.78897], [107.53503, 13.73908], [107.61909, 13.52577], [107.62843, 13.3668], [107.49144, 13.01215], [107.49611, 12.88926], [107.55993, 12.7982], [107.5755, 12.52177], [107.55059, 12.36824], [107.4463, 12.29373], [107.42917, 12.24657], [107.34511, 12.33327], [107.15831, 12.27547], [106.99953, 12.08983], [106.92325, 12.06548], [106.79405, 12.0807], [106.70687, 11.96956], [106.4111, 11.97413], [106.4687, 11.86751], [106.44068, 11.86294], [106.44535, 11.8279], [106.41577, 11.76999], [106.45158, 11.68616], [106.44691, 11.66787], [106.37219, 11.69836], [106.30525, 11.67549], [106.26478, 11.72122], [106.18539, 11.75171], [106.13158, 11.73283], [106.06708, 11.77761], [106.02038, 11.77457], [106.00792, 11.7197], [105.95188, 11.63738], [105.88962, 11.67854], [105.8507, 11.66635], [105.80867, 11.60536], [105.81645, 11.56876], [105.87328, 11.55953], [105.88962, 11.43605], [105.86782, 11.28343], [106.10444, 11.07879], [106.1527, 11.10476], [106.1757, 11.07301], [106.20095, 10.97795], [106.14301, 10.98176], [106.18539, 10.79451], [106.06708, 10.8098], [105.94535, 10.9168], [105.93403, 10.83853], [105.84603, 10.85873], [105.86376, 10.89839], [105.77751, 11.03671], [105.50045, 10.94586], [105.42884, 10.96878], [105.34011, 10.86179], [105.11449, 10.96332], [105.08326, 10.95656], [105.02722, 10.89236], [105.09571, 10.72722], [104.95094, 10.64003], [104.87933, 10.52833], [104.59018, 10.53073], [104.49869, 10.4057], [104.47963, 10.43046], [104.43778, 10.42386], [103.99198, 10.48391], [102.47649, 9.66162], [104.81582, 8.03101], [109.55486, 8.10026], [111.60491, 13.57105], [108.00365, 17.98159], [108.10003, 21.47338]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"VU\", iso1A3: \"VUT\", iso1N3: \"548\", wikidata: \"Q686\", nameEn: \"Vanuatu\", groups: [\"054\", \"009\", \"UN\"], callingCodes: [\"678\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[156.73836, -14.50464], [174.245, -23.1974], [172.71443, -12.01327], [156.73836, -14.50464]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"WF\", iso1A3: \"WLF\", iso1N3: \"876\", wikidata: \"Q35555\", nameEn: \"Wallis and Futuna\", country: \"FR\", groups: [\"EU\", \"Q1451600\", \"061\", \"009\", \"UN\"], callingCodes: [\"681\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-178.66551, -14.32452], [-176.76826, -14.95183], [-175.59809, -12.61507], [-178.66551, -14.32452]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"WS\", iso1A3: \"WSM\", iso1N3: \"882\", wikidata: \"Q683\", nameEn: \"Samoa\", groups: [\"061\", \"009\", \"UN\"], driveSide: \"left\", callingCodes: [\"685\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[-173.74402, -14.26669], [-170.99605, -15.1275], [-171.39864, -10.21587], [-173.74402, -14.26669]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"XK\", iso1A3: \"XKX\", wikidata: \"Q1246\", nameEn: \"Kosovo\", aliases: [\"KV\"], groups: [\"039\", \"150\"], isoStatus: \"usrAssn\", callingCodes: [\"383\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[21.39045, 42.74888], [21.44047, 42.87276], [21.36941, 42.87397], [21.32974, 42.90424], [21.2719, 42.8994], [21.23534, 42.95523], [21.23877, 43.00848], [21.2041, 43.02277], [21.16734, 42.99694], [21.14465, 43.11089], [21.08952, 43.13471], [21.05378, 43.10707], [21.00749, 43.13984], [20.96287, 43.12416], [20.83727, 43.17842], [20.88685, 43.21697], [20.82145, 43.26769], [20.73811, 43.25068], [20.68688, 43.21335], [20.59929, 43.20492], [20.69515, 43.09641], [20.64557, 43.00826], [20.59929, 43.01067], [20.48692, 42.93208], [20.53484, 42.8885], [20.43734, 42.83157], [20.40594, 42.84853], [20.35692, 42.8335], [20.27869, 42.81945], [20.2539, 42.76245], [20.04898, 42.77701], [20.02088, 42.74789], [20.02915, 42.71147], [20.0969, 42.65559], [20.07761, 42.55582], [20.17127, 42.50469], [20.21797, 42.41237], [20.24399, 42.32168], [20.34479, 42.32656], [20.3819, 42.3029], [20.48857, 42.25444], [20.56955, 42.12097], [20.55633, 42.08173], [20.59434, 42.03879], [20.63069, 41.94913], [20.57946, 41.91593], [20.59524, 41.8818], [20.68523, 41.85318], [20.76786, 41.91839], [20.75464, 42.05229], [21.11491, 42.20794], [21.16614, 42.19815], [21.22728, 42.08909], [21.31983, 42.10993], [21.29913, 42.13954], [21.30496, 42.1418], [21.38428, 42.24465], [21.43882, 42.23609], [21.43882, 42.2789], [21.50823, 42.27156], [21.52145, 42.24465], [21.58992, 42.25915], [21.56772, 42.30946], [21.5264, 42.33634], [21.53467, 42.36809], [21.57021, 42.3647], [21.59029, 42.38042], [21.62887, 42.37664], [21.64209, 42.41081], [21.62556, 42.45106], [21.7035, 42.51899], [21.70522, 42.54176], [21.7327, 42.55041], [21.75672, 42.62695], [21.79413, 42.65923], [21.75025, 42.70125], [21.6626, 42.67813], [21.58755, 42.70418], [21.59154, 42.72643], [21.47498, 42.74695], [21.39045, 42.74888]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"YE\", iso1A3: \"YEM\", iso1N3: \"887\", wikidata: \"Q805\", nameEn: \"Yemen\", groups: [\"145\", \"142\", \"UN\"], callingCodes: [\"967\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[57.49095, 8.14549], [52.81185, 17.28568], [52.74267, 17.29519], [52.78009, 17.35124], [52.00311, 19.00083], [49.04884, 18.59899], [48.19996, 18.20584], [47.58351, 17.50366], [47.48245, 17.10808], [47.00571, 16.94765], [46.76494, 17.29151], [46.31018, 17.20464], [44.50126, 17.47475], [43.70631, 17.35762], [43.43005, 17.56148], [43.29185, 17.53224], [43.22533, 17.38343], [43.32653, 17.31179], [43.20156, 17.25901], [43.17787, 17.14717], [43.23967, 17.03428], [43.18233, 17.02673], [43.1813, 16.98438], [43.19328, 16.94703], [43.1398, 16.90696], [43.18338, 16.84852], [43.22012, 16.83932], [43.22956, 16.80613], [43.24801, 16.80613], [43.26303, 16.79479], [43.25857, 16.75304], [43.21325, 16.74416], [43.22066, 16.65179], [43.15274, 16.67248], [43.11601, 16.53166], [42.97215, 16.51093], [42.94351, 16.49467], [42.94625, 16.39721], [42.76801, 16.40371], [42.15205, 16.40211], [40.99158, 15.81743], [43.29075, 12.79154], [43.32909, 12.59711], [43.90659, 12.3823], [51.12877, 12.56479], [57.49095, 8.14549]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"YT\", iso1A3: \"MYT\", iso1N3: \"175\", wikidata: \"Q17063\", nameEn: \"Mayotte\", country: \"FR\", groups: [\"Q3320166\", \"EU\", \"014\", \"202\", \"002\", \"UN\"], callingCodes: [\"262\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[43.28731, -13.97126], [45.54824, -13.22353], [45.4971, -11.75965], [43.28731, -13.97126]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"ZA\", iso1A3: \"ZAF\", iso1N3: \"710\", wikidata: \"Q258\", nameEn: \"South Africa\", groups: [\"018\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"27\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[31.30611, -22.422], [31.16344, -22.32599], [31.08932, -22.34884], [30.86696, -22.28907], [30.6294, -22.32599], [30.48686, -22.31368], [30.38614, -22.34533], [30.28351, -22.35587], [30.2265, -22.2961], [30.13147, -22.30841], [29.92242, -22.19408], [29.76848, -22.14128], [29.64609, -22.12917], [29.37703, -22.19581], [29.21955, -22.17771], [29.18974, -22.18599], [29.15268, -22.21399], [29.10881, -22.21202], [29.0151, -22.22907], [28.91889, -22.44299], [28.63287, -22.55887], [28.34874, -22.5694], [28.04562, -22.8394], [28.04752, -22.90243], [27.93729, -22.96194], [27.93539, -23.04941], [27.74154, -23.2137], [27.6066, -23.21894], [27.52393, -23.37952], [27.33768, -23.40917], [26.99749, -23.65486], [26.84165, -24.24885], [26.51667, -24.47219], [26.46346, -24.60358], [26.39409, -24.63468], [25.8515, -24.75727], [25.84295, -24.78661], [25.88571, -24.87802], [25.72702, -25.25503], [25.69661, -25.29284], [25.6643, -25.4491], [25.58543, -25.6343], [25.33076, -25.76616], [25.12266, -25.75931], [25.01718, -25.72507], [24.8946, -25.80723], [24.67319, -25.81749], [24.44703, -25.73021], [24.36531, -25.773], [24.18287, -25.62916], [23.9244, -25.64286], [23.47588, -25.29971], [23.03497, -25.29971], [22.86012, -25.50572], [22.70808, -25.99186], [22.56365, -26.19668], [22.41921, -26.23078], [22.21206, -26.3773], [22.06192, -26.61882], [21.90703, -26.66808], [21.83291, -26.65959], [21.77114, -26.69015], [21.7854, -26.79199], [21.69322, -26.86152], [21.37869, -26.82083], [21.13353, -26.86661], [20.87031, -26.80047], [20.68596, -26.9039], [20.63275, -26.78181], [20.61754, -26.4692], [20.86081, -26.14892], [20.64795, -25.47827], [20.29826, -24.94869], [20.03678, -24.81004], [20.02809, -24.78725], [19.99817, -24.76768], [19.99882, -28.42622], [18.99885, -28.89165], [17.4579, -28.68718], [17.15405, -28.08573], [16.90446, -28.057], [16.59922, -28.53246], [16.46592, -28.57126], [16.45332, -28.63117], [12.51595, -32.27486], [38.88176, -48.03306], [34.51034, -26.91792], [32.35222, -26.86027], [32.29584, -26.852], [32.22302, -26.84136], [32.19409, -26.84032], [32.13315, -26.84345], [32.09664, -26.80721], [32.00893, -26.8096], [31.97463, -27.11057], [31.97592, -27.31675], [31.49834, -27.31549], [31.15027, -27.20151], [30.96088, -27.0245], [30.97757, -26.92706], [30.88826, -26.79622], [30.81101, -26.84722], [30.78927, -26.48271], [30.95819, -26.26303], [31.13073, -25.91558], [31.31237, -25.7431], [31.4175, -25.71886], [31.86881, -25.99973], [31.974, -25.95387], [31.92649, -25.84216], [32.00631, -25.65044], [31.97875, -25.46356], [32.01676, -25.38117], [32.03196, -25.10785], [31.9835, -24.29983], [31.90368, -24.18892], [31.87707, -23.95293], [31.77445, -23.90082], [31.70223, -23.72695], [31.67942, -23.60858], [31.56539, -23.47268], [31.55779, -23.176], [31.30611, -22.422]], [[29.33204, -29.45598], [29.28545, -29.58456], [29.12553, -29.76266], [29.16548, -29.91706], [28.9338, -30.05072], [28.80222, -30.10579], [28.68627, -30.12885], [28.399, -30.1592], [28.2319, -30.28476], [28.12073, -30.68072], [27.74814, -30.60635], [27.69467, -30.55862], [27.67819, -30.53437], [27.6521, -30.51707], [27.62137, -30.50509], [27.56781, -30.44562], [27.56901, -30.42504], [27.45452, -30.32239], [27.38108, -30.33456], [27.36649, -30.27246], [27.37293, -30.19401], [27.40778, -30.14577], [27.32555, -30.14785], [27.29603, -30.05473], [27.22719, -30.00718], [27.09489, -29.72796], [27.01016, -29.65439], [27.33464, -29.48161], [27.4358, -29.33465], [27.47254, -29.31968], [27.45125, -29.29708], [27.48679, -29.29349], [27.54258, -29.25575], [27.5158, -29.2261], [27.55974, -29.18954], [27.75458, -28.89839], [27.8907, -28.91612], [27.88933, -28.88156], [27.9392, -28.84864], [27.98675, -28.8787], [28.02503, -28.85991], [28.1317, -28.7293], [28.2348, -28.69471], [28.30518, -28.69531], [28.40612, -28.6215], [28.65091, -28.57025], [28.68043, -28.58744], [29.40524, -29.21246], [29.44883, -29.3772], [29.33204, -29.45598]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"ZM\", iso1A3: \"ZMB\", iso1N3: \"894\", wikidata: \"Q953\", nameEn: \"Zambia\", groups: [\"014\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"260\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[32.95389, -9.40138], [32.76233, -9.31963], [32.75611, -9.28583], [32.53661, -9.24281], [32.49147, -9.14754], [32.43543, -9.11988], [32.25486, -9.13371], [32.16146, -9.05993], [32.08206, -9.04609], [31.98866, -9.07069], [31.94196, -9.02303], [31.94663, -8.93846], [31.81587, -8.88618], [31.71158, -8.91386], [31.57147, -8.81388], [31.57147, -8.70619], [31.37533, -8.60769], [31.00796, -8.58615], [30.79243, -8.27382], [28.88917, -8.4831], [28.9711, -8.66935], [28.38526, -9.23393], [28.36562, -9.30091], [28.52636, -9.35379], [28.51627, -9.44726], [28.56208, -9.49122], [28.68532, -9.78], [28.62795, -9.92942], [28.65032, -10.65133], [28.37241, -11.57848], [28.48357, -11.87532], [29.18592, -12.37921], [29.4992, -12.43843], [29.48404, -12.23604], [29.8139, -12.14898], [29.81551, -13.44683], [29.65078, -13.41844], [29.60531, -13.21685], [29.01918, -13.41353], [28.33199, -12.41375], [27.59932, -12.22123], [27.21025, -11.76157], [27.22541, -11.60323], [27.04351, -11.61312], [26.88687, -12.01868], [26.01777, -11.91488], [25.33058, -11.65767], [25.34069, -11.19707], [24.42612, -11.44975], [24.34528, -11.06816], [24.00027, -10.89356], [24.02603, -11.15368], [23.98804, -12.13149], [24.06672, -12.29058], [23.90937, -12.844], [24.03339, -12.99091], [21.97988, -13.00148], [22.00323, -16.18028], [22.17217, -16.50269], [23.20038, -17.47563], [23.47474, -17.62877], [24.23619, -17.47489], [24.32811, -17.49082], [24.38712, -17.46818], [24.5621, -17.52963], [24.70864, -17.49501], [25.00198, -17.58221], [25.26433, -17.79571], [25.51646, -17.86232], [25.6827, -17.81987], [25.85738, -17.91403], [25.85892, -17.97726], [26.08925, -17.98168], [26.0908, -17.93021], [26.21601, -17.88608], [26.55918, -17.99638], [26.68403, -18.07411], [26.74314, -18.0199], [26.89926, -17.98756], [27.14196, -17.81398], [27.30736, -17.60487], [27.61377, -17.34378], [27.62795, -17.24365], [27.83141, -16.96274], [28.73725, -16.5528], [28.76199, -16.51575], [28.81454, -16.48611], [28.8501, -16.04537], [28.9243, -15.93987], [29.01298, -15.93805], [29.21955, -15.76589], [29.4437, -15.68702], [29.8317, -15.6126], [30.35574, -15.6513], [30.41902, -15.62269], [30.22098, -14.99447], [33.24249, -14.00019], [33.16749, -13.93992], [33.07568, -13.98447], [33.02977, -14.05022], [32.99042, -13.95689], [32.88985, -13.82956], [32.79015, -13.80755], [32.76962, -13.77224], [32.84528, -13.71576], [32.7828, -13.64805], [32.68654, -13.64268], [32.66468, -13.60019], [32.68436, -13.55769], [32.73683, -13.57682], [32.84176, -13.52794], [32.86113, -13.47292], [33.0078, -13.19492], [32.98289, -13.12671], [33.02181, -12.88707], [32.96733, -12.88251], [32.94397, -12.76868], [33.05917, -12.59554], [33.18837, -12.61377], [33.28177, -12.54692], [33.37517, -12.54085], [33.54485, -12.35996], [33.47636, -12.32498], [33.3705, -12.34931], [33.25998, -12.14242], [33.33937, -11.91252], [33.32692, -11.59248], [33.24252, -11.59302], [33.23663, -11.40637], [33.29267, -11.43536], [33.29267, -11.3789], [33.39697, -11.15296], [33.25998, -10.88862], [33.28022, -10.84428], [33.47636, -10.78465], [33.70675, -10.56896], [33.54797, -10.36077], [33.53863, -10.20148], [33.31297, -10.05133], [33.37902, -9.9104], [33.36581, -9.81063], [33.31517, -9.82364], [33.2095, -9.61099], [33.12144, -9.58929], [33.10163, -9.66525], [33.05485, -9.61316], [33.00256, -9.63053], [33.00476, -9.5133], [32.95389, -9.40138]]]] } },\n  { type: \"Feature\", properties: { iso1A2: \"ZW\", iso1A3: \"ZWE\", iso1N3: \"716\", wikidata: \"Q954\", nameEn: \"Zimbabwe\", groups: [\"014\", \"202\", \"002\", \"UN\"], driveSide: \"left\", callingCodes: [\"263\"] }, geometry: { type: \"MultiPolygon\", coordinates: [[[[30.41902, -15.62269], [30.35574, -15.6513], [29.8317, -15.6126], [29.4437, -15.68702], [29.21955, -15.76589], [29.01298, -15.93805], [28.9243, -15.93987], [28.8501, -16.04537], [28.81454, -16.48611], [28.76199, -16.51575], [28.73725, -16.5528], [27.83141, -16.96274], [27.62795, -17.24365], [27.61377, -17.34378], [27.30736, -17.60487], [27.14196, -17.81398], [26.89926, -17.98756], [26.74314, -18.0199], [26.68403, -18.07411], [26.55918, -17.99638], [26.21601, -17.88608], [26.0908, -17.93021], [26.08925, -17.98168], [25.85892, -17.97726], [25.85738, -17.91403], [25.6827, -17.81987], [25.51646, -17.86232], [25.26433, -17.79571], [25.23909, -17.90832], [25.31799, -18.07091], [25.39972, -18.12691], [25.53465, -18.39041], [25.68859, -18.56165], [25.79217, -18.6355], [25.82353, -18.82808], [25.94326, -18.90362], [25.99837, -19.02943], [25.96226, -19.08152], [26.17227, -19.53709], [26.72246, -19.92707], [27.21278, -20.08244], [27.29831, -20.28935], [27.28865, -20.49873], [27.69361, -20.48531], [27.72972, -20.51735], [27.69171, -21.08409], [27.91407, -21.31621], [28.01669, -21.57624], [28.29416, -21.59037], [28.49942, -21.66634], [28.58114, -21.63455], [29.07763, -21.81877], [29.04023, -21.85864], [29.02191, -21.90647], [29.02191, -21.95665], [29.04108, -22.00563], [29.08495, -22.04867], [29.14501, -22.07275], [29.1974, -22.07472], [29.24648, -22.05967], [29.3533, -22.18363], [29.37703, -22.19581], [29.64609, -22.12917], [29.76848, -22.14128], [29.92242, -22.19408], [30.13147, -22.30841], [30.2265, -22.2961], [30.28351, -22.35587], [30.38614, -22.34533], [30.48686, -22.31368], [30.6294, -22.32599], [30.86696, -22.28907], [31.08932, -22.34884], [31.16344, -22.32599], [31.30611, -22.422], [31.38336, -22.36919], [32.41234, -21.31246], [32.48236, -21.32873], [32.37115, -21.133], [32.51644, -20.91929], [32.48122, -20.63319], [32.55167, -20.56312], [32.66174, -20.56106], [32.85987, -20.27841], [32.85987, -20.16686], [32.93032, -20.03868], [33.01178, -20.02007], [33.06461, -19.77787], [32.95013, -19.67219], [32.84666, -19.68462], [32.84446, -19.48343], [32.78282, -19.47513], [32.77966, -19.36098], [32.85107, -19.29238], [32.87088, -19.09279], [32.84006, -19.0262], [32.72118, -19.02204], [32.69917, -18.94293], [32.73439, -18.92628], [32.70137, -18.84712], [32.82465, -18.77419], [32.9017, -18.7992], [32.95013, -18.69079], [32.88629, -18.58023], [32.88629, -18.51344], [33.02278, -18.4696], [33.03159, -18.35054], [32.94133, -17.99705], [33.0492, -17.60298], [32.98536, -17.55891], [32.96554, -17.48964], [33.0426, -17.3468], [33.00517, -17.30477], [32.96554, -17.11971], [32.84113, -16.92259], [32.91051, -16.89446], [32.97655, -16.70689], [32.78943, -16.70267], [32.69917, -16.66893], [32.71017, -16.59932], [32.42838, -16.4727], [32.28529, -16.43892], [32.02772, -16.43892], [31.91324, -16.41569], [31.90223, -16.34388], [31.67988, -16.19595], [31.42451, -16.15154], [31.30563, -16.01193], [31.13171, -15.98019], [30.97761, -16.05848], [30.91597, -15.99924], [30.42568, -15.9962], [30.41902, -15.62269]]]] } }\n] };\n\n// src/country-coder.ts\nvar borders = borders_default;\nvar _whichPolygon = {};\nvar _featuresByCode = {};\nvar idFilterRegex = /(?=(?!^(and|the|of|el|la|de)$))(\\b(and|the|of|el|la|de)\\b)|[-_ .,'()&[\\]/]/gi;\nfunction canonicalID(id) {\n  const s = id || \"\";\n  if (s.charAt(0) === \".\") {\n    return s.toUpperCase();\n  } else {\n    return s.replace(idFilterRegex, \"\").toUpperCase();\n  }\n}\nvar levels = [\n  \"subterritory\",\n  \"territory\",\n  \"subcountryGroup\",\n  \"country\",\n  \"sharedLandform\",\n  \"intermediateRegion\",\n  \"subregion\",\n  \"region\",\n  \"subunion\",\n  \"union\",\n  \"unitedNations\",\n  \"world\"\n];\nloadDerivedDataAndCaches(borders);\nfunction loadDerivedDataAndCaches(borders2) {\n  const identifierProps = [\"iso1A2\", \"iso1A3\", \"m49\", \"wikidata\", \"emojiFlag\", \"ccTLD\", \"nameEn\"];\n  let geometryFeatures = [];\n  for (const feature2 of borders2.features) {\n    const props = feature2.properties;\n    props.id = props.iso1A2 || props.m49 || props.wikidata;\n    loadM49(feature2);\n    loadTLD(feature2);\n    loadIsoStatus(feature2);\n    loadLevel(feature2);\n    loadGroups(feature2);\n    loadFlag(feature2);\n    cacheFeatureByIDs(feature2);\n    if (feature2.geometry) {\n      geometryFeatures.push(feature2);\n    }\n  }\n  for (const feature2 of borders2.features) {\n    feature2.properties.groups = feature2.properties.groups.map((groupID) => {\n      return _featuresByCode[groupID].properties.id;\n    });\n    loadMembersForGroupsOf(feature2);\n  }\n  for (const feature2 of borders2.features) {\n    loadRoadSpeedUnit(feature2);\n    loadRoadHeightUnit(feature2);\n    loadDriveSide(feature2);\n    loadCallingCodes(feature2);\n    loadGroupGroups(feature2);\n  }\n  for (const feature2 of borders2.features) {\n    feature2.properties.groups.sort((groupID1, groupID2) => {\n      return levels.indexOf(_featuresByCode[groupID1].properties.level) - levels.indexOf(_featuresByCode[groupID2].properties.level);\n    });\n    if (feature2.properties.members) {\n      feature2.properties.members.sort((id1, id2) => {\n        const diff = levels.indexOf(_featuresByCode[id1].properties.level) - levels.indexOf(_featuresByCode[id2].properties.level);\n        if (diff === 0) {\n          return borders2.features.indexOf(_featuresByCode[id1]) - borders2.features.indexOf(_featuresByCode[id2]);\n        }\n        return diff;\n      });\n    }\n  }\n  const geometryOnlyCollection = {\n    type: \"FeatureCollection\",\n    features: geometryFeatures\n  };\n  _whichPolygon = whichPolygon(geometryOnlyCollection);\n  function loadGroups(feature2) {\n    const props = feature2.properties;\n    if (!props.groups) {\n      props.groups = [];\n    }\n    if (feature2.geometry && props.country) {\n      props.groups.push(props.country);\n    }\n    if (props.m49 !== \"001\") {\n      props.groups.push(\"001\");\n    }\n  }\n  function loadM49(feature2) {\n    const props = feature2.properties;\n    if (!props.m49 && props.iso1N3) {\n      props.m49 = props.iso1N3;\n    }\n  }\n  function loadTLD(feature2) {\n    const props = feature2.properties;\n    if (props.level === \"unitedNations\")\n      return;\n    if (!props.ccTLD && props.iso1A2) {\n      props.ccTLD = \".\" + props.iso1A2.toLowerCase();\n    }\n  }\n  function loadIsoStatus(feature2) {\n    const props = feature2.properties;\n    if (!props.isoStatus && props.iso1A2) {\n      props.isoStatus = \"official\";\n    }\n  }\n  function loadLevel(feature2) {\n    const props = feature2.properties;\n    if (props.level)\n      return;\n    if (!props.country) {\n      props.level = \"country\";\n    } else if (!props.iso1A2 || props.isoStatus === \"official\") {\n      props.level = \"territory\";\n    } else {\n      props.level = \"subterritory\";\n    }\n  }\n  function loadGroupGroups(feature2) {\n    const props = feature2.properties;\n    if (feature2.geometry || !props.members)\n      return;\n    const featureLevelIndex = levels.indexOf(props.level);\n    let sharedGroups = [];\n    props.members.forEach((memberID, index) => {\n      const member = _featuresByCode[memberID];\n      const memberGroups = member.properties.groups.filter((groupID) => {\n        return groupID !== feature2.properties.id && featureLevelIndex < levels.indexOf(_featuresByCode[groupID].properties.level);\n      });\n      if (index === 0) {\n        sharedGroups = memberGroups;\n      } else {\n        sharedGroups = sharedGroups.filter((groupID) => memberGroups.indexOf(groupID) !== -1);\n      }\n    });\n    props.groups = props.groups.concat(\n      sharedGroups.filter((groupID) => props.groups.indexOf(groupID) === -1)\n    );\n    for (const groupID of sharedGroups) {\n      const groupFeature = _featuresByCode[groupID];\n      if (groupFeature.properties.members.indexOf(props.id) === -1) {\n        groupFeature.properties.members.push(props.id);\n      }\n    }\n  }\n  function loadRoadSpeedUnit(feature2) {\n    const props = feature2.properties;\n    if (feature2.geometry) {\n      if (!props.roadSpeedUnit)\n        props.roadSpeedUnit = \"km/h\";\n    } else if (props.members) {\n      const vals = Array.from(\n        new Set(\n          props.members.map((id) => {\n            const member = _featuresByCode[id];\n            if (member.geometry)\n              return member.properties.roadSpeedUnit || \"km/h\";\n          }).filter(Boolean)\n        )\n      );\n      if (vals.length === 1)\n        props.roadSpeedUnit = vals[0];\n    }\n  }\n  function loadRoadHeightUnit(feature2) {\n    const props = feature2.properties;\n    if (feature2.geometry) {\n      if (!props.roadHeightUnit)\n        props.roadHeightUnit = \"m\";\n    } else if (props.members) {\n      const vals = Array.from(\n        new Set(\n          props.members.map((id) => {\n            const member = _featuresByCode[id];\n            if (member.geometry)\n              return member.properties.roadHeightUnit || \"m\";\n          }).filter(Boolean)\n        )\n      );\n      if (vals.length === 1)\n        props.roadHeightUnit = vals[0];\n    }\n  }\n  function loadDriveSide(feature2) {\n    const props = feature2.properties;\n    if (feature2.geometry) {\n      if (!props.driveSide)\n        props.driveSide = \"right\";\n    } else if (props.members) {\n      const vals = Array.from(\n        new Set(\n          props.members.map((id) => {\n            const member = _featuresByCode[id];\n            if (member.geometry)\n              return member.properties.driveSide || \"right\";\n          }).filter(Boolean)\n        )\n      );\n      if (vals.length === 1)\n        props.driveSide = vals[0];\n    }\n  }\n  function loadCallingCodes(feature2) {\n    const props = feature2.properties;\n    if (!feature2.geometry && props.members) {\n      props.callingCodes = Array.from(\n        new Set(\n          props.members.reduce((array, id) => {\n            const member = _featuresByCode[id];\n            if (member.geometry && member.properties.callingCodes) {\n              return array.concat(member.properties.callingCodes);\n            }\n            return array;\n          }, [])\n        )\n      );\n    }\n  }\n  function loadFlag(feature2) {\n    if (!feature2.properties.iso1A2)\n      return;\n    const flag = feature2.properties.iso1A2.replace(/./g, function(char) {\n      return String.fromCodePoint(char.charCodeAt(0) + 127397);\n    });\n    feature2.properties.emojiFlag = flag;\n  }\n  function loadMembersForGroupsOf(feature2) {\n    for (const groupID of feature2.properties.groups) {\n      const groupFeature = _featuresByCode[groupID];\n      if (!groupFeature.properties.members) {\n        groupFeature.properties.members = [];\n      }\n      groupFeature.properties.members.push(feature2.properties.id);\n    }\n  }\n  function cacheFeatureByIDs(feature2) {\n    let ids = [];\n    for (const prop of identifierProps) {\n      const id = feature2.properties[prop];\n      if (id) {\n        ids.push(id);\n      }\n    }\n    for (const alias of feature2.properties.aliases || []) {\n      ids.push(alias);\n    }\n    for (const id of ids) {\n      const cid = canonicalID(id);\n      _featuresByCode[cid] = feature2;\n    }\n  }\n}\nfunction locArray(loc) {\n  if (Array.isArray(loc)) {\n    return loc;\n  } else if (loc.coordinates) {\n    return loc.coordinates;\n  }\n  return loc.geometry.coordinates;\n}\nfunction smallestFeature(loc) {\n  const query = locArray(loc);\n  const featureProperties = _whichPolygon(query);\n  if (!featureProperties)\n    return null;\n  return _featuresByCode[featureProperties.id];\n}\nfunction countryFeature(loc) {\n  const feature2 = smallestFeature(loc);\n  if (!feature2)\n    return null;\n  const countryCode = feature2.properties.country || feature2.properties.iso1A2;\n  return _featuresByCode[countryCode] || null;\n}\nvar defaultOpts = {\n  level: void 0,\n  maxLevel: void 0,\n  withProp: void 0\n};\nfunction featureForLoc(loc, opts) {\n  const targetLevel = opts.level || \"country\";\n  const maxLevel = opts.maxLevel || \"world\";\n  const withProp = opts.withProp;\n  const targetLevelIndex = levels.indexOf(targetLevel);\n  if (targetLevelIndex === -1)\n    return null;\n  const maxLevelIndex = levels.indexOf(maxLevel);\n  if (maxLevelIndex === -1)\n    return null;\n  if (maxLevelIndex < targetLevelIndex)\n    return null;\n  if (targetLevel === \"country\") {\n    const fastFeature = countryFeature(loc);\n    if (fastFeature) {\n      if (!withProp || fastFeature.properties[withProp]) {\n        return fastFeature;\n      }\n    }\n  }\n  const features = featuresContaining(loc);\n  const match = features.find((feature2) => {\n    let levelIndex = levels.indexOf(feature2.properties.level);\n    if (feature2.properties.level === targetLevel || // if no feature exists at the target level, return the first feature at the next level up\n    levelIndex > targetLevelIndex && levelIndex <= maxLevelIndex) {\n      if (!withProp || feature2.properties[withProp]) {\n        return feature2;\n      }\n    }\n    return false;\n  });\n  return match || null;\n}\nfunction featureForID(id) {\n  let stringID;\n  if (typeof id === \"number\") {\n    stringID = id.toString();\n    if (stringID.length === 1) {\n      stringID = \"00\" + stringID;\n    } else if (stringID.length === 2) {\n      stringID = \"0\" + stringID;\n    }\n  } else {\n    stringID = canonicalID(id);\n  }\n  return _featuresByCode[stringID] || null;\n}\nfunction smallestFeaturesForBbox(bbox) {\n  return _whichPolygon.bbox(bbox).map((props) => _featuresByCode[props.id]);\n}\nfunction smallestOrMatchingFeature(query) {\n  if (typeof query === \"object\") {\n    return smallestFeature(query);\n  }\n  return featureForID(query);\n}\nfunction feature(query, opts = defaultOpts) {\n  if (typeof query === \"object\") {\n    return featureForLoc(query, opts);\n  }\n  return featureForID(query);\n}\nfunction iso1A2Code(query, opts = defaultOpts) {\n  opts.withProp = \"iso1A2\";\n  const match = feature(query, opts);\n  if (!match)\n    return null;\n  return match.properties.iso1A2 || null;\n}\nfunction iso1A3Code(query, opts = defaultOpts) {\n  opts.withProp = \"iso1A3\";\n  const match = feature(query, opts);\n  if (!match)\n    return null;\n  return match.properties.iso1A3 || null;\n}\nfunction iso1N3Code(query, opts = defaultOpts) {\n  opts.withProp = \"iso1N3\";\n  const match = feature(query, opts);\n  if (!match)\n    return null;\n  return match.properties.iso1N3 || null;\n}\nfunction m49Code(query, opts = defaultOpts) {\n  opts.withProp = \"m49\";\n  const match = feature(query, opts);\n  if (!match)\n    return null;\n  return match.properties.m49 || null;\n}\nfunction wikidataQID(query, opts = defaultOpts) {\n  opts.withProp = \"wikidata\";\n  const match = feature(query, opts);\n  if (!match)\n    return null;\n  return match.properties.wikidata;\n}\nfunction emojiFlag(query, opts = defaultOpts) {\n  opts.withProp = \"emojiFlag\";\n  const match = feature(query, opts);\n  if (!match)\n    return null;\n  return match.properties.emojiFlag || null;\n}\nfunction ccTLD(query, opts = defaultOpts) {\n  opts.withProp = \"ccTLD\";\n  const match = feature(query, opts);\n  if (!match)\n    return null;\n  return match.properties.ccTLD || null;\n}\nfunction propertiesForQuery(query, property) {\n  const features = featuresContaining(query, false);\n  return features.map((feature2) => feature2.properties[property]).filter(Boolean);\n}\nfunction iso1A2Codes(query) {\n  return propertiesForQuery(query, \"iso1A2\");\n}\nfunction iso1A3Codes(query) {\n  return propertiesForQuery(query, \"iso1A3\");\n}\nfunction iso1N3Codes(query) {\n  return propertiesForQuery(query, \"iso1N3\");\n}\nfunction m49Codes(query) {\n  return propertiesForQuery(query, \"m49\");\n}\nfunction wikidataQIDs(query) {\n  return propertiesForQuery(query, \"wikidata\");\n}\nfunction emojiFlags(query) {\n  return propertiesForQuery(query, \"emojiFlag\");\n}\nfunction ccTLDs(query) {\n  return propertiesForQuery(query, \"ccTLD\");\n}\nfunction featuresContaining(query, strict) {\n  let matchingFeatures;\n  if (Array.isArray(query) && query.length === 4) {\n    matchingFeatures = smallestFeaturesForBbox(query);\n  } else {\n    const smallestOrMatching = smallestOrMatchingFeature(query);\n    matchingFeatures = smallestOrMatching ? [smallestOrMatching] : [];\n  }\n  if (!matchingFeatures.length)\n    return [];\n  let returnFeatures;\n  if (!strict || typeof query === \"object\") {\n    returnFeatures = matchingFeatures.slice();\n  } else {\n    returnFeatures = [];\n  }\n  for (const feature2 of matchingFeatures) {\n    const properties = feature2.properties;\n    for (const groupID of properties.groups) {\n      const groupFeature = _featuresByCode[groupID];\n      if (returnFeatures.indexOf(groupFeature) === -1) {\n        returnFeatures.push(groupFeature);\n      }\n    }\n  }\n  return returnFeatures;\n}\nfunction featuresIn(id, strict) {\n  const feature2 = featureForID(id);\n  if (!feature2)\n    return [];\n  let features = [];\n  if (!strict) {\n    features.push(feature2);\n  }\n  const properties = feature2.properties;\n  for (const memberID of properties.members || []) {\n    features.push(_featuresByCode[memberID]);\n  }\n  return features;\n}\nfunction aggregateFeature(id) {\n  const features = featuresIn(id, false);\n  if (features.length === 0)\n    return null;\n  let aggregateCoordinates = [];\n  for (const feature2 of features) {\n    if (feature2.geometry?.type === \"MultiPolygon\" && feature2.geometry.coordinates) {\n      aggregateCoordinates = aggregateCoordinates.concat(feature2.geometry.coordinates);\n    }\n  }\n  return {\n    type: \"Feature\",\n    properties: features[0].properties,\n    geometry: {\n      type: \"MultiPolygon\",\n      coordinates: aggregateCoordinates\n    }\n  };\n}\nfunction isIn(query, bounds) {\n  const queryFeature = smallestOrMatchingFeature(query);\n  const boundsFeature = featureForID(bounds);\n  if (!queryFeature || !boundsFeature)\n    return null;\n  if (queryFeature.properties.id === boundsFeature.properties.id)\n    return true;\n  return queryFeature.properties.groups.indexOf(boundsFeature.properties.id) !== -1;\n}\nfunction isInEuropeanUnion(query) {\n  return isIn(query, \"EU\");\n}\nfunction isInUnitedNations(query) {\n  return isIn(query, \"UN\");\n}\nfunction driveSide(query) {\n  const feature2 = smallestOrMatchingFeature(query);\n  return feature2 && feature2.properties.driveSide || null;\n}\nfunction roadSpeedUnit(query) {\n  const feature2 = smallestOrMatchingFeature(query);\n  return feature2 && feature2.properties.roadSpeedUnit || null;\n}\nfunction roadHeightUnit(query) {\n  const feature2 = smallestOrMatchingFeature(query);\n  return feature2 && feature2.properties.roadHeightUnit || null;\n}\nfunction callingCodes(query) {\n  const feature2 = smallestOrMatchingFeature(query);\n  return feature2 && feature2.properties.callingCodes || [];\n}\nexport {\n  aggregateFeature,\n  borders,\n  callingCodes,\n  ccTLD,\n  ccTLDs,\n  driveSide,\n  emojiFlag,\n  emojiFlags,\n  feature,\n  featuresContaining,\n  featuresIn,\n  isIn,\n  isInEuropeanUnion,\n  isInUnitedNations,\n  iso1A2Code,\n  iso1A2Codes,\n  iso1A3Code,\n  iso1A3Codes,\n  iso1N3Code,\n  iso1N3Codes,\n  m49Code,\n  m49Codes,\n  roadHeightUnit,\n  roadSpeedUnit,\n  wikidataQID,\n  wikidataQIDs\n};\n//# sourceMappingURL=country-coder.mjs.map\n","export default (x) => {\n    return () => {\n        return x;\n    };\n};\n","import constant from \"./constant.js\";\nexport default (eps) => {\n    const almostEqual = eps ? (a, b) => b.minus(a).abs().isLessThanOrEqualTo(eps)\n        : constant(false);\n    return (a, b) => {\n        if (almostEqual(a, b))\n            return 0;\n        return a.comparedTo(b);\n    };\n};\n","import constant from \"./constant.js\";\nexport default function (eps) {\n    const almostCollinear = eps ? (area2, ax, ay, cx, cy) => area2.exponentiatedBy(2).isLessThanOrEqualTo(cx.minus(ax).exponentiatedBy(2).plus(cy.minus(ay).exponentiatedBy(2))\n        .times(eps))\n        : constant(false);\n    return (a, b, c) => {\n        const ax = a.x, ay = a.y, cx = c.x, cy = c.y;\n        const area2 = ay.minus(cy).times(b.x.minus(cx)).minus(ax.minus(cx).times(b.y.minus(cy)));\n        if (almostCollinear(area2, ax, ay, cx, cy))\n            return 0;\n        return area2.comparedTo(0);\n    };\n}\n","/*\r\n *      bignumber.js v9.1.2\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, -1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  // If any number is NaN, return NaN.\r\n  function maxOrMin(args, n) {\r\n    var k, y,\r\n      i = 1,\r\n      x = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      y = new BigNumber(args[i]);\r\n      if (!y.s || (k = compare(x, y)) === n || k === 0 && x.s === n) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = mathfloor(n / pows10[d - j - 1] % 10);\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : mathfloor(n / pows10[d - j - 1] % 10);\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) {\r\n      zc = xc;\r\n      xc = yc;\r\n      yc = zc;\r\n      i = xcL;\r\n      xcL = ycL;\r\n      ycL = i;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n      b = a;\r\n    }\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) {\r\n        i = g1;\r\n        g1 = g2;\r\n        g2 = i;\r\n        len -= i;\r\n      }\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n","class SplayTreeNode {\r\n    key;\r\n    left = null;\r\n    right = null;\r\n    constructor(key) {\r\n        this.key = key;\r\n    }\r\n}\r\nclass SplayTreeSetNode extends SplayTreeNode {\r\n    constructor(key) {\r\n        super(key);\r\n    }\r\n}\r\nclass SplayTreeMapNode extends SplayTreeNode {\r\n    value;\r\n    constructor(key, value) {\r\n        super(key);\r\n        this.value = value;\r\n    }\r\n    replaceValue(value) {\r\n        const node = new SplayTreeMapNode(this.key, value);\r\n        node.left = this.left;\r\n        node.right = this.right;\r\n        return node;\r\n    }\r\n}\r\nclass SplayTree {\r\n    size = 0;\r\n    modificationCount = 0;\r\n    splayCount = 0;\r\n    splay(key) {\r\n        const root = this.root;\r\n        if (root == null) {\r\n            this.compare(key, key);\r\n            return -1;\r\n        }\r\n        let right = null;\r\n        let newTreeRight = null;\r\n        let left = null;\r\n        let newTreeLeft = null;\r\n        let current = root;\r\n        const compare = this.compare;\r\n        let comp;\r\n        while (true) {\r\n            comp = compare(current.key, key);\r\n            if (comp > 0) {\r\n                let currentLeft = current.left;\r\n                if (currentLeft == null)\r\n                    break;\r\n                comp = compare(currentLeft.key, key);\r\n                if (comp > 0) {\r\n                    current.left = currentLeft.right;\r\n                    currentLeft.right = current;\r\n                    current = currentLeft;\r\n                    currentLeft = current.left;\r\n                    if (currentLeft == null)\r\n                        break;\r\n                }\r\n                if (right == null) {\r\n                    newTreeRight = current;\r\n                }\r\n                else {\r\n                    right.left = current;\r\n                }\r\n                right = current;\r\n                current = currentLeft;\r\n            }\r\n            else if (comp < 0) {\r\n                let currentRight = current.right;\r\n                if (currentRight == null)\r\n                    break;\r\n                comp = compare(currentRight.key, key);\r\n                if (comp < 0) {\r\n                    current.right = currentRight.left;\r\n                    currentRight.left = current;\r\n                    current = currentRight;\r\n                    currentRight = current.right;\r\n                    if (currentRight == null)\r\n                        break;\r\n                }\r\n                if (left == null) {\r\n                    newTreeLeft = current;\r\n                }\r\n                else {\r\n                    left.right = current;\r\n                }\r\n                left = current;\r\n                current = currentRight;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        if (left != null) {\r\n            left.right = current.left;\r\n            current.left = newTreeLeft;\r\n        }\r\n        if (right != null) {\r\n            right.left = current.right;\r\n            current.right = newTreeRight;\r\n        }\r\n        if (this.root !== current) {\r\n            this.root = current;\r\n            this.splayCount++;\r\n        }\r\n        return comp;\r\n    }\r\n    splayMin(node) {\r\n        let current = node;\r\n        let nextLeft = current.left;\r\n        while (nextLeft != null) {\r\n            const left = nextLeft;\r\n            current.left = left.right;\r\n            left.right = current;\r\n            current = left;\r\n            nextLeft = current.left;\r\n        }\r\n        return current;\r\n    }\r\n    splayMax(node) {\r\n        let current = node;\r\n        let nextRight = current.right;\r\n        while (nextRight != null) {\r\n            const right = nextRight;\r\n            current.right = right.left;\r\n            right.left = current;\r\n            current = right;\r\n            nextRight = current.right;\r\n        }\r\n        return current;\r\n    }\r\n    _delete(key) {\r\n        if (this.root == null)\r\n            return null;\r\n        const comp = this.splay(key);\r\n        if (comp != 0)\r\n            return null;\r\n        let root = this.root;\r\n        const result = root;\r\n        const left = root.left;\r\n        this.size--;\r\n        if (left == null) {\r\n            this.root = root.right;\r\n        }\r\n        else {\r\n            const right = root.right;\r\n            root = this.splayMax(left);\r\n            root.right = right;\r\n            this.root = root;\r\n        }\r\n        this.modificationCount++;\r\n        return result;\r\n    }\r\n    addNewRoot(node, comp) {\r\n        this.size++;\r\n        this.modificationCount++;\r\n        const root = this.root;\r\n        if (root == null) {\r\n            this.root = node;\r\n            return;\r\n        }\r\n        if (comp < 0) {\r\n            node.left = root;\r\n            node.right = root.right;\r\n            root.right = null;\r\n        }\r\n        else {\r\n            node.right = root;\r\n            node.left = root.left;\r\n            root.left = null;\r\n        }\r\n        this.root = node;\r\n    }\r\n    _first() {\r\n        const root = this.root;\r\n        if (root == null)\r\n            return null;\r\n        this.root = this.splayMin(root);\r\n        return this.root;\r\n    }\r\n    _last() {\r\n        const root = this.root;\r\n        if (root == null)\r\n            return null;\r\n        this.root = this.splayMax(root);\r\n        return this.root;\r\n    }\r\n    clear() {\r\n        this.root = null;\r\n        this.size = 0;\r\n        this.modificationCount++;\r\n    }\r\n    has(key) {\r\n        return this.validKey(key) && this.splay(key) == 0;\r\n    }\r\n    defaultCompare() {\r\n        return (a, b) => a < b ? -1 : a > b ? 1 : 0;\r\n    }\r\n    wrap() {\r\n        return {\r\n            getRoot: () => { return this.root; },\r\n            setRoot: (root) => { this.root = root; },\r\n            getSize: () => { return this.size; },\r\n            getModificationCount: () => { return this.modificationCount; },\r\n            getSplayCount: () => { return this.splayCount; },\r\n            setSplayCount: (count) => { this.splayCount = count; },\r\n            splay: (key) => { return this.splay(key); },\r\n            has: (key) => { return this.has(key); },\r\n        };\r\n    }\r\n}\r\nexport class SplayTreeMap extends SplayTree {\r\n    root = null;\r\n    compare;\r\n    validKey;\r\n    constructor(compare, isValidKey) {\r\n        super();\r\n        this.compare = compare ?? this.defaultCompare();\r\n        this.validKey = isValidKey ?? ((a) => a != null && a != undefined);\r\n    }\r\n    delete(key) {\r\n        if (!this.validKey(key))\r\n            return false;\r\n        return this._delete(key) != null;\r\n    }\r\n    forEach(f) {\r\n        const nodes = new SplayTreeMapEntryIterableIterator(this.wrap());\r\n        let result;\r\n        while (result = nodes.next(), !result.done) {\r\n            f(result.value[1], result.value[0], this);\r\n        }\r\n    }\r\n    get(key) {\r\n        if (!this.validKey(key))\r\n            return undefined;\r\n        if (this.root != null) {\r\n            const comp = this.splay(key);\r\n            if (comp == 0) {\r\n                return this.root.value;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    hasValue(value) {\r\n        const initialSplayCount = this.splayCount;\r\n        const visit = (node) => {\r\n            while (node != null) {\r\n                if (node.value == value)\r\n                    return true;\r\n                if (initialSplayCount != this.splayCount) {\r\n                    throw \"Concurrent modification during iteration.\";\r\n                }\r\n                if (node.right != null && visit(node.right)) {\r\n                    return true;\r\n                }\r\n                node = node.left;\r\n            }\r\n            return false;\r\n        };\r\n        return visit(this.root);\r\n    }\r\n    set(key, value) {\r\n        const comp = this.splay(key);\r\n        if (comp == 0) {\r\n            this.root = this.root.replaceValue(value);\r\n            this.splayCount += 1;\r\n            return this;\r\n        }\r\n        this.addNewRoot(new SplayTreeMapNode(key, value), comp);\r\n        return this;\r\n    }\r\n    setAll(other) {\r\n        other.forEach((value, key) => {\r\n            this.set(key, value);\r\n        });\r\n    }\r\n    setIfAbsent(key, ifAbsent) {\r\n        let comp = this.splay(key);\r\n        if (comp == 0) {\r\n            return this.root.value;\r\n        }\r\n        const modificationCount = this.modificationCount;\r\n        const splayCount = this.splayCount;\r\n        const value = ifAbsent();\r\n        if (modificationCount != this.modificationCount) {\r\n            throw \"Concurrent modification during iteration.\";\r\n        }\r\n        if (splayCount != this.splayCount) {\r\n            comp = this.splay(key);\r\n        }\r\n        this.addNewRoot(new SplayTreeMapNode(key, value), comp);\r\n        return value;\r\n    }\r\n    isEmpty() {\r\n        return this.root == null;\r\n    }\r\n    isNotEmpty() {\r\n        return !this.isEmpty();\r\n    }\r\n    firstKey() {\r\n        if (this.root == null)\r\n            return null;\r\n        return this._first().key;\r\n    }\r\n    lastKey() {\r\n        if (this.root == null)\r\n            return null;\r\n        return this._last().key;\r\n    }\r\n    lastKeyBefore(key) {\r\n        if (key == null)\r\n            throw \"Invalid arguments(s)\";\r\n        if (this.root == null)\r\n            return null;\r\n        const comp = this.splay(key);\r\n        if (comp < 0)\r\n            return this.root.key;\r\n        let node = this.root.left;\r\n        if (node == null)\r\n            return null;\r\n        let nodeRight = node.right;\r\n        while (nodeRight != null) {\r\n            node = nodeRight;\r\n            nodeRight = node.right;\r\n        }\r\n        return node.key;\r\n    }\r\n    firstKeyAfter(key) {\r\n        if (key == null)\r\n            throw \"Invalid arguments(s)\";\r\n        if (this.root == null)\r\n            return null;\r\n        const comp = this.splay(key);\r\n        if (comp > 0)\r\n            return this.root.key;\r\n        let node = this.root.right;\r\n        if (node == null)\r\n            return null;\r\n        let nodeLeft = node.left;\r\n        while (nodeLeft != null) {\r\n            node = nodeLeft;\r\n            nodeLeft = node.left;\r\n        }\r\n        return node.key;\r\n    }\r\n    update(key, update, ifAbsent) {\r\n        let comp = this.splay(key);\r\n        if (comp == 0) {\r\n            const modificationCount = this.modificationCount;\r\n            const splayCount = this.splayCount;\r\n            const newValue = update(this.root.value);\r\n            if (modificationCount != this.modificationCount) {\r\n                throw \"Concurrent modification during iteration.\";\r\n            }\r\n            if (splayCount != this.splayCount) {\r\n                this.splay(key);\r\n            }\r\n            this.root = this.root.replaceValue(newValue);\r\n            this.splayCount += 1;\r\n            return newValue;\r\n        }\r\n        if (ifAbsent != null) {\r\n            const modificationCount = this.modificationCount;\r\n            const splayCount = this.splayCount;\r\n            const newValue = ifAbsent();\r\n            if (modificationCount != this.modificationCount) {\r\n                throw \"Concurrent modification during iteration.\";\r\n            }\r\n            if (splayCount != this.splayCount) {\r\n                comp = this.splay(key);\r\n            }\r\n            this.addNewRoot(new SplayTreeMapNode(key, newValue), comp);\r\n            return newValue;\r\n        }\r\n        throw \"Invalid argument (key): Key not in map.\";\r\n    }\r\n    updateAll(update) {\r\n        const root = this.root;\r\n        if (root == null)\r\n            return;\r\n        const iterator = new SplayTreeMapEntryIterableIterator(this.wrap());\r\n        let node;\r\n        while (node = iterator.next(), !node.done) {\r\n            const newValue = update(...node.value);\r\n            iterator.replaceValue(newValue);\r\n        }\r\n    }\r\n    keys() {\r\n        return new SplayTreeKeyIterableIterator(this.wrap());\r\n    }\r\n    values() {\r\n        return new SplayTreeValueIterableIterator(this.wrap());\r\n    }\r\n    entries() {\r\n        return this[Symbol.iterator]();\r\n    }\r\n    [Symbol.iterator]() {\r\n        return new SplayTreeMapEntryIterableIterator(this.wrap());\r\n    }\r\n    [Symbol.toStringTag] = '[object Map]';\r\n}\r\nexport class SplayTreeSet extends SplayTree {\r\n    root = null;\r\n    compare;\r\n    validKey;\r\n    constructor(compare, isValidKey) {\r\n        super();\r\n        this.compare = compare ?? this.defaultCompare();\r\n        this.validKey = isValidKey ?? ((v) => v != null && v != undefined);\r\n    }\r\n    delete(element) {\r\n        if (!this.validKey(element))\r\n            return false;\r\n        return this._delete(element) != null;\r\n    }\r\n    deleteAll(elements) {\r\n        for (const element of elements) {\r\n            this.delete(element);\r\n        }\r\n    }\r\n    forEach(f) {\r\n        const nodes = this[Symbol.iterator]();\r\n        let result;\r\n        while (result = nodes.next(), !result.done) {\r\n            f(result.value, result.value, this);\r\n        }\r\n    }\r\n    add(element) {\r\n        const compare = this.splay(element);\r\n        if (compare != 0)\r\n            this.addNewRoot(new SplayTreeSetNode(element), compare);\r\n        return this;\r\n    }\r\n    addAndReturn(element) {\r\n        const compare = this.splay(element);\r\n        if (compare != 0)\r\n            this.addNewRoot(new SplayTreeSetNode(element), compare);\r\n        return this.root.key;\r\n    }\r\n    addAll(elements) {\r\n        for (const element of elements) {\r\n            this.add(element);\r\n        }\r\n    }\r\n    isEmpty() {\r\n        return this.root == null;\r\n    }\r\n    isNotEmpty() {\r\n        return this.root != null;\r\n    }\r\n    single() {\r\n        if (this.size == 0)\r\n            throw \"Bad state: No element\";\r\n        if (this.size > 1)\r\n            throw \"Bad state: Too many element\";\r\n        return this.root.key;\r\n    }\r\n    first() {\r\n        if (this.size == 0)\r\n            throw \"Bad state: No element\";\r\n        return this._first().key;\r\n    }\r\n    last() {\r\n        if (this.size == 0)\r\n            throw \"Bad state: No element\";\r\n        return this._last().key;\r\n    }\r\n    lastBefore(element) {\r\n        if (element == null)\r\n            throw \"Invalid arguments(s)\";\r\n        if (this.root == null)\r\n            return null;\r\n        const comp = this.splay(element);\r\n        if (comp < 0)\r\n            return this.root.key;\r\n        let node = this.root.left;\r\n        if (node == null)\r\n            return null;\r\n        let nodeRight = node.right;\r\n        while (nodeRight != null) {\r\n            node = nodeRight;\r\n            nodeRight = node.right;\r\n        }\r\n        return node.key;\r\n    }\r\n    firstAfter(element) {\r\n        if (element == null)\r\n            throw \"Invalid arguments(s)\";\r\n        if (this.root == null)\r\n            return null;\r\n        const comp = this.splay(element);\r\n        if (comp > 0)\r\n            return this.root.key;\r\n        let node = this.root.right;\r\n        if (node == null)\r\n            return null;\r\n        let nodeLeft = node.left;\r\n        while (nodeLeft != null) {\r\n            node = nodeLeft;\r\n            nodeLeft = node.left;\r\n        }\r\n        return node.key;\r\n    }\r\n    retainAll(elements) {\r\n        const retainSet = new SplayTreeSet(this.compare, this.validKey);\r\n        const modificationCount = this.modificationCount;\r\n        for (const object of elements) {\r\n            if (modificationCount != this.modificationCount) {\r\n                throw \"Concurrent modification during iteration.\";\r\n            }\r\n            if (this.validKey(object) && this.splay(object) == 0) {\r\n                retainSet.add(this.root.key);\r\n            }\r\n        }\r\n        if (retainSet.size != this.size) {\r\n            this.root = retainSet.root;\r\n            this.size = retainSet.size;\r\n            this.modificationCount++;\r\n        }\r\n    }\r\n    lookup(object) {\r\n        if (!this.validKey(object))\r\n            return null;\r\n        const comp = this.splay(object);\r\n        if (comp != 0)\r\n            return null;\r\n        return this.root.key;\r\n    }\r\n    intersection(other) {\r\n        const result = new SplayTreeSet(this.compare, this.validKey);\r\n        for (const element of this) {\r\n            if (other.has(element))\r\n                result.add(element);\r\n        }\r\n        return result;\r\n    }\r\n    difference(other) {\r\n        const result = new SplayTreeSet(this.compare, this.validKey);\r\n        for (const element of this) {\r\n            if (!other.has(element))\r\n                result.add(element);\r\n        }\r\n        return result;\r\n    }\r\n    union(other) {\r\n        const u = this.clone();\r\n        u.addAll(other);\r\n        return u;\r\n    }\r\n    clone() {\r\n        const set = new SplayTreeSet(this.compare, this.validKey);\r\n        set.size = this.size;\r\n        set.root = this.copyNode(this.root);\r\n        return set;\r\n    }\r\n    copyNode(node) {\r\n        if (node == null)\r\n            return null;\r\n        function copyChildren(node, dest) {\r\n            let left;\r\n            let right;\r\n            do {\r\n                left = node.left;\r\n                right = node.right;\r\n                if (left != null) {\r\n                    const newLeft = new SplayTreeSetNode(left.key);\r\n                    dest.left = newLeft;\r\n                    copyChildren(left, newLeft);\r\n                }\r\n                if (right != null) {\r\n                    const newRight = new SplayTreeSetNode(right.key);\r\n                    dest.right = newRight;\r\n                    node = right;\r\n                    dest = newRight;\r\n                }\r\n            } while (right != null);\r\n        }\r\n        const result = new SplayTreeSetNode(node.key);\r\n        copyChildren(node, result);\r\n        return result;\r\n    }\r\n    toSet() {\r\n        return this.clone();\r\n    }\r\n    entries() {\r\n        return new SplayTreeSetEntryIterableIterator(this.wrap());\r\n    }\r\n    keys() {\r\n        return this[Symbol.iterator]();\r\n    }\r\n    values() {\r\n        return this[Symbol.iterator]();\r\n    }\r\n    [Symbol.iterator]() {\r\n        return new SplayTreeKeyIterableIterator(this.wrap());\r\n    }\r\n    [Symbol.toStringTag] = '[object Set]';\r\n}\r\nclass SplayTreeIterableIterator {\r\n    tree;\r\n    path = new Array();\r\n    modificationCount = null;\r\n    splayCount;\r\n    constructor(tree) {\r\n        this.tree = tree;\r\n        this.splayCount = tree.getSplayCount();\r\n    }\r\n    [Symbol.iterator]() {\r\n        return this;\r\n    }\r\n    next() {\r\n        if (this.moveNext())\r\n            return { done: false, value: this.current() };\r\n        return { done: true, value: null };\r\n    }\r\n    current() {\r\n        if (!this.path.length)\r\n            return null;\r\n        const node = this.path[this.path.length - 1];\r\n        return this.getValue(node);\r\n    }\r\n    rebuildPath(key) {\r\n        this.path.splice(0, this.path.length);\r\n        this.tree.splay(key);\r\n        this.path.push(this.tree.getRoot());\r\n        this.splayCount = this.tree.getSplayCount();\r\n    }\r\n    findLeftMostDescendent(node) {\r\n        while (node != null) {\r\n            this.path.push(node);\r\n            node = node.left;\r\n        }\r\n    }\r\n    moveNext() {\r\n        if (this.modificationCount != this.tree.getModificationCount()) {\r\n            if (this.modificationCount == null) {\r\n                this.modificationCount = this.tree.getModificationCount();\r\n                let node = this.tree.getRoot();\r\n                while (node != null) {\r\n                    this.path.push(node);\r\n                    node = node.left;\r\n                }\r\n                return this.path.length > 0;\r\n            }\r\n            throw \"Concurrent modification during iteration.\";\r\n        }\r\n        if (!this.path.length)\r\n            return false;\r\n        if (this.splayCount != this.tree.getSplayCount()) {\r\n            this.rebuildPath(this.path[this.path.length - 1].key);\r\n        }\r\n        let node = this.path[this.path.length - 1];\r\n        let next = node.right;\r\n        if (next != null) {\r\n            while (next != null) {\r\n                this.path.push(next);\r\n                next = next.left;\r\n            }\r\n            return true;\r\n        }\r\n        this.path.pop();\r\n        while (this.path.length && this.path[this.path.length - 1].right === node) {\r\n            node = this.path.pop();\r\n        }\r\n        return this.path.length > 0;\r\n    }\r\n}\r\nclass SplayTreeKeyIterableIterator extends SplayTreeIterableIterator {\r\n    getValue(node) {\r\n        return node.key;\r\n    }\r\n}\r\nclass SplayTreeSetEntryIterableIterator extends SplayTreeIterableIterator {\r\n    getValue(node) {\r\n        return [node.key, node.key];\r\n    }\r\n}\r\nclass SplayTreeValueIterableIterator extends SplayTreeIterableIterator {\r\n    constructor(map) {\r\n        super(map);\r\n    }\r\n    getValue(node) {\r\n        return node.value;\r\n    }\r\n}\r\nclass SplayTreeMapEntryIterableIterator extends SplayTreeIterableIterator {\r\n    constructor(map) {\r\n        super(map);\r\n    }\r\n    getValue(node) {\r\n        return [node.key, node.value];\r\n    }\r\n    replaceValue(value) {\r\n        if (this.modificationCount != this.tree.getModificationCount()) {\r\n            throw \"Concurrent modification during iteration.\";\r\n        }\r\n        if (this.splayCount != this.tree.getSplayCount()) {\r\n            this.rebuildPath(this.path[this.path.length - 1].key);\r\n        }\r\n        const last = this.path.pop();\r\n        const newLast = last.replaceValue(value);\r\n        if (!this.path.length) {\r\n            this.tree.setRoot(newLast);\r\n        }\r\n        else {\r\n            const parent = this.path[this.path.length - 1];\r\n            if (last === parent.left) {\r\n                parent.left = newLast;\r\n            }\r\n            else {\r\n                parent.right = newLast;\r\n            }\r\n        }\r\n        this.path.push(newLast);\r\n        const count = this.tree.getSplayCount() + 1;\r\n        this.tree.setSplayCount(count);\r\n        this.splayCount = count;\r\n    }\r\n}\r\n","export default (x) => {\n    return x;\n};\n","import BigNumber from \"bignumber.js\";\nimport { SplayTreeSet } from \"splaytree-ts\";\nimport compare from \"./compare.js\";\nimport identity from \"./identity.js\";\nexport default (eps) => {\n    if (eps) {\n        const xTree = new SplayTreeSet(compare(eps));\n        const yTree = new SplayTreeSet(compare(eps));\n        const snapCoord = (coord, tree) => {\n            return tree.addAndReturn(coord);\n        };\n        const snap = (v) => {\n            return {\n                x: snapCoord(v.x, xTree),\n                y: snapCoord(v.y, yTree),\n            };\n        };\n        snap({ x: new BigNumber(0), y: new BigNumber(0) });\n        return snap;\n    }\n    return identity;\n};\n","import compare from \"./compare.js\";\nimport orient from \"./orient.js\";\nimport snap from \"./snap.js\";\nconst set = (eps) => {\n    return {\n        set: (eps) => { precision = set(eps); },\n        reset: () => set(eps),\n        compare: compare(eps),\n        snap: snap(eps),\n        orient: orient(eps)\n    };\n};\nexport let precision = set();\n","/**\n * A bounding box has the format:\n *\n *  { ll: { x: xmin, y: ymin }, ur: { x: xmax, y: ymax } }\n *\n */\nexport const isInBbox = (bbox, point) => {\n    return (bbox.ll.x.isLessThanOrEqualTo(point.x) &&\n        point.x.isLessThanOrEqualTo(bbox.ur.x) &&\n        bbox.ll.y.isLessThanOrEqualTo(point.y) &&\n        point.y.isLessThanOrEqualTo(bbox.ur.y));\n};\n/* Returns either null, or a bbox (aka an ordered pair of points)\n * If there is only one point of overlap, a bbox with identical points\n * will be returned */\nexport const getBboxOverlap = (b1, b2) => {\n    // check if the bboxes overlap at all\n    if (b2.ur.x.isLessThan(b1.ll.x) ||\n        b1.ur.x.isLessThan(b2.ll.x) ||\n        b2.ur.y.isLessThan(b1.ll.y) ||\n        b1.ur.y.isLessThan(b2.ll.y))\n        return null;\n    // find the middle two X values\n    const lowerX = b1.ll.x.isLessThan(b2.ll.x) ? b2.ll.x : b1.ll.x;\n    const upperX = b1.ur.x.isLessThan(b2.ur.x) ? b1.ur.x : b2.ur.x;\n    // find the middle two Y values\n    const lowerY = b1.ll.y.isLessThan(b2.ll.y) ? b2.ll.y : b1.ll.y;\n    const upperY = b1.ur.y.isLessThan(b2.ur.y) ? b1.ur.y : b2.ur.y;\n    // put those middle values together to get the overlap\n    return { ll: { x: lowerX, y: lowerY }, ur: { x: upperX, y: upperY } };\n};\n","/* Cross Product of two vectors with first point at origin */\nexport const crossProduct = (a, b) => a.x.times(b.y).minus(a.y.times(b.x));\n/* Dot Product of two vectors with first point at origin */\nexport const dotProduct = (a, b) => a.x.times(b.x).plus(a.y.times(b.y));\nexport const length = (v) => dotProduct(v, v).sqrt();\n/* Get the sine of the angle from pShared -> pAngle to pShaed -> pBase */\nexport const sineOfAngle = (pShared, pBase, pAngle) => {\n    const vBase = { x: pBase.x.minus(pShared.x), y: pBase.y.minus(pShared.y) };\n    const vAngle = { x: pAngle.x.minus(pShared.x), y: pAngle.y.minus(pShared.y) };\n    return crossProduct(vAngle, vBase).div(length(vAngle)).div(length(vBase));\n};\n/* Get the cosine of the angle from pShared -> pAngle to pShaed -> pBase */\nexport const cosineOfAngle = (pShared, pBase, pAngle) => {\n    const vBase = { x: pBase.x.minus(pShared.x), y: pBase.y.minus(pShared.y) };\n    const vAngle = { x: pAngle.x.minus(pShared.x), y: pAngle.y.minus(pShared.y) };\n    return dotProduct(vAngle, vBase).div(length(vAngle)).div(length(vBase));\n};\n/* Get the x coordinate where the given line (defined by a point and vector)\n * crosses the horizontal line with the given y coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\nexport const horizontalIntersection = (pt, v, y) => {\n    if (v.y.isZero())\n        return null;\n    return { x: pt.x.plus((v.x.div(v.y)).times(y.minus(pt.y))), y: y };\n};\n/* Get the y coordinate where the given line (defined by a point and vector)\n * crosses the vertical line with the given x coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\nexport const verticalIntersection = (pt, v, x) => {\n    if (v.x.isZero())\n        return null;\n    return { x: x, y: pt.y.plus((v.y.div(v.x)).times(x.minus(pt.x))) };\n};\n/* Get the intersection of two lines, each defined by a base point and a vector.\n * In the case of parrallel lines (including overlapping ones) returns null. */\nexport const intersection = (pt1, v1, pt2, v2) => {\n    // take some shortcuts for vertical and horizontal lines\n    // this also ensures we don't calculate an intersection and then discover\n    // it's actually outside the bounding box of the line\n    if (v1.x.isZero())\n        return verticalIntersection(pt2, v2, pt1.x);\n    if (v2.x.isZero())\n        return verticalIntersection(pt1, v1, pt2.x);\n    if (v1.y.isZero())\n        return horizontalIntersection(pt2, v2, pt1.y);\n    if (v2.y.isZero())\n        return horizontalIntersection(pt1, v1, pt2.y);\n    // General case for non-overlapping segments.\n    // This algorithm is based on Schneider and Eberly.\n    // http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf - pg 244\n    const kross = crossProduct(v1, v2);\n    if (kross.isZero())\n        return null;\n    const ve = { x: pt2.x.minus(pt1.x), y: pt2.y.minus(pt1.y) };\n    const d1 = crossProduct(ve, v1).div(kross);\n    const d2 = crossProduct(ve, v2).div(kross);\n    // take the average of the two calculations to minimize rounding error\n    const x1 = pt1.x.plus(d2.times(v1.x)), x2 = pt2.x.plus(d1.times(v2.x));\n    const y1 = pt1.y.plus(d2.times(v1.y)), y2 = pt2.y.plus(d1.times(v2.y));\n    const x = x1.plus(x2).div(2);\n    const y = y1.plus(y2).div(2);\n    return { x: x, y: y };\n};\n/* Given a vector, return one that is perpendicular */\nexport const perpendicular = (v) => {\n    return { x: v.y.negated(), y: v.x };\n};\n","import Segment from \"./segment.js\";\nimport { cosineOfAngle, sineOfAngle } from \"./vector.js\";\nexport default class SweepEvent {\n    point;\n    isLeft;\n    segment;\n    otherSE;\n    consumedBy;\n    // for ordering sweep events in the sweep event queue\n    static compare(a, b) {\n        // favor event with a point that the sweep line hits first\n        const ptCmp = SweepEvent.comparePoints(a.point, b.point);\n        if (ptCmp !== 0)\n            return ptCmp;\n        // the points are the same, so link them if needed\n        if (a.point !== b.point)\n            a.link(b);\n        // favor right events over left\n        if (a.isLeft !== b.isLeft)\n            return a.isLeft ? 1 : -1;\n        // we have two matching left or right endpoints\n        // ordering of this case is the same as for their segments\n        return Segment.compare(a.segment, b.segment);\n    }\n    // for ordering points in sweep line order\n    static comparePoints(aPt, bPt) {\n        if (aPt.x.isLessThan(bPt.x))\n            return -1;\n        if (aPt.x.isGreaterThan(bPt.x))\n            return 1;\n        if (aPt.y.isLessThan(bPt.y))\n            return -1;\n        if (aPt.y.isGreaterThan(bPt.y))\n            return 1;\n        return 0;\n    }\n    // Warning: 'point' input will be modified and re-used (for performance)\n    constructor(point, isLeft) {\n        if (point.events === undefined)\n            point.events = [this];\n        else\n            point.events.push(this);\n        this.point = point;\n        this.isLeft = isLeft;\n        // this.segment, this.otherSE set by factory\n    }\n    link(other) {\n        if (other.point === this.point) {\n            throw new Error(\"Tried to link already linked events\");\n        }\n        const otherEvents = other.point.events;\n        for (let i = 0, iMax = otherEvents.length; i < iMax; i++) {\n            const evt = otherEvents[i];\n            this.point.events.push(evt);\n            evt.point = this.point;\n        }\n        this.checkForConsuming();\n    }\n    /* Do a pass over our linked events and check to see if any pair\n     * of segments match, and should be consumed. */\n    checkForConsuming() {\n        // FIXME: The loops in this method run O(n^2) => no good.\n        //        Maintain little ordered sweep event trees?\n        //        Can we maintaining an ordering that avoids the need\n        //        for the re-sorting with getLeftmostComparator in geom-out?\n        // Compare each pair of events to see if other events also match\n        const numEvents = this.point.events.length;\n        for (let i = 0; i < numEvents; i++) {\n            const evt1 = this.point.events[i];\n            if (evt1.segment.consumedBy !== undefined)\n                continue;\n            for (let j = i + 1; j < numEvents; j++) {\n                const evt2 = this.point.events[j];\n                if (evt2.consumedBy !== undefined)\n                    continue;\n                if (evt1.otherSE.point.events !== evt2.otherSE.point.events)\n                    continue;\n                evt1.segment.consume(evt2.segment);\n            }\n        }\n    }\n    getAvailableLinkedEvents() {\n        // point.events is always of length 2 or greater\n        const events = [];\n        for (let i = 0, iMax = this.point.events.length; i < iMax; i++) {\n            const evt = this.point.events[i];\n            if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n                events.push(evt);\n            }\n        }\n        return events;\n    }\n    /**\n     * Returns a comparator function for sorting linked events that will\n     * favor the event that will give us the smallest left-side angle.\n     * All ring construction starts as low as possible heading to the right,\n     * so by always turning left as sharp as possible we'll get polygons\n     * without uncessary loops & holes.\n     *\n     * The comparator function has a compute cache such that it avoids\n     * re-computing already-computed values.\n     */\n    getLeftmostComparator(baseEvent) {\n        const cache = new Map();\n        const fillCache = (linkedEvent) => {\n            const nextEvent = linkedEvent.otherSE;\n            cache.set(linkedEvent, {\n                sine: sineOfAngle(this.point, baseEvent.point, nextEvent.point),\n                cosine: cosineOfAngle(this.point, baseEvent.point, nextEvent.point),\n            });\n        };\n        return (a, b) => {\n            if (!cache.has(a))\n                fillCache(a);\n            if (!cache.has(b))\n                fillCache(b);\n            const { sine: asine, cosine: acosine } = cache.get(a);\n            const { sine: bsine, cosine: bcosine } = cache.get(b);\n            // both on or above x-axis\n            if (asine.isGreaterThanOrEqualTo(0) && bsine.isGreaterThanOrEqualTo(0)) {\n                if (acosine.isLessThan(bcosine))\n                    return 1;\n                if (acosine.isGreaterThan(bcosine))\n                    return -1;\n                return 0;\n            }\n            // both below x-axis\n            if (asine.isLessThan(0) && bsine.isLessThan(0)) {\n                if (acosine.isLessThan(bcosine))\n                    return -1;\n                if (acosine.isGreaterThan(bcosine))\n                    return 1;\n                return 0;\n            }\n            // one above x-axis, one below\n            if (bsine.isLessThan(asine))\n                return -1;\n            if (bsine.isGreaterThan(asine))\n                return 1;\n            return 0;\n        };\n    }\n}\n","import { getBboxOverlap, isInBbox } from \"./bbox.js\";\nimport operation from \"./operation.js\";\nimport { precision } from \"./precision.js\";\nimport SweepEvent from \"./sweep-event.js\";\nimport { intersection } from \"./vector.js\";\n// Give segments unique ID's to get consistent sorting of\n// segments and sweep events when all else is identical\nlet segmentId = 0;\nexport default class Segment {\n    id;\n    leftSE;\n    rightSE;\n    rings;\n    windings;\n    ringOut;\n    consumedBy;\n    prev;\n    _prevInResult;\n    _beforeState;\n    _afterState;\n    _isInResult;\n    /* This compare() function is for ordering segments in the sweep\n     * line tree, and does so according to the following criteria:\n     *\n     * Consider the vertical line that lies an infinestimal step to the\n     * right of the right-more of the two left endpoints of the input\n     * segments. Imagine slowly moving a point up from negative infinity\n     * in the increasing y direction. Which of the two segments will that\n     * point intersect first? That segment comes 'before' the other one.\n     *\n     * If neither segment would be intersected by such a line, (if one\n     * or more of the segments are vertical) then the line to be considered\n     * is directly on the right-more of the two left inputs.\n     */\n    static compare(a, b) {\n        const alx = a.leftSE.point.x;\n        const blx = b.leftSE.point.x;\n        const arx = a.rightSE.point.x;\n        const brx = b.rightSE.point.x;\n        // check if they're even in the same vertical plane\n        if (brx.isLessThan(alx))\n            return 1;\n        if (arx.isLessThan(blx))\n            return -1;\n        const aly = a.leftSE.point.y;\n        const bly = b.leftSE.point.y;\n        const ary = a.rightSE.point.y;\n        const bry = b.rightSE.point.y;\n        // is left endpoint of segment B the right-more?\n        if (alx.isLessThan(blx)) {\n            // are the two segments in the same horizontal plane?\n            if (bly.isLessThan(aly) && bly.isLessThan(ary))\n                return 1;\n            if (bly.isGreaterThan(aly) && bly.isGreaterThan(ary))\n                return -1;\n            // is the B left endpoint colinear to segment A?\n            const aCmpBLeft = a.comparePoint(b.leftSE.point);\n            if (aCmpBLeft < 0)\n                return 1;\n            if (aCmpBLeft > 0)\n                return -1;\n            // is the A right endpoint colinear to segment B ?\n            const bCmpARight = b.comparePoint(a.rightSE.point);\n            if (bCmpARight !== 0)\n                return bCmpARight;\n            // colinear segments, consider the one with left-more\n            // left endpoint to be first (arbitrary?)\n            return -1;\n        }\n        // is left endpoint of segment A the right-more?\n        if (alx.isGreaterThan(blx)) {\n            if (aly.isLessThan(bly) && aly.isLessThan(bry))\n                return -1;\n            if (aly.isGreaterThan(bly) && aly.isGreaterThan(bry))\n                return 1;\n            // is the A left endpoint colinear to segment B?\n            const bCmpALeft = b.comparePoint(a.leftSE.point);\n            if (bCmpALeft !== 0)\n                return bCmpALeft;\n            // is the B right endpoint colinear to segment A?\n            const aCmpBRight = a.comparePoint(b.rightSE.point);\n            if (aCmpBRight < 0)\n                return 1;\n            if (aCmpBRight > 0)\n                return -1;\n            // colinear segments, consider the one with left-more\n            // left endpoint to be first (arbitrary?)\n            return 1;\n        }\n        // if we get here, the two left endpoints are in the same\n        // vertical plane, ie alx === blx\n        // consider the lower left-endpoint to come first\n        if (aly.isLessThan(bly))\n            return -1;\n        if (aly.isGreaterThan(bly))\n            return 1;\n        // left endpoints are identical\n        // check for colinearity by using the left-more right endpoint\n        // is the A right endpoint more left-more?\n        if (arx.isLessThan(brx)) {\n            const bCmpARight = b.comparePoint(a.rightSE.point);\n            if (bCmpARight !== 0)\n                return bCmpARight;\n        }\n        // is the B right endpoint more left-more?\n        if (arx.isGreaterThan(brx)) {\n            const aCmpBRight = a.comparePoint(b.rightSE.point);\n            if (aCmpBRight < 0)\n                return 1;\n            if (aCmpBRight > 0)\n                return -1;\n        }\n        if (!arx.eq(brx)) {\n            // are these two [almost] vertical segments with opposite orientation?\n            // if so, the one with the lower right endpoint comes first\n            const ay = ary.minus(aly);\n            const ax = arx.minus(alx);\n            const by = bry.minus(bly);\n            const bx = brx.minus(blx);\n            if (ay.isGreaterThan(ax) && by.isLessThan(bx))\n                return 1;\n            if (ay.isLessThan(ax) && by.isGreaterThan(bx))\n                return -1;\n        }\n        // we have colinear segments with matching orientation\n        // consider the one with more left-more right endpoint to be first\n        if (arx.isGreaterThan(brx))\n            return 1;\n        if (arx.isLessThan(brx))\n            return -1;\n        // if we get here, two two right endpoints are in the same\n        // vertical plane, ie arx === brx\n        // consider the lower right-endpoint to come first\n        if (ary.isLessThan(bry))\n            return -1;\n        if (ary.isGreaterThan(bry))\n            return 1;\n        // right endpoints identical as well, so the segments are idential\n        // fall back on creation order as consistent tie-breaker\n        if (a.id < b.id)\n            return -1;\n        if (a.id > b.id)\n            return 1;\n        // identical segment, ie a === b\n        return 0;\n    }\n    /* Warning: a reference to ringWindings input will be stored,\n     *  and possibly will be later modified */\n    constructor(leftSE, rightSE, rings, windings) {\n        this.id = ++segmentId;\n        this.leftSE = leftSE;\n        leftSE.segment = this;\n        leftSE.otherSE = rightSE;\n        this.rightSE = rightSE;\n        rightSE.segment = this;\n        rightSE.otherSE = leftSE;\n        this.rings = rings;\n        this.windings = windings;\n        // left unset for performance, set later in algorithm\n        // this.ringOut, this.consumedBy, this.prev\n    }\n    static fromRing(pt1, pt2, ring) {\n        let leftPt, rightPt, winding;\n        // ordering the two points according to sweep line ordering\n        const cmpPts = SweepEvent.comparePoints(pt1, pt2);\n        if (cmpPts < 0) {\n            leftPt = pt1;\n            rightPt = pt2;\n            winding = 1;\n        }\n        else if (cmpPts > 0) {\n            leftPt = pt2;\n            rightPt = pt1;\n            winding = -1;\n        }\n        else\n            throw new Error(`Tried to create degenerate segment at [${pt1.x}, ${pt1.y}]`);\n        const leftSE = new SweepEvent(leftPt, true);\n        const rightSE = new SweepEvent(rightPt, false);\n        return new Segment(leftSE, rightSE, [ring], [winding]);\n    }\n    /* When a segment is split, the rightSE is replaced with a new sweep event */\n    replaceRightSE(newRightSE) {\n        this.rightSE = newRightSE;\n        this.rightSE.segment = this;\n        this.rightSE.otherSE = this.leftSE;\n        this.leftSE.otherSE = this.rightSE;\n    }\n    bbox() {\n        const y1 = this.leftSE.point.y;\n        const y2 = this.rightSE.point.y;\n        return {\n            ll: { x: this.leftSE.point.x, y: y1.isLessThan(y2) ? y1 : y2 },\n            ur: { x: this.rightSE.point.x, y: y1.isGreaterThan(y2) ? y1 : y2 },\n        };\n    }\n    /* A vector from the left point to the right */\n    vector() {\n        return {\n            x: this.rightSE.point.x.minus(this.leftSE.point.x),\n            y: this.rightSE.point.y.minus(this.leftSE.point.y),\n        };\n    }\n    isAnEndpoint(pt) {\n        return ((pt.x.eq(this.leftSE.point.x) && pt.y.eq(this.leftSE.point.y)) ||\n            (pt.x.eq(this.rightSE.point.x) && pt.y.eq(this.rightSE.point.y)));\n    }\n    /* Compare this segment with a point.\n     *\n     * A point P is considered to be colinear to a segment if there\n     * exists a distance D such that if we travel along the segment\n     * from one * endpoint towards the other a distance D, we find\n     * ourselves at point P.\n     *\n     * Return value indicates:\n     *\n     *   1: point lies above the segment (to the left of vertical)\n     *   0: point is colinear to segment\n     *  -1: point lies below the segment (to the right of vertical)\n     */\n    comparePoint(point) {\n        return precision.orient(this.leftSE.point, point, this.rightSE.point);\n    }\n    /**\n     * Given another segment, returns the first non-trivial intersection\n     * between the two segments (in terms of sweep line ordering), if it exists.\n     *\n     * A 'non-trivial' intersection is one that will cause one or both of the\n     * segments to be split(). As such, 'trivial' vs. 'non-trivial' intersection:\n     *\n     *   * endpoint of segA with endpoint of segB --> trivial\n     *   * endpoint of segA with point along segB --> non-trivial\n     *   * endpoint of segB with point along segA --> non-trivial\n     *   * point along segA with point along segB --> non-trivial\n     *\n     * If no non-trivial intersection exists, return null\n     * Else, return null.\n     */\n    getIntersection(other) {\n        // If bboxes don't overlap, there can't be any intersections\n        const tBbox = this.bbox();\n        const oBbox = other.bbox();\n        const bboxOverlap = getBboxOverlap(tBbox, oBbox);\n        if (bboxOverlap === null)\n            return null;\n        // We first check to see if the endpoints can be considered intersections.\n        // This will 'snap' intersections to endpoints if possible, and will\n        // handle cases of colinearity.\n        const tlp = this.leftSE.point;\n        const trp = this.rightSE.point;\n        const olp = other.leftSE.point;\n        const orp = other.rightSE.point;\n        // does each endpoint touch the other segment?\n        // note that we restrict the 'touching' definition to only allow segments\n        // to touch endpoints that lie forward from where we are in the sweep line pass\n        const touchesOtherLSE = isInBbox(tBbox, olp) && this.comparePoint(olp) === 0;\n        const touchesThisLSE = isInBbox(oBbox, tlp) && other.comparePoint(tlp) === 0;\n        const touchesOtherRSE = isInBbox(tBbox, orp) && this.comparePoint(orp) === 0;\n        const touchesThisRSE = isInBbox(oBbox, trp) && other.comparePoint(trp) === 0;\n        // do left endpoints match?\n        if (touchesThisLSE && touchesOtherLSE) {\n            // these two cases are for colinear segments with matching left\n            // endpoints, and one segment being longer than the other\n            if (touchesThisRSE && !touchesOtherRSE)\n                return trp;\n            if (!touchesThisRSE && touchesOtherRSE)\n                return orp;\n            // either the two segments match exactly (two trival intersections)\n            // or just on their left endpoint (one trivial intersection\n            return null;\n        }\n        // does this left endpoint matches (other doesn't)\n        if (touchesThisLSE) {\n            // check for segments that just intersect on opposing endpoints\n            if (touchesOtherRSE) {\n                if (tlp.x.eq(orp.x) && tlp.y.eq(orp.y))\n                    return null;\n            }\n            // t-intersection on left endpoint\n            return tlp;\n        }\n        // does other left endpoint matches (this doesn't)\n        if (touchesOtherLSE) {\n            // check for segments that just intersect on opposing endpoints\n            if (touchesThisRSE) {\n                if (trp.x.eq(olp.x) && trp.y.eq(olp.y))\n                    return null;\n            }\n            // t-intersection on left endpoint\n            return olp;\n        }\n        // trivial intersection on right endpoints\n        if (touchesThisRSE && touchesOtherRSE)\n            return null;\n        // t-intersections on just one right endpoint\n        if (touchesThisRSE)\n            return trp;\n        if (touchesOtherRSE)\n            return orp;\n        // None of our endpoints intersect. Look for a general intersection between\n        // infinite lines laid over the segments\n        const pt = intersection(tlp, this.vector(), olp, other.vector());\n        // are the segments parrallel? Note that if they were colinear with overlap,\n        // they would have an endpoint intersection and that case was already handled above\n        if (pt === null)\n            return null;\n        // is the intersection found between the lines not on the segments?\n        if (!isInBbox(bboxOverlap, pt))\n            return null;\n        // round the the computed point if needed\n        return precision.snap(pt);\n    }\n    /**\n     * Split the given segment into multiple segments on the given points.\n     *  * Each existing segment will retain its leftSE and a new rightSE will be\n     *    generated for it.\n     *  * A new segment will be generated which will adopt the original segment's\n     *    rightSE, and a new leftSE will be generated for it.\n     *  * If there are more than two points given to split on, new segments\n     *    in the middle will be generated with new leftSE and rightSE's.\n     *  * An array of the newly generated SweepEvents will be returned.\n     *\n     * Warning: input array of points is modified\n     */\n    split(point) {\n        const newEvents = [];\n        const alreadyLinked = point.events !== undefined;\n        const newLeftSE = new SweepEvent(point, true);\n        const newRightSE = new SweepEvent(point, false);\n        const oldRightSE = this.rightSE;\n        this.replaceRightSE(newRightSE);\n        newEvents.push(newRightSE);\n        newEvents.push(newLeftSE);\n        const newSeg = new Segment(newLeftSE, oldRightSE, this.rings.slice(), this.windings.slice());\n        // when splitting a nearly vertical downward-facing segment,\n        // sometimes one of the resulting new segments is vertical, in which\n        // case its left and right events may need to be swapped\n        if (SweepEvent.comparePoints(newSeg.leftSE.point, newSeg.rightSE.point) > 0) {\n            newSeg.swapEvents();\n        }\n        if (SweepEvent.comparePoints(this.leftSE.point, this.rightSE.point) > 0) {\n            this.swapEvents();\n        }\n        // in the point we just used to create new sweep events with was already\n        // linked to other events, we need to check if either of the affected\n        // segments should be consumed\n        if (alreadyLinked) {\n            newLeftSE.checkForConsuming();\n            newRightSE.checkForConsuming();\n        }\n        return newEvents;\n    }\n    /* Swap which event is left and right */\n    swapEvents() {\n        const tmpEvt = this.rightSE;\n        this.rightSE = this.leftSE;\n        this.leftSE = tmpEvt;\n        this.leftSE.isLeft = true;\n        this.rightSE.isLeft = false;\n        for (let i = 0, iMax = this.windings.length; i < iMax; i++) {\n            this.windings[i] *= -1;\n        }\n    }\n    /* Consume another segment. We take their rings under our wing\n     * and mark them as consumed. Use for perfectly overlapping segments */\n    consume(other) {\n        let consumer = this;\n        let consumee = other;\n        while (consumer.consumedBy)\n            consumer = consumer.consumedBy;\n        while (consumee.consumedBy)\n            consumee = consumee.consumedBy;\n        const cmp = Segment.compare(consumer, consumee);\n        if (cmp === 0)\n            return; // already consumed\n        // the winner of the consumption is the earlier segment\n        // according to sweep line ordering\n        if (cmp > 0) {\n            const tmp = consumer;\n            consumer = consumee;\n            consumee = tmp;\n        }\n        // make sure a segment doesn't consume it's prev\n        if (consumer.prev === consumee) {\n            const tmp = consumer;\n            consumer = consumee;\n            consumee = tmp;\n        }\n        for (let i = 0, iMax = consumee.rings.length; i < iMax; i++) {\n            const ring = consumee.rings[i];\n            const winding = consumee.windings[i];\n            const index = consumer.rings.indexOf(ring);\n            if (index === -1) {\n                consumer.rings.push(ring);\n                consumer.windings.push(winding);\n            }\n            else\n                consumer.windings[index] += winding;\n        }\n        consumee.rings = null;\n        consumee.windings = null;\n        consumee.consumedBy = consumer;\n        // mark sweep events consumed as to maintain ordering in sweep event queue\n        consumee.leftSE.consumedBy = consumer.leftSE;\n        consumee.rightSE.consumedBy = consumer.rightSE;\n    }\n    /* The first segment previous segment chain that is in the result */\n    prevInResult() {\n        if (this._prevInResult !== undefined)\n            return this._prevInResult;\n        if (!this.prev)\n            this._prevInResult = null;\n        else if (this.prev.isInResult())\n            this._prevInResult = this.prev;\n        else\n            this._prevInResult = this.prev.prevInResult();\n        return this._prevInResult;\n    }\n    beforeState() {\n        if (this._beforeState !== undefined)\n            return this._beforeState;\n        if (!this.prev)\n            this._beforeState = {\n                rings: [],\n                windings: [],\n                multiPolys: [],\n            };\n        else {\n            const seg = this.prev.consumedBy || this.prev;\n            this._beforeState = seg.afterState();\n        }\n        return this._beforeState;\n    }\n    afterState() {\n        if (this._afterState !== undefined)\n            return this._afterState;\n        const beforeState = this.beforeState();\n        this._afterState = {\n            rings: beforeState.rings.slice(0),\n            windings: beforeState.windings.slice(0),\n            multiPolys: [],\n        };\n        const ringsAfter = this._afterState.rings;\n        const windingsAfter = this._afterState.windings;\n        const mpsAfter = this._afterState.multiPolys;\n        // calculate ringsAfter, windingsAfter\n        for (let i = 0, iMax = this.rings.length; i < iMax; i++) {\n            const ring = this.rings[i];\n            const winding = this.windings[i];\n            const index = ringsAfter.indexOf(ring);\n            if (index === -1) {\n                ringsAfter.push(ring);\n                windingsAfter.push(winding);\n            }\n            else\n                windingsAfter[index] += winding;\n        }\n        // calcualte polysAfter\n        const polysAfter = [];\n        const polysExclude = [];\n        for (let i = 0, iMax = ringsAfter.length; i < iMax; i++) {\n            if (windingsAfter[i] === 0)\n                continue; // non-zero rule\n            const ring = ringsAfter[i];\n            const poly = ring.poly;\n            if (polysExclude.indexOf(poly) !== -1)\n                continue;\n            if (ring.isExterior)\n                polysAfter.push(poly);\n            else {\n                if (polysExclude.indexOf(poly) === -1)\n                    polysExclude.push(poly);\n                const index = polysAfter.indexOf(ring.poly);\n                if (index !== -1)\n                    polysAfter.splice(index, 1);\n            }\n        }\n        // calculate multiPolysAfter\n        for (let i = 0, iMax = polysAfter.length; i < iMax; i++) {\n            const mp = polysAfter[i].multiPoly;\n            if (mpsAfter.indexOf(mp) === -1)\n                mpsAfter.push(mp);\n        }\n        return this._afterState;\n    }\n    /* Is this segment part of the final result? */\n    isInResult() {\n        // if we've been consumed, we're not in the result\n        if (this.consumedBy)\n            return false;\n        if (this._isInResult !== undefined)\n            return this._isInResult;\n        const mpsBefore = this.beforeState().multiPolys;\n        const mpsAfter = this.afterState().multiPolys;\n        switch (operation.type) {\n            case \"union\": {\n                // UNION - included iff:\n                //  * On one side of us there is 0 poly interiors AND\n                //  * On the other side there is 1 or more.\n                const noBefores = mpsBefore.length === 0;\n                const noAfters = mpsAfter.length === 0;\n                this._isInResult = noBefores !== noAfters;\n                break;\n            }\n            case \"intersection\": {\n                // INTERSECTION - included iff:\n                //  * on one side of us all multipolys are rep. with poly interiors AND\n                //  * on the other side of us, not all multipolys are repsented\n                //    with poly interiors\n                let least;\n                let most;\n                if (mpsBefore.length < mpsAfter.length) {\n                    least = mpsBefore.length;\n                    most = mpsAfter.length;\n                }\n                else {\n                    least = mpsAfter.length;\n                    most = mpsBefore.length;\n                }\n                this._isInResult = most === operation.numMultiPolys && least < most;\n                break;\n            }\n            case \"xor\": {\n                // XOR - included iff:\n                //  * the difference between the number of multipolys represented\n                //    with poly interiors on our two sides is an odd number\n                const diff = Math.abs(mpsBefore.length - mpsAfter.length);\n                this._isInResult = diff % 2 === 1;\n                break;\n            }\n            case \"difference\": {\n                // DIFFERENCE included iff:\n                //  * on exactly one side, we have just the subject\n                const isJustSubject = (mps) => mps.length === 1 && mps[0].isSubject;\n                this._isInResult = isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n                break;\n            }\n        }\n        return this._isInResult;\n    }\n}\n","import BigNumber from \"bignumber.js\";\nimport { precision } from \"./precision.js\";\nimport Segment from \"./segment.js\";\nexport class RingIn {\n    poly;\n    isExterior;\n    segments;\n    bbox;\n    constructor(geomRing, poly, isExterior) {\n        if (!Array.isArray(geomRing) || geomRing.length === 0) {\n            throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n        }\n        this.poly = poly;\n        this.isExterior = isExterior;\n        this.segments = [];\n        if (typeof geomRing[0][0] !== \"number\" ||\n            typeof geomRing[0][1] !== \"number\") {\n            throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n        }\n        const firstPoint = precision.snap({ x: new BigNumber(geomRing[0][0]), y: new BigNumber(geomRing[0][1]) });\n        this.bbox = {\n            ll: { x: firstPoint.x, y: firstPoint.y },\n            ur: { x: firstPoint.x, y: firstPoint.y },\n        };\n        let prevPoint = firstPoint;\n        for (let i = 1, iMax = geomRing.length; i < iMax; i++) {\n            if (typeof geomRing[i][0] !== \"number\" ||\n                typeof geomRing[i][1] !== \"number\") {\n                throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n            }\n            const point = precision.snap({ x: new BigNumber(geomRing[i][0]), y: new BigNumber(geomRing[i][1]) });\n            // skip repeated points\n            if (point.x.eq(prevPoint.x) && point.y.eq(prevPoint.y))\n                continue;\n            this.segments.push(Segment.fromRing(prevPoint, point, this));\n            if (point.x.isLessThan(this.bbox.ll.x))\n                this.bbox.ll.x = point.x;\n            if (point.y.isLessThan(this.bbox.ll.y))\n                this.bbox.ll.y = point.y;\n            if (point.x.isGreaterThan(this.bbox.ur.x))\n                this.bbox.ur.x = point.x;\n            if (point.y.isGreaterThan(this.bbox.ur.y))\n                this.bbox.ur.y = point.y;\n            prevPoint = point;\n        }\n        // add segment from last to first if last is not the same as first\n        if (!firstPoint.x.eq(prevPoint.x) || !firstPoint.y.eq(prevPoint.y)) {\n            this.segments.push(Segment.fromRing(prevPoint, firstPoint, this));\n        }\n    }\n    getSweepEvents() {\n        const sweepEvents = [];\n        for (let i = 0, iMax = this.segments.length; i < iMax; i++) {\n            const segment = this.segments[i];\n            sweepEvents.push(segment.leftSE);\n            sweepEvents.push(segment.rightSE);\n        }\n        return sweepEvents;\n    }\n}\nexport class PolyIn {\n    multiPoly;\n    exteriorRing;\n    interiorRings;\n    bbox;\n    constructor(geomPoly, multiPoly) {\n        if (!Array.isArray(geomPoly)) {\n            throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n        }\n        this.exteriorRing = new RingIn(geomPoly[0], this, true);\n        // copy by value\n        this.bbox = {\n            ll: { x: this.exteriorRing.bbox.ll.x, y: this.exteriorRing.bbox.ll.y },\n            ur: { x: this.exteriorRing.bbox.ur.x, y: this.exteriorRing.bbox.ur.y },\n        };\n        this.interiorRings = [];\n        for (let i = 1, iMax = geomPoly.length; i < iMax; i++) {\n            const ring = new RingIn(geomPoly[i], this, false);\n            if (ring.bbox.ll.x.isLessThan(this.bbox.ll.x))\n                this.bbox.ll.x = ring.bbox.ll.x;\n            if (ring.bbox.ll.y.isLessThan(this.bbox.ll.y))\n                this.bbox.ll.y = ring.bbox.ll.y;\n            if (ring.bbox.ur.x.isGreaterThan(this.bbox.ur.x))\n                this.bbox.ur.x = ring.bbox.ur.x;\n            if (ring.bbox.ur.y.isGreaterThan(this.bbox.ur.y))\n                this.bbox.ur.y = ring.bbox.ur.y;\n            this.interiorRings.push(ring);\n        }\n        this.multiPoly = multiPoly;\n    }\n    getSweepEvents() {\n        const sweepEvents = this.exteriorRing.getSweepEvents();\n        for (let i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n            const ringSweepEvents = this.interiorRings[i].getSweepEvents();\n            for (let j = 0, jMax = ringSweepEvents.length; j < jMax; j++) {\n                sweepEvents.push(ringSweepEvents[j]);\n            }\n        }\n        return sweepEvents;\n    }\n}\nexport class MultiPolyIn {\n    isSubject;\n    polys;\n    bbox;\n    constructor(geom, isSubject) {\n        if (!Array.isArray(geom)) {\n            throw new Error(\"Input geometry is not a valid Polygon or MultiPolygon\");\n        }\n        try {\n            // if the input looks like a polygon, convert it to a multipolygon\n            if (typeof geom[0][0][0] === \"number\")\n                geom = [geom];\n        }\n        catch (ex) {\n            // The input is either malformed or has empty arrays.\n            // In either case, it will be handled later on.\n        }\n        this.polys = [];\n        this.bbox = {\n            ll: { x: new BigNumber(Number.POSITIVE_INFINITY), y: new BigNumber(Number.POSITIVE_INFINITY) },\n            ur: { x: new BigNumber(Number.NEGATIVE_INFINITY), y: new BigNumber(Number.NEGATIVE_INFINITY) },\n        };\n        for (let i = 0, iMax = geom.length; i < iMax; i++) {\n            const poly = new PolyIn(geom[i], this);\n            if (poly.bbox.ll.x.isLessThan(this.bbox.ll.x))\n                this.bbox.ll.x = poly.bbox.ll.x;\n            if (poly.bbox.ll.y.isLessThan(this.bbox.ll.y))\n                this.bbox.ll.y = poly.bbox.ll.y;\n            if (poly.bbox.ur.x.isGreaterThan(this.bbox.ur.x))\n                this.bbox.ur.x = poly.bbox.ur.x;\n            if (poly.bbox.ur.y.isGreaterThan(this.bbox.ur.y))\n                this.bbox.ur.y = poly.bbox.ur.y;\n            this.polys.push(poly);\n        }\n        this.isSubject = isSubject;\n    }\n    getSweepEvents() {\n        const sweepEvents = [];\n        for (let i = 0, iMax = this.polys.length; i < iMax; i++) {\n            const polySweepEvents = this.polys[i].getSweepEvents();\n            for (let j = 0, jMax = polySweepEvents.length; j < jMax; j++) {\n                sweepEvents.push(polySweepEvents[j]);\n            }\n        }\n        return sweepEvents;\n    }\n}\n","import { precision } from \"./precision.js\";\nimport SweepEvent from \"./sweep-event.js\";\nexport class RingOut {\n    events;\n    poly;\n    _isExteriorRing;\n    _enclosingRing;\n    /* Given the segments from the sweep line pass, compute & return a series\n     * of closed rings from all the segments marked to be part of the result */\n    static factory(allSegments) {\n        const ringsOut = [];\n        for (let i = 0, iMax = allSegments.length; i < iMax; i++) {\n            const segment = allSegments[i];\n            if (!segment.isInResult() || segment.ringOut)\n                continue;\n            let prevEvent = null;\n            let event = segment.leftSE;\n            let nextEvent = segment.rightSE;\n            const events = [event];\n            const startingPoint = event.point;\n            const intersectionLEs = [];\n            /* Walk the chain of linked events to form a closed ring */\n            while (true) {\n                prevEvent = event;\n                event = nextEvent;\n                events.push(event);\n                /* Is the ring complete? */\n                if (event.point === startingPoint)\n                    break;\n                while (true) {\n                    const availableLEs = event.getAvailableLinkedEvents();\n                    /* Did we hit a dead end? This shouldn't happen. Indicates some earlier\n                     * part of the algorithm malfunctioned... please file a bug report. */\n                    if (availableLEs.length === 0) {\n                        const firstPt = events[0].point;\n                        const lastPt = events[events.length - 1].point;\n                        throw new Error(`Unable to complete output ring starting at [${firstPt.x},` +\n                            ` ${firstPt.y}]. Last matching segment found ends at` +\n                            ` [${lastPt.x}, ${lastPt.y}].`);\n                    }\n                    /* Only one way to go, so cotinue on the path */\n                    if (availableLEs.length === 1) {\n                        nextEvent = availableLEs[0].otherSE;\n                        break;\n                    }\n                    /* We must have an intersection. Check for a completed loop */\n                    let indexLE = null;\n                    for (let j = 0, jMax = intersectionLEs.length; j < jMax; j++) {\n                        if (intersectionLEs[j].point === event.point) {\n                            indexLE = j;\n                            break;\n                        }\n                    }\n                    /* Found a completed loop. Cut that off and make a ring */\n                    if (indexLE !== null) {\n                        const intersectionLE = intersectionLEs.splice(indexLE)[0];\n                        const ringEvents = events.splice(intersectionLE.index);\n                        ringEvents.unshift(ringEvents[0].otherSE);\n                        ringsOut.push(new RingOut(ringEvents.reverse()));\n                        continue;\n                    }\n                    /* register the intersection */\n                    intersectionLEs.push({\n                        index: events.length,\n                        point: event.point,\n                    });\n                    /* Choose the left-most option to continue the walk */\n                    const comparator = event.getLeftmostComparator(prevEvent);\n                    nextEvent = availableLEs.sort(comparator)[0].otherSE;\n                    break;\n                }\n            }\n            ringsOut.push(new RingOut(events));\n        }\n        return ringsOut;\n    }\n    constructor(events) {\n        this.events = events;\n        for (let i = 0, iMax = events.length; i < iMax; i++) {\n            events[i].segment.ringOut = this;\n        }\n        this.poly = null;\n    }\n    getGeom() {\n        // Remove superfluous points (ie extra points along a straight line),\n        let prevPt = this.events[0].point;\n        const points = [prevPt];\n        for (let i = 1, iMax = this.events.length - 1; i < iMax; i++) {\n            const pt = this.events[i].point;\n            const nextPt = this.events[i + 1].point;\n            if (precision.orient(pt, prevPt, nextPt) === 0)\n                continue;\n            points.push(pt);\n            prevPt = pt;\n        }\n        // ring was all (within rounding error of angle calc) colinear points\n        if (points.length === 1)\n            return null;\n        // check if the starting point is necessary\n        const pt = points[0];\n        const nextPt = points[1];\n        if (precision.orient(pt, prevPt, nextPt) === 0)\n            points.shift();\n        points.push(points[0]);\n        const step = this.isExteriorRing() ? 1 : -1;\n        const iStart = this.isExteriorRing() ? 0 : points.length - 1;\n        const iEnd = this.isExteriorRing() ? points.length : -1;\n        const orderedPoints = [];\n        for (let i = iStart; i != iEnd; i += step)\n            orderedPoints.push([points[i].x.toNumber(), points[i].y.toNumber()]);\n        return orderedPoints;\n    }\n    isExteriorRing() {\n        if (this._isExteriorRing === undefined) {\n            const enclosing = this.enclosingRing();\n            this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n        }\n        return this._isExteriorRing;\n    }\n    enclosingRing() {\n        if (this._enclosingRing === undefined) {\n            this._enclosingRing = this._calcEnclosingRing();\n        }\n        return this._enclosingRing;\n    }\n    /* Returns the ring that encloses this one, if any */\n    _calcEnclosingRing() {\n        // start with the ealier sweep line event so that the prevSeg\n        // chain doesn't lead us inside of a loop of ours\n        let leftMostEvt = this.events[0];\n        for (let i = 1, iMax = this.events.length; i < iMax; i++) {\n            const evt = this.events[i];\n            if (SweepEvent.compare(leftMostEvt, evt) > 0)\n                leftMostEvt = evt;\n        }\n        let prevSeg = leftMostEvt.segment.prevInResult();\n        let prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n        while (true) {\n            // no segment found, thus no ring can enclose us\n            if (!prevSeg)\n                return null;\n            // no segments below prev segment found, thus the ring of the prev\n            // segment must loop back around and enclose us\n            if (!prevPrevSeg)\n                return prevSeg.ringOut;\n            // if the two segments are of different rings, the ring of the prev\n            // segment must either loop around us or the ring of the prev prev\n            // seg, which would make us and the ring of the prev peers\n            if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n                if (prevPrevSeg.ringOut?.enclosingRing() !== prevSeg.ringOut) {\n                    return prevSeg.ringOut;\n                }\n                else\n                    return prevSeg.ringOut?.enclosingRing();\n            }\n            // two segments are from the same ring, so this was a penisula\n            // of that ring. iterate downward, keep searching\n            prevSeg = prevPrevSeg.prevInResult();\n            prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n        }\n    }\n}\nexport class PolyOut {\n    exteriorRing;\n    interiorRings;\n    constructor(exteriorRing) {\n        this.exteriorRing = exteriorRing;\n        exteriorRing.poly = this;\n        this.interiorRings = [];\n    }\n    addInterior(ring) {\n        this.interiorRings.push(ring);\n        ring.poly = this;\n    }\n    getGeom() {\n        const geom0 = this.exteriorRing.getGeom();\n        // exterior ring was all (within rounding error of angle calc) colinear points\n        if (geom0 === null)\n            return null;\n        const geom = [geom0];\n        for (let i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n            const ringGeom = this.interiorRings[i].getGeom();\n            // interior ring was all (within rounding error of angle calc) colinear points\n            if (ringGeom === null)\n                continue;\n            geom.push(ringGeom);\n        }\n        return geom;\n    }\n}\nexport class MultiPolyOut {\n    rings;\n    polys;\n    constructor(rings) {\n        this.rings = rings;\n        this.polys = this._composePolys(rings);\n    }\n    getGeom() {\n        const geom = [];\n        for (let i = 0, iMax = this.polys.length; i < iMax; i++) {\n            const polyGeom = this.polys[i].getGeom();\n            // exterior ring was all (within rounding error of angle calc) colinear points\n            if (polyGeom === null)\n                continue;\n            geom.push(polyGeom);\n        }\n        return geom;\n    }\n    _composePolys(rings) {\n        const polys = [];\n        for (let i = 0, iMax = rings.length; i < iMax; i++) {\n            const ring = rings[i];\n            if (ring.poly)\n                continue;\n            if (ring.isExteriorRing())\n                polys.push(new PolyOut(ring));\n            else {\n                const enclosingRing = ring.enclosingRing();\n                if (!enclosingRing?.poly)\n                    polys.push(new PolyOut(enclosingRing));\n                enclosingRing?.poly?.addInterior(ring);\n            }\n        }\n        return polys;\n    }\n}\n","import { SplayTreeSet } from \"splaytree-ts\";\nimport Segment from \"./segment.js\";\nimport SweepEvent from \"./sweep-event.js\";\n/**\n * NOTE:  We must be careful not to change any segments while\n *        they are in the SplayTree. AFAIK, there's no way to tell\n *        the tree to rebalance itself - thus before splitting\n *        a segment that's in the tree, we remove it from the tree,\n *        do the split, then re-insert it. (Even though splitting a\n *        segment *shouldn't* change its correct position in the\n *        sweep line tree, the reality is because of rounding errors,\n *        it sometimes does.)\n */\nexport default class SweepLine {\n    queue;\n    tree;\n    segments;\n    constructor(queue, comparator = Segment.compare) {\n        this.queue = queue;\n        this.tree = new SplayTreeSet(comparator);\n        this.segments = [];\n    }\n    process(event) {\n        const segment = event.segment;\n        const newEvents = [];\n        // if we've already been consumed by another segment,\n        // clean up our body parts and get out\n        if (event.consumedBy) {\n            if (event.isLeft)\n                this.queue.delete(event.otherSE);\n            else\n                this.tree.delete(segment);\n            return newEvents;\n        }\n        if (event.isLeft)\n            this.tree.add(segment);\n        let prevSeg = segment;\n        let nextSeg = segment;\n        // skip consumed segments still in tree\n        do {\n            prevSeg = this.tree.lastBefore(prevSeg);\n        } while (prevSeg != null && prevSeg.consumedBy != undefined);\n        // skip consumed segments still in tree\n        do {\n            nextSeg = this.tree.firstAfter(nextSeg);\n        } while (nextSeg != null && nextSeg.consumedBy != undefined);\n        if (event.isLeft) {\n            // Check for intersections against the previous segment in the sweep line\n            let prevMySplitter = null;\n            if (prevSeg) {\n                const prevInter = prevSeg.getIntersection(segment);\n                if (prevInter !== null) {\n                    if (!segment.isAnEndpoint(prevInter))\n                        prevMySplitter = prevInter;\n                    if (!prevSeg.isAnEndpoint(prevInter)) {\n                        const newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n                        for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n                            newEvents.push(newEventsFromSplit[i]);\n                        }\n                    }\n                }\n            }\n            // Check for intersections against the next segment in the sweep line\n            let nextMySplitter = null;\n            if (nextSeg) {\n                const nextInter = nextSeg.getIntersection(segment);\n                if (nextInter !== null) {\n                    if (!segment.isAnEndpoint(nextInter))\n                        nextMySplitter = nextInter;\n                    if (!nextSeg.isAnEndpoint(nextInter)) {\n                        const newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n                        for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n                            newEvents.push(newEventsFromSplit[i]);\n                        }\n                    }\n                }\n            }\n            // For simplicity, even if we find more than one intersection we only\n            // spilt on the 'earliest' (sweep-line style) of the intersections.\n            // The other intersection will be handled in a future process().\n            if (prevMySplitter !== null || nextMySplitter !== null) {\n                let mySplitter = null;\n                if (prevMySplitter === null)\n                    mySplitter = nextMySplitter;\n                else if (nextMySplitter === null)\n                    mySplitter = prevMySplitter;\n                else {\n                    const cmpSplitters = SweepEvent.comparePoints(prevMySplitter, nextMySplitter);\n                    mySplitter = cmpSplitters <= 0 ? prevMySplitter : nextMySplitter;\n                }\n                // Rounding errors can cause changes in ordering,\n                // so remove afected segments and right sweep events before splitting\n                this.queue.delete(segment.rightSE);\n                newEvents.push(segment.rightSE);\n                const newEventsFromSplit = segment.split(mySplitter);\n                for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n                    newEvents.push(newEventsFromSplit[i]);\n                }\n            }\n            if (newEvents.length > 0) {\n                // We found some intersections, so re-do the current event to\n                // make sure sweep line ordering is totally consistent for later\n                // use with the segment 'prev' pointers\n                this.tree.delete(segment);\n                newEvents.push(event);\n            }\n            else {\n                // done with left event\n                this.segments.push(segment);\n                segment.prev = prevSeg;\n            }\n        }\n        else {\n            // event.isRight\n            // since we're about to be removed from the sweep line, check for\n            // intersections between our previous and next segments\n            if (prevSeg && nextSeg) {\n                const inter = prevSeg.getIntersection(nextSeg);\n                if (inter !== null) {\n                    if (!prevSeg.isAnEndpoint(inter)) {\n                        const newEventsFromSplit = this._splitSafely(prevSeg, inter);\n                        for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n                            newEvents.push(newEventsFromSplit[i]);\n                        }\n                    }\n                    if (!nextSeg.isAnEndpoint(inter)) {\n                        const newEventsFromSplit = this._splitSafely(nextSeg, inter);\n                        for (let i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n                            newEvents.push(newEventsFromSplit[i]);\n                        }\n                    }\n                }\n            }\n            this.tree.delete(segment);\n        }\n        return newEvents;\n    }\n    /* Safely split a segment that is currently in the datastructures\n     * IE - a segment other than the one that is currently being processed. */\n    _splitSafely(seg, pt) {\n        // Rounding errors can cause changes in ordering,\n        // so remove afected segments and right sweep events before splitting\n        // removeNode() doesn't work, so have re-find the seg\n        // https://github.com/w8r/splay-tree/pull/5\n        this.tree.delete(seg);\n        const rightSE = seg.rightSE;\n        this.queue.delete(rightSE);\n        const newEvents = seg.split(pt);\n        newEvents.push(rightSE);\n        // splitting can trigger consumption\n        if (seg.consumedBy === undefined)\n            this.tree.add(seg);\n        return newEvents;\n    }\n}\n","import { SplayTreeSet } from \"splaytree-ts\";\nimport { getBboxOverlap } from \"./bbox.js\";\nimport * as geomIn from \"./geom-in.js\";\nimport * as geomOut from \"./geom-out.js\";\nimport { precision } from \"./precision.js\";\nimport SweepEvent from \"./sweep-event.js\";\nimport SweepLine from \"./sweep-line.js\";\nexport class Operation {\n    type;\n    numMultiPolys;\n    run(type, geom, moreGeoms) {\n        operation.type = type;\n        /* Convert inputs to MultiPoly objects */\n        const multipolys = [new geomIn.MultiPolyIn(geom, true)];\n        for (let i = 0, iMax = moreGeoms.length; i < iMax; i++) {\n            multipolys.push(new geomIn.MultiPolyIn(moreGeoms[i], false));\n        }\n        operation.numMultiPolys = multipolys.length;\n        /* BBox optimization for difference operation\n         * If the bbox of a multipolygon that's part of the clipping doesn't\n         * intersect the bbox of the subject at all, we can just drop that\n         * multiploygon. */\n        if (operation.type === \"difference\") {\n            // in place removal\n            const subject = multipolys[0];\n            let i = 1;\n            while (i < multipolys.length) {\n                if (getBboxOverlap(multipolys[i].bbox, subject.bbox) !== null)\n                    i++;\n                else\n                    multipolys.splice(i, 1);\n            }\n        }\n        /* BBox optimization for intersection operation\n         * If we can find any pair of multipolygons whose bbox does not overlap,\n         * then the result will be empty. */\n        if (operation.type === \"intersection\") {\n            // TODO: this is O(n^2) in number of polygons. By sorting the bboxes,\n            //       it could be optimized to O(n * ln(n))\n            for (let i = 0, iMax = multipolys.length; i < iMax; i++) {\n                const mpA = multipolys[i];\n                for (let j = i + 1, jMax = multipolys.length; j < jMax; j++) {\n                    if (getBboxOverlap(mpA.bbox, multipolys[j].bbox) === null)\n                        return [];\n                }\n            }\n        }\n        /* Put segment endpoints in a priority queue */\n        const queue = new SplayTreeSet(SweepEvent.compare);\n        for (let i = 0, iMax = multipolys.length; i < iMax; i++) {\n            const sweepEvents = multipolys[i].getSweepEvents();\n            for (let j = 0, jMax = sweepEvents.length; j < jMax; j++) {\n                queue.add(sweepEvents[j]);\n            }\n        }\n        /* Pass the sweep line over those endpoints */\n        const sweepLine = new SweepLine(queue);\n        let evt = null;\n        if (queue.size != 0) {\n            evt = queue.first();\n            queue.delete(evt);\n        }\n        while (evt) {\n            const newEvents = sweepLine.process(evt);\n            for (let i = 0, iMax = newEvents.length; i < iMax; i++) {\n                const evt = newEvents[i];\n                if (evt.consumedBy === undefined)\n                    queue.add(evt);\n            }\n            if (queue.size != 0) {\n                evt = queue.first();\n                queue.delete(evt);\n            }\n            else {\n                evt = null;\n            }\n        }\n        // free some memory we don't need anymore\n        precision.reset();\n        /* Collect and compile segments we're keeping into a multipolygon */\n        const ringsOut = geomOut.RingOut.factory(sweepLine.segments);\n        const result = new geomOut.MultiPolyOut(ringsOut);\n        return result.getGeom();\n    }\n}\n// singleton available by import\nconst operation = new Operation();\nexport default operation;\n","import { precision } from \"./precision.js\";\nimport operation from \"./operation.js\";\nexport const union = (geom, ...moreGeoms) => operation.run(\"union\", geom, moreGeoms);\nexport const intersection = (geom, ...moreGeoms) => operation.run(\"intersection\", geom, moreGeoms);\nexport const xor = (geom, ...moreGeoms) => operation.run(\"xor\", geom, moreGeoms);\nexport const difference = (geom, ...moreGeoms) => operation.run(\"difference\", geom, moreGeoms);\nexport const setPrecision = precision.set;\n","var wgs84 = require('wgs84');\n\nmodule.exports.geometry = geometry;\nmodule.exports.ring = ringArea;\n\nfunction geometry(_) {\n    var area = 0, i;\n    switch (_.type) {\n        case 'Polygon':\n            return polygonArea(_.coordinates);\n        case 'MultiPolygon':\n            for (i = 0; i < _.coordinates.length; i++) {\n                area += polygonArea(_.coordinates[i]);\n            }\n            return area;\n        case 'Point':\n        case 'MultiPoint':\n        case 'LineString':\n        case 'MultiLineString':\n            return 0;\n        case 'GeometryCollection':\n            for (i = 0; i < _.geometries.length; i++) {\n                area += geometry(_.geometries[i]);\n            }\n            return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * Calculate the approximate area of the polygon were it projected onto\n *     the earth.  Note that this area will be positive if ring is oriented\n *     clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n *     Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n *     Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * Returns:\n * {float} The approximate signed geodesic area of the polygon in square\n *     meters.\n */\n\nfunction ringArea(coords) {\n    var p1, p2, p3, lowerIndex, middleIndex, upperIndex, i,\n    area = 0,\n    coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) {// i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength -1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) {// i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i+1;\n                upperIndex = i+2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += ( rad(p3[0]) - rad(p1[0]) ) * Math.sin( rad(p2[1]));\n        }\n\n        area = area * wgs84.RADIUS * wgs84.RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}","exports.validateCenter = function validateCenter(center) {\n  var validCenterLengths = [2, 3];\n  if (!Array.isArray(center) || !validCenterLengths.includes(center.length)) {\n    throw new Error(\"ERROR! Center has to be an array of length two or three\");\n  }\n\n  var [lng, lat] = center;\n  if (typeof lng !== \"number\" || typeof lat !== \"number\") {\n    throw new Error(\n      `ERROR! Longitude and Latitude has to be numbers but where ${typeof lng} and ${typeof lat}`\n    );\n  }\n  if (lng > 180 || lng < -180) {\n    throw new Error(`ERROR! Longitude has to be between -180 and 180 but was ${lng}`);\n  }\n\n  if (lat > 90 || lat < -90) {\n    throw new Error(`ERROR! Latitude has to be between -90 and 90 but was ${lat}`);\n  }\n};\n","exports.validateRadius = function validateRadius(radius) {\n  if (typeof radius !== \"number\") {\n    throw new Error(`ERROR! Radius has to be a positive number but was: ${typeof radius}`);\n  }\n\n  if (radius <= 0) {\n    throw new Error(`ERROR! Radius has to be a positive number but was: ${radius}`);\n  }\n};\n","exports.validateNumberOfEdges = function validateNumberOfEdges(numberOfEdges) {\n  if (typeof numberOfEdges !== \"number\") {\n    const ARGUMENT_TYPE = Array.isArray(numberOfEdges) ? \"array\" : typeof numberOfEdges;\n    throw new Error(`ERROR! Number of edges has to be a number but was: ${ARGUMENT_TYPE}`);\n  }\n\n  if (numberOfEdges < 3) {\n    throw new Error(`ERROR! Number of edges has to be at least 3 but was: ${numberOfEdges}`);\n  }\n};\n","exports.validateEarthRadius = function validateEarthRadius(earthRadius) {\n  if (typeof earthRadius !== \"number\") {\n    const ARGUMENT_TYPE = Array.isArray(earthRadius) ? \"array\" : typeof earthRadius;\n    throw new Error(`ERROR! Earth radius has to be a number but was: ${ARGUMENT_TYPE}`);\n  }\n\n  if (earthRadius <= 0) {\n    throw new Error(`ERROR! Earth radius has to be a positive number but was: ${earthRadius}`);\n  }\n};\n","exports.validateBearing = function validateBearing(bearing) {\n  if (typeof bearing !== \"number\") {\n    const ARGUMENT_TYPE = Array.isArray(bearing) ? \"array\" : typeof bearing;\n    throw new Error(`ERROR! Bearing has to be a number but was: ${ARGUMENT_TYPE}`);\n  }\n};\n","var validateCenter = require(\"./validateCenter\").validateCenter;\nvar validateRadius = require(\"./validateRadius\").validateRadius;\nvar validateNumberOfEdges = require(\"./validateNumberOfEdges\").validateNumberOfEdges;\nvar validateEarthRadius = require(\"./validateEarthRadius\").validateEarthRadius;\nvar validateBearing = require(\"./validateBearing\").validateBearing;\n\nfunction validateInput({ center, radius, numberOfEdges, earthRadius, bearing }) {\n  validateCenter(center);\n  validateRadius(radius);\n  validateNumberOfEdges(numberOfEdges);\n  validateEarthRadius(earthRadius);\n  validateBearing(bearing);\n}\n\nexports.validateCenter = validateCenter;\nexports.validateRadius = validateRadius;\nexports.validateNumberOfEdges = validateNumberOfEdges;\nexports.validateEarthRadius = validateEarthRadius;\nexports.validateBearing = validateBearing;\nexports.validateInput = validateInput;\n","\"use strict\";\nvar { validateInput } = require(\"./input-validation\");\n\nconst defaultEarthRadius = 6378137; // equatorial Earth radius\n\nfunction toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\nfunction toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\nfunction offset(c1, distance, earthRadius, bearing) {\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / earthRadius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) + Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  var lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\nmodule.exports = function circleToPolygon(center, radius, options) {\n  var n = getNumberOfEdges(options);\n  var earthRadius = getEarthRadius(options);\n  var bearing = getBearing(options);\n  var direction = getDirection(options);\n\n  // validateInput() throws error on invalid input and do nothing on valid input\n  validateInput({ center, radius, numberOfEdges: n, earthRadius, bearing });\n\n  var start = toRadians(bearing);\n  var coordinates = [];\n  for (var i = 0; i < n; ++i) {\n    coordinates.push(\n      offset(\n        center, radius, earthRadius, start + (direction * 2 * Math.PI * -i) / n\n      )\n    );\n  }\n  coordinates.push(coordinates[0]);\n\n  return {\n    type: \"Polygon\",\n    coordinates: [coordinates]\n  };\n};\n\nfunction getNumberOfEdges(options) {\n  if (isUndefinedOrNull(options)) {\n    return 32;\n  } else if (isObjectNotArray(options)) {\n    var numberOfEdges = options.numberOfEdges;\n    return numberOfEdges === undefined ? 32 : numberOfEdges;\n  }\n  return options;\n}\n\nfunction getEarthRadius(options) {\n  if (isUndefinedOrNull(options)) {\n    return defaultEarthRadius;\n  } else if (isObjectNotArray(options)) {\n    var earthRadius = options.earthRadius;\n    return earthRadius === undefined ? defaultEarthRadius : earthRadius;\n  }\n  return defaultEarthRadius;\n}\n\nfunction getDirection(options){\n  if (isObjectNotArray(options) && options.rightHandRule){\n    return -1;\n  }\n  return 1;\n}\n\nfunction getBearing(options) {\n  if (isUndefinedOrNull(options)) {\n    return 0;\n  } else if (isObjectNotArray(options)) {\n    var bearing = options.bearing;\n    return bearing === undefined ? 0 : bearing;\n  }\n  return 0;\n}\n\nfunction isObjectNotArray(argument) {\n  return argument !== null && typeof argument === \"object\" && !Array.isArray(argument);\n}\n\nfunction isUndefinedOrNull(argument) {\n  return argument === null || argument === undefined;\n}\n","(function() {\n\n  function parse(t, coordinatePrecision, extrasPrecision) {\n\n    function point(p) {\n      return p.map(function(e, index) {\n        if (index < 2) {\n            return 1 * e.toFixed(coordinatePrecision);\n        } else {\n            return 1 * e.toFixed(extrasPrecision);\n        }\n      });\n    }\n\n    function multi(l) {\n      return l.map(point);\n    }\n\n    function poly(p) {\n      return p.map(multi);\n    }\n\n    function multiPoly(m) {\n      return m.map(poly);\n    }\n\n    function geometry(obj) {\n      if (!obj) {\n        return {};\n      }\n      \n      switch (obj.type) {\n        case \"Point\":\n          obj.coordinates = point(obj.coordinates);\n          return obj;\n        case \"LineString\":\n        case \"MultiPoint\":\n          obj.coordinates = multi(obj.coordinates);\n          return obj;\n        case \"Polygon\":\n        case \"MultiLineString\":\n          obj.coordinates = poly(obj.coordinates);\n          return obj;\n        case \"MultiPolygon\":\n          obj.coordinates = multiPoly(obj.coordinates);\n          return obj;\n        case \"GeometryCollection\":\n          obj.geometries = obj.geometries.map(geometry);\n          return obj;\n        default :\n          return {};\n      }\n    }\n\n    function feature(obj) {\n      obj.geometry = geometry(obj.geometry);\n      return obj\n    }\n\n    function featureCollection(f) {\n      f.features = f.features.map(feature);\n      return f;\n    }\n\n    function geometryCollection(g) {\n      g.geometries = g.geometries.map(geometry);\n      return g;\n    }\n\n    if (!t) {\n      return t;\n    }\n\n    switch (t.type) {\n      case \"Feature\":\n        return feature(t);\n      case \"GeometryCollection\" :\n        return geometryCollection(t);\n      case \"FeatureCollection\" :\n        return featureCollection(t);\n      case \"Point\":\n      case \"LineString\":\n      case \"Polygon\":\n      case \"MultiPoint\":\n      case \"MultiPolygon\":\n      case \"MultiLineString\":\n        return geometry(t);\n      default :\n        return t;\n    }\n      \n  }\n\n  module.exports = parse;\n  module.exports.parse = parse;\n\n}());\n  \n","function isObject (obj) {\n  return typeof obj === 'object' && obj !== null\n}\n\nfunction forEach (obj, cb) {\n  if (Array.isArray(obj)) {\n    obj.forEach(cb)\n  } else if (isObject(obj)) {\n    Object.keys(obj).forEach(function (key) {\n      var val = obj[key]\n      cb(val, key)\n    })\n  }\n}\n\nfunction getTreeDepth (obj) {\n  var depth = 0\n\n  if (Array.isArray(obj) || isObject(obj)) {\n    forEach(obj, function (val) {\n      if (Array.isArray(val) || isObject(val)) {\n        var tmpDepth = getTreeDepth(val)\n        if (tmpDepth > depth) {\n          depth = tmpDepth\n        }\n      }\n    })\n\n    return depth + 1\n  }\n\n  return depth\n}\n\nfunction stringify (obj, options) {\n  options = options || {}\n  var indent = JSON.stringify([1], null, get(options, 'indent', 2)).slice(2, -3)\n  var addMargin = get(options, 'margins', false)\n  var addArrayMargin = get(options, 'arrayMargins', false)\n  var addObjectMargin = get(options, 'objectMargins', false)\n  var maxLength = (indent === '' ? Infinity : get(options, 'maxLength', 80))\n  var maxNesting = get(options, 'maxNesting', Infinity)\n\n  return (function _stringify (obj, currentIndent, reserved) {\n    if (obj && typeof obj.toJSON === 'function') {\n      obj = obj.toJSON()\n    }\n\n    var string = JSON.stringify(obj)\n\n    if (string === undefined) {\n      return string\n    }\n\n    var length = maxLength - currentIndent.length - reserved\n\n    var treeDepth = getTreeDepth(obj)\n    if (treeDepth <= maxNesting && string.length <= length) {\n      var prettified = prettify(string, {\n        addMargin: addMargin,\n        addArrayMargin: addArrayMargin,\n        addObjectMargin: addObjectMargin\n      })\n      if (prettified.length <= length) {\n        return prettified\n      }\n    }\n\n    if (isObject(obj)) {\n      var nextIndent = currentIndent + indent\n      var items = []\n      var delimiters\n      var comma = function (array, index) {\n        return (index === array.length - 1 ? 0 : 1)\n      }\n\n      if (Array.isArray(obj)) {\n        for (var index = 0; index < obj.length; index++) {\n          items.push(\n            _stringify(obj[index], nextIndent, comma(obj, index)) || 'null'\n          )\n        }\n        delimiters = '[]'\n      } else {\n        Object.keys(obj).forEach(function (key, index, array) {\n          var keyPart = JSON.stringify(key) + ': '\n          var value = _stringify(obj[key], nextIndent,\n                                 keyPart.length + comma(array, index))\n          if (value !== undefined) {\n            items.push(keyPart + value)\n          }\n        })\n        delimiters = '{}'\n      }\n\n      if (items.length > 0) {\n        return [\n          delimiters[0],\n          indent + items.join(',\\n' + nextIndent),\n          delimiters[1]\n        ].join('\\n' + currentIndent)\n      }\n    }\n\n    return string\n  }(obj, '', 0))\n}\n\n// Note: This regex matches even invalid JSON strings, but since we’re\n// working on the output of `JSON.stringify` we know that only valid strings\n// are present (unless the user supplied a weird `options.indent` but in\n// that case we don’t care since the output would be invalid anyway).\nvar stringOrChar = /(\"(?:[^\\\\\"]|\\\\.)*\")|[:,\\][}{]/g\n\nfunction prettify (string, options) {\n  options = options || {}\n\n  var tokens = {\n    '{': '{',\n    '}': '}',\n    '[': '[',\n    ']': ']',\n    ',': ', ',\n    ':': ': '\n  }\n\n  if (options.addMargin || options.addObjectMargin) {\n    tokens['{'] = '{ '\n    tokens['}'] = ' }'\n  }\n\n  if (options.addMargin || options.addArrayMargin) {\n    tokens['['] = '[ '\n    tokens[']'] = ' ]'\n  }\n\n  return string.replace(stringOrChar, function (match, string) {\n    return string ? match : tokens[match]\n  })\n}\n\nfunction get (options, name, defaultValue) {\n  return (name in options ? options[name] : defaultValue)\n}\n\nmodule.exports = stringify\n","import * as CountryCoder from '@rapideditor/country-coder';\nimport * as Polyclip from 'polyclip-ts';\n\nimport calcArea from '@mapbox/geojson-area';\nimport circleToPolygon  from 'circle-to-polygon';\nimport precision  from 'geojson-precision';\nimport prettyStringify from '@aitodotai/json-stringify-pretty-compact';\n\n\nexport class LocationConflation {\n\n  // constructor\n  //\n  // `fc`  Optional FeatureCollection of known features\n  //\n  // Optionally pass a GeoJSON FeatureCollection of known features which we can refer to later.\n  // Each feature must have a filename-like `id`, for example: `something.geojson`\n  //\n  // {\n  //   \"type\": \"FeatureCollection\"\n  //   \"features\": [\n  //     {\n  //       \"type\": \"Feature\",\n  //       \"id\": \"philly_metro.geojson\",\n  //       \"properties\": { … },\n  //       \"geometry\": { … }\n  //     }\n  //   ]\n  // }\n  constructor(fc) {\n    // The _cache retains resolved features, so if you ask for the same thing multiple times\n    // we don't repeat the expensive resolving/clipping operations.\n    //\n    // Each feature has a stable identifier that is used as the cache key.\n    // The identifiers look like:\n    // - for point locations, the stringified point:          e.g. '[8.67039,49.41882]'\n    // - for geojson locations, the geojson id:               e.g. 'de-hamburg.geojson'\n    // - for countrycoder locations, feature.id property:     e.g. 'Q2'  (countrycoder uses Wikidata identifiers)\n    // - for aggregated locationSets, +[include]-[exclude]:   e.g '+[Q2]-[Q18,Q27611]'\n    this._cache = {};\n\n    // When strict mode = true, throw on invalid locations or locationSets.\n    // When strict mode = false, return `null` for invalid locations or locationSets.\n    this.strict = true;\n\n    // process input FeatureCollection\n    if (fc && fc.type === 'FeatureCollection' && Array.isArray(fc.features)) {\n      fc.features.forEach(feature => {\n        feature.properties = feature.properties || {};\n        let props = feature.properties;\n\n        // Get `id` from either `id` or `properties`\n        let id = feature.id || props.id;\n        if (!id || !/^\\S+\\.geojson$/i.test(id)) return;\n\n        // Ensure `id` exists and is lowercase\n        id = id.toLowerCase();\n        feature.id = id;\n        props.id = id;\n\n        // Ensure `area` property exists\n        if (!props.area) {\n          const area = calcArea.geometry(feature.geometry) / 1e6;  // m² to km²\n          props.area = Number(area.toFixed(2));\n        }\n\n        this._cache[id] = feature;\n      });\n    }\n\n    // Replace CountryCoder world geometry to be a polygon covering the world.\n    let world = _cloneDeep(CountryCoder.feature('Q2'));\n    world.geometry = {\n      type: 'Polygon',\n      coordinates: [[[-180, -90], [180, -90], [180, 90], [-180, 90], [-180, -90]]]\n    };\n    world.id = 'Q2';\n    world.properties.id = 'Q2';\n    world.properties.area = calcArea.geometry(world.geometry) / 1e6;  // m² to km²\n    this._cache.Q2 = world;\n  }\n\n\n  // validateLocation\n  // `location`  The location to validate\n  //\n  // Pass a `location` value to validate\n  //\n  // Returns a result like:\n  //   {\n  //     type:     'point', 'geojson', or 'countrycoder'\n  //     location:  the queried location\n  //     id:        the stable identifier for the feature\n  //   }\n  // or `null` if the location is invalid\n  //\n  validateLocation(location) {\n    if (Array.isArray(location) && (location.length === 2 || location.length === 3)) {   // [lon, lat] or [lon, lat, radius] point?\n      const lon = location[0];\n      const lat = location[1];\n      const radius = location[2];\n      if (\n        Number.isFinite(lon) && lon >= -180 && lon <= 180 &&\n        Number.isFinite(lat) && lat >= -90 && lat <= 90 &&\n        (location.length === 2 || (Number.isFinite(radius) && radius > 0))\n      ) {\n        const id = '[' + location.toString() + ']';\n        return { type: 'point', location: location, id: id };\n      }\n\n    } else if (typeof location === 'string' && /^\\S+\\.geojson$/i.test(location)) {   // a .geojson filename?\n      const id = location.toLowerCase();\n      if (this._cache[id]) {\n        return { type: 'geojson', location: location, id: id };\n      }\n\n    } else if (typeof location === 'string' || typeof location === 'number') {   // a country-coder value?\n      const feature = CountryCoder.feature(location);\n      if (feature) {\n        // Use wikidata QID as the identifier, since that seems to be the one\n        // property that everything in CountryCoder is guaranteed to have.\n        const id = feature.properties.wikidata;\n        return { type: 'countrycoder', location: location, id: id };\n      }\n    }\n\n    if (this.strict) {\n      throw new Error(`validateLocation:  Invalid location: \"${location}\".`);\n    } else {\n      return null;\n    }\n  }\n\n\n  // resolveLocation\n  // `location`  The location to resolve\n  //\n  // Pass a `location` value to resolve\n  //\n  // Returns a result like:\n  //   {\n  //     type:      'point', 'geojson', or 'countrycoder'\n  //     location:  the queried location\n  //     id:        a stable identifier for the feature\n  //     feature:   the resolved GeoJSON feature\n  //   }\n  //  or `null` if the location is invalid\n  //\n  resolveLocation(location) {\n    const valid = this.validateLocation(location);\n    if (!valid) return null;\n\n    const id = valid.id;\n\n    // Return a result from cache if we can\n    if (this._cache[id]) {\n      return Object.assign(valid, { feature: this._cache[id] });\n    }\n\n    // A [lon,lat] coordinate pair?\n    if (valid.type === 'point') {\n      const lon = location[0];\n      const lat = location[1];\n      const radius = location[2] || 25;   // km\n      const EDGES = 10;\n      const PRECISION = 3;\n      const area = Math.PI * radius * radius;\n      const feature = this._cache[id] = precision({\n        type: 'Feature',\n        id: id,\n        properties: { id: id, area: Number(area.toFixed(2)) },\n        geometry: circleToPolygon([lon, lat], radius * 1000, EDGES)  // km to m\n      }, PRECISION);\n      return Object.assign(valid, { feature: feature });\n\n    // A .geojson filename?\n    } else if (valid.type === 'geojson') {\n      // nothing to do here - these are all in _cache and would have returned already\n\n    // A country-coder identifier?\n    } else if (valid.type === 'countrycoder') {\n      let feature = _cloneDeep(CountryCoder.feature(id));\n      let props = feature.properties;\n\n      // -> This block of code is weird and requires some explanation. <-\n      // CountryCoder includes higher level features which are made up of members.\n      // These features don't have their own geometry, but CountryCoder provides an\n      //   `aggregateFeature` method to combine these members into a MultiPolygon.\n      // In the past, Turf/JSTS/martinez could not handle the aggregated features,\n      //   so we'd iteratively union them all together.  (this was slow)\n      // But now mfogel/polygon-clipping handles these MultiPolygons like a boss.\n      // This approach also has the benefit of removing all the internal boaders and\n      //   simplifying the regional polygons a lot.\n      if (Array.isArray(props.members)) {\n        let aggregate = CountryCoder.aggregateFeature(id);\n        aggregate.geometry.coordinates = _clip([aggregate], 'UNION').geometry.coordinates;\n        feature.geometry = aggregate.geometry;\n      }\n\n      // Ensure `area` property exists\n      if (!props.area) {\n        const area = calcArea.geometry(feature.geometry) / 1e6;  // m² to km²\n        props.area = Number(area.toFixed(2));\n      }\n\n      // Ensure `id` property exists\n      feature.id = id;\n      props.id = id;\n\n      this._cache[id] = feature;\n      return Object.assign(valid, { feature: feature });\n    }\n\n    if (this.strict) {\n      throw new Error(`resolveLocation:  Couldn't resolve location \"${location}\".`);\n    } else {\n      return null;\n    }\n  }\n\n\n  // validateLocationSet\n  // `locationSet`  the locationSet to validate\n  //\n  // Pass a locationSet Object to validate like:\n  //   {\n  //     include: [ Array of locations ],\n  //     exclude: [ Array of locations ]\n  //   }\n  //\n  // Returns a result like:\n  //   {\n  //     type:         'locationset'\n  //     locationSet:  the queried locationSet\n  //     id:           the stable identifier for the feature\n  //   }\n  // or `null` if the locationSet is invalid\n  //\n  validateLocationSet(locationSet) {\n    locationSet = locationSet || {};\n    const validator = this.validateLocation.bind(this);\n    let include = (locationSet.include || []).map(validator).filter(Boolean);\n    let exclude = (locationSet.exclude || []).map(validator).filter(Boolean);\n\n    if (!include.length) {\n      if (this.strict) {\n        throw new Error(`validateLocationSet:  LocationSet includes nothing.`);\n      } else {\n        // non-strict mode, replace an empty locationSet with one that includes \"the world\"\n        locationSet.include = ['Q2'];\n        include = [{ type: 'countrycoder', location: 'Q2', id: 'Q2' }];\n      }\n    }\n\n    // Generate stable identifier\n    include.sort(_sortLocations);\n    let id = '+[' + include.map(d => d.id).join(',') + ']';\n    if (exclude.length) {\n      exclude.sort(_sortLocations);\n      id += '-[' + exclude.map(d => d.id).join(',') + ']';\n    }\n\n    return { type: 'locationset', locationSet: locationSet, id: id };\n  }\n\n\n  // resolveLocationSet\n  // `locationSet`  the locationSet to resolve\n  //\n  // Pass a locationSet Object to validate like:\n  //   {\n  //     include: [ Array of locations ],\n  //     exclude: [ Array of locations ]\n  //   }\n  //\n  // Returns a result like:\n  //   {\n  //     type:         'locationset'\n  //     locationSet:  the queried locationSet\n  //     id:           the stable identifier for the feature\n  //     feature:      the resolved GeoJSON feature\n  //   }\n  // or `null` if the locationSet is invalid\n  //\n  resolveLocationSet(locationSet) {\n    locationSet = locationSet || {};\n    const valid = this.validateLocationSet(locationSet);\n    if (!valid) return null;\n\n    const id = valid.id;\n\n    // Return a result from cache if we can\n    if (this._cache[id]) {\n      return Object.assign(valid, { feature: this._cache[id] });\n    }\n\n    const resolver = this.resolveLocation.bind(this);\n    const includes = (locationSet.include || []).map(resolver).filter(Boolean);\n    const excludes = (locationSet.exclude || []).map(resolver).filter(Boolean);\n\n    // Return quickly if it's a single included location..\n    if (includes.length === 1 && excludes.length === 0) {\n      return Object.assign(valid, { feature: includes[0].feature });\n    }\n\n    // Calculate unions\n    const includeGeoJSON = _clip(includes.map(d => d.feature), 'UNION');\n    const excludeGeoJSON = _clip(excludes.map(d => d.feature), 'UNION');\n\n    // Calculate difference, update `area` and return result\n    let resultGeoJSON = excludeGeoJSON ? _clip([includeGeoJSON, excludeGeoJSON], 'DIFFERENCE') : includeGeoJSON;\n    const area = calcArea.geometry(resultGeoJSON.geometry) / 1e6;  // m² to km²\n    resultGeoJSON.id = id;\n    resultGeoJSON.properties = { id: id, area: Number(area.toFixed(2)) };\n\n    this._cache[id] = resultGeoJSON;\n    return Object.assign(valid, { feature: resultGeoJSON });\n  }\n\n\n  // stringify\n  // convenience method to prettyStringify the given object\n  stringify(obj, options) {\n    return prettyStringify(obj, options);\n  }\n}\n\n\n// Wrap the https://github.com/luizbarboza/polyclip-ts library and return a GeoJSON feature.\nfunction _clip(features, which) {\n  if (!Array.isArray(features) || !features.length) return null;\n\n  const fn = { UNION: Polyclip.union, DIFFERENCE: Polyclip.difference }[which];\n  const args = features.map(feature => feature.geometry.coordinates);\n  const coords = fn.apply(null, args);\n  return {\n    type: 'Feature',\n    properties: {},\n    geometry: {\n      type: whichType(coords),\n      coordinates: coords\n    }\n  };\n\n  // is this a Polygon or a MultiPolygon?\n  function whichType(coords) {\n    const a = Array.isArray(coords);\n    const b = a && Array.isArray(coords[0]);\n    const c = b && Array.isArray(coords[0][0]);\n    const d = c && Array.isArray(coords[0][0][0]);\n    return d ? 'MultiPolygon' : 'Polygon';\n  }\n}\n\n\nfunction _cloneDeep(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\n\n// Sorting the location lists is ok because they end up unioned together.\n// This sorting makes it possible to generate a deterministic id.\nfunction _sortLocations(a, b) {\n  const rank = { countrycoder: 1, geojson: 2, point: 3 };\n  const aRank = rank[a.type];\n  const bRank = rank[b.type];\n\n  return (aRank > bRank) ? 1\n    : (aRank < bRank) ? -1\n    : a.id.localeCompare(b.id);\n}\n\nexport default LocationConflation;\n","import * as nsi from \"../../../node_modules/name-suggestion-index/dist/nsi.json\"\nimport * as nsiWD from \"../../../node_modules/name-suggestion-index/dist/wikidata.min.json\"\n\nimport * as nsiFeatures from \"../../../node_modules/name-suggestion-index/dist/featureCollection.json\"\nimport { LocationConflation } from \"@rapideditor/location-conflation\"\nimport type { Feature, MultiPolygon } from \"geojson\"\nimport { Utils } from \"../../Utils\"\nimport * as turf from \"@turf/turf\"\nimport { Mapping } from \"../../Models/ThemeConfig/TagRenderingConfig\"\nimport { Tag } from \"../Tags/Tag\"\nimport { TypedTranslation } from \"../../UI/i18n/Translation\"\nimport { RegexTag } from \"../Tags/RegexTag\"\n\n/**\n * Main name suggestion index file\n */\ninterface NSIFile {\n    _meta: {\n        version: string\n        generated: string\n        url: string\n        hash: string\n    }\n    nsi: {\n        [path: string]: NSIEntry\n    }\n}\n\n/**\n * A collection of brands/operators/flagpoles/... with common properties\n * See https://github.com/osmlab/name-suggestion-index/wiki/Category-Files for an introduction and\n * https://github.com/osmlab/name-suggestion-index/blob/main/schema/categories.json for a full breakdown\n */\ninterface NSIEntry {\n    properties: {\n        path: string\n        skipCollection?: boolean\n        preserveTags?: string[]\n        exclude: unknown\n    }\n    items: NSIItem[]\n}\n\n/**\n * Represents a single brand/operator/flagpole/...\n */\nexport interface NSIItem {\n    displayName: string\n    id: string\n    locationSet: {\n        include: string[],\n        exclude: string[]\n    }\n    tags: Record<string, string>\n    fromTemplate?: boolean\n}\n\nexport default class NameSuggestionIndex {\n\n    private static readonly nsiFile: Readonly<NSIFile> = <any>nsi\n    private static loco = new LocationConflation(nsiFeatures) // Some additional boundaries\n\n    private static _supportedTypes: string[]\n\n    public static supportedTypes(): string[] {\n        if (this._supportedTypes) {\n            return this._supportedTypes\n        }\n        const keys = Object.keys(NameSuggestionIndex.nsiFile.nsi)\n        const all = keys.map(k => NameSuggestionIndex.nsiFile.nsi[k].properties.path.split(\"/\")[0])\n        this._supportedTypes = Utils.Dedup(all)\n        return this._supportedTypes\n    }\n\n\n    /**\n     * Fetches the data files for a single country. Note that it contains _all_ entries having this brand, not for a single type of object\n     * @param type\n     * @param countries\n     * @private\n     */\n    private static async fetchFrequenciesFor(type: string, countries: string[]) {\n        let stats = await Promise.all(countries.map(c => {\n            try {\n\n                return Utils.downloadJsonCached<Record<string, number>>(`./assets/data/nsi/stats/${type}.${c.toUpperCase()}.json`, 24 * 60 * 60 * 1000)\n            } catch (e) {\n                console.error(\"Could not fetch \" + type + \" statistics due to\", e)\n                return undefined\n            }\n        }))\n        stats = Utils.NoNull(stats)\n        if (stats.length === 1) {\n            return stats[0]\n        }\n        const merged = stats[0]\n        for (let i = 1; i < stats.length; i++) {\n            for (const countryCode in stats[i]) {\n                merged[countryCode] = (merged[countryCode] ?? 0) + stats[i][countryCode]\n            }\n        }\n        return merged\n    }\n\n    public static isSvg(nsiItem: NSIItem, type: string): boolean | undefined {\n        const logos = nsiWD[\"wikidata\"][nsiItem?.tags?.[type + \":wikidata\"]]?.logos\n        if(nsiItem.id === \"axa-2f6feb\"){\n            console.trace(\">>> HI\")\n        }\n        if (!logos) {\n            return undefined\n        }\n        if (logos.facebook) {\n            return false\n        }\n        const url: string = logos.wikidata\n        if (url.toLowerCase().endsWith(\".svg\")) {\n            return true\n        }\n        return false\n    }\n\n    public static async generateMappings(type: string, key: string, value: string, country: string[], location?: [number, number]) {\n        const mappings: Mapping[] = []\n        const frequencies = await NameSuggestionIndex.fetchFrequenciesFor(type, country)\n        const actualBrands = NameSuggestionIndex.getSuggestionsFor(type, key, value, country.join(\";\"), location)\n        for (const nsiItem of actualBrands) {\n            const tags = nsiItem.tags\n            const frequency = frequencies[nsiItem.displayName]\n            const logos = nsiWD[\"wikidata\"][nsiItem.tags[type + \":wikidata\"]]?.logos\n            let iconUrl = logos?.facebook ?? logos?.wikidata\n            const hasIcon = iconUrl !== undefined\n            let icon = undefined\n            if (hasIcon) {\n                // Using <img src=...> works fine without an extension for JPG and PNG, but _not_ svg :(\n                icon = \"./assets/data/nsi/logos/\" + nsiItem.id\n                if (NameSuggestionIndex.isSvg(nsiItem, type)) {\n                    console.log(\"Is svg:\", nsiItem.displayName)\n                    icon = icon + \".svg\"\n                }\n            }\n            mappings.push({\n                if: new Tag(type, tags[type]),\n                addExtraTags: Object.keys(tags).filter(k => k !== type).map(k => new Tag(k, tags[k])),\n                then: new TypedTranslation<{}>({ \"*\": nsiItem.displayName }),\n                hideInAnswer: false,\n                ifnot: undefined,\n                alsoShowIf: undefined,\n                icon,\n                iconClass: \"medium\",\n                priorityIf: frequency > 0 ? new RegexTag(\"id\", /.*/) : undefined,\n                searchTerms: { \"*\": [nsiItem.displayName, nsiItem.id] }\n            })\n        }\n        return mappings\n    }\n\n    public static supportedTags(type: \"operator\" | \"brand\" | \"flag\" | \"transit\" | string): Record<string, string[]> {\n        const tags: Record<string, string []> = {}\n        const keys = Object.keys(NameSuggestionIndex.nsiFile.nsi)\n        for (const key of keys) {\n\n            const nsiItem = NameSuggestionIndex.nsiFile.nsi[key]\n            const path = nsiItem.properties.path\n            const [osmType, osmkey, osmvalue] = path.split(\"/\")\n            if (type !== osmType && (type + \"s\" !== osmType)) {\n                continue\n            }\n            if (!tags[osmkey]) {\n                tags[osmkey] = []\n            }\n            tags[osmkey].push(osmvalue)\n        }\n        return tags\n    }\n\n    /**\n     * Returns a list of all brands/operators\n     * @param type\n     */\n    public static allPossible(type: \"brand\" | \"operator\"): NSIItem[] {\n        const options: NSIItem[] = []\n        const tags = NameSuggestionIndex.supportedTags(type)\n        for (const osmKey in tags) {\n            const values = tags[osmKey]\n            for (const osmValue of values) {\n                const suggestions = this.getSuggestionsFor(type, osmKey, osmValue)\n                options.push(...suggestions)\n            }\n        }\n        return (options)\n    }\n\n    /**\n     *\n     * @param path\n     * @param country: a string containing one or more country codes, separated by \";\"\n     * @param location: center point of the feature, should be [lon, lat]\n     */\n    public static getSuggestionsFor(type: string, key: string, value: string, country: string = undefined, location: [number, number] = undefined): NSIItem[] {\n        const path = `${type}s/${key}/${value}`\n        const entry = NameSuggestionIndex.nsiFile.nsi[path]\n        return entry?.items?.filter(i => {\n            if (i.locationSet.include.indexOf(\"001\") >= 0) {\n                return true\n            }\n\n            if (country === undefined ||\n                // We prefer the countries provided by lonlat2country, they are more precise\n                // Country might contain multiple countries, separated by ';'\n                i.locationSet.include.some(c => country.indexOf(c) >= 0)) {\n                return true\n            }\n\n            if (location === undefined) {\n                return true\n            }\n            const resolvedSet = NameSuggestionIndex.loco.resolveLocationSet(i.locationSet)\n\n            if (resolvedSet) {\n                // We actually have a location set, so we can check if the feature is in it, by determining if our point is inside the MultiPolygon using @turf/boolean-point-in-polygon\n                // This might occur for some extra boundaries, such as counties, ...\n                const setFeature: Feature<MultiPolygon> = resolvedSet.feature\n                return turf.booleanPointInPolygon(location, setFeature.geometry)\n            }\n\n            return false\n        })\n    }\n}\n"],"names":["getCoord","coord","getCoords","coords","getGeom","geojson","getType","_name","booleanPointInPolygon","point","polygon","options","pt","geom","type","bbox","polys","inBBox","insidePoly","i","inRing","inHole","k","ring","ignoreBoundary","isInside","j","xi","yi","xj","yj","onBoundary","intersect","global","factory","module","this","quickselect","arr","left","right","compare","quickselectStep","defaultCompare","n","m","z","s","sd","newLeft","newRight","t","swap","tmp","a","b","rbushModule","rbush","require$$0","maxEntries","format","node","result","toBBox","intersects","nodesToSearch","len","child","childBBox","contains","data","tmpNode","item","createNode","equalsFn","path","indexes","parent","index","goingUp","findItem","compareNodeMinX","compareNodeMinY","items","height","N","M","calcBBox","N2","N1","right2","right3","multiSelect","level","targetNode","area","enlargement","minArea","minEnlargement","bboxArea","enlargedArea","isNode","insertPath","extend","splitIndex","newNode","bbox1","bbox2","overlap","minOverlap","distBBox","intersectionArea","compareMinX","compareMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","compareArr","p","destNode","minX","minY","maxX","maxY","children","stack","mid","wgs84","TagsFilter","properties","copy","changes","v","RegexTag","key","value","invert","__publicField","fromTag","possibleRegex","r","includeStartMarker","src","inv","modifier","oper","tags","other","valuesMatch","Tag","f","foundValue","linkToWiki","shorten","currentProperties","Utils","lineclip_1","lineclip","polygonclip","points","codeA","bitCode","part","codeB","lastCode","edge","prev","prevInside","inside","code","require$$1","whichPolygon_1","whichPolygon","bboxes","feature","treeItem","tree","query","multi","output","insidePolygon","polygonIntersectsBBox","bboxCenter","rings","len2","rayIntersect","p1","p2","props","borders_default","borders","_whichPolygon","_featuresByCode","idFilterRegex","canonicalID","id","levels","loadDerivedDataAndCaches","borders2","identifierProps","geometryFeatures","feature2","loadM49","loadTLD","loadIsoStatus","loadLevel","loadGroups","loadFlag","cacheFeatureByIDs","groupID","loadMembersForGroupsOf","loadRoadSpeedUnit","loadRoadHeightUnit","loadDriveSide","loadCallingCodes","loadGroupGroups","groupID1","groupID2","id1","id2","diff","featureLevelIndex","sharedGroups","memberID","memberGroups","groupFeature","vals","member","array","flag","char","ids","prop","alias","cid","locArray","loc","smallestFeature","featureProperties","countryFeature","countryCode","defaultOpts","featureForLoc","opts","targetLevel","maxLevel","withProp","targetLevelIndex","maxLevelIndex","fastFeature","featuresContaining","levelIndex","featureForID","stringID","smallestFeaturesForBbox","smallestOrMatchingFeature","strict","matchingFeatures","smallestOrMatching","returnFeatures","featuresIn","features","aggregateFeature","aggregateCoordinates","_a","constant","x","compare$1","eps","almostEqual","orient","almostCollinear","area2","ax","ay","cx","cy","c","isNumeric","mathceil","mathfloor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","clone","configObject","div","convertBase","parseNumeric","P","BigNumber","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","ALPHABET","alphabetHasNormalDecimalDigits","alphabet","caseChanged","e","isNum","str","intCheck","round","obj","out","maxOrMin","pow2_53","random53bitInt","dp","rand","args","sum","decimal","toBaseOut","baseIn","baseOut","arrL","sign","callerIsToString","d","xc","y","rm","toFixedPoint","coeffToString","multiply","base","temp","xlo","xhi","carry","klo","khi","aL","bL","cmp","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xL","yc0","yL","yz","yc","bitFloor","c0","ne","toExponential","normalise","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","ni","rd","pows10","valueOf","half","isModExp","nIsBig","nIsNeg","nIsOdd","isOdd","xLTy","xe","ye","xcL","ycL","ylo","yhi","zc","sqrtBase","rep","g1","g2","groupSeparator","intPart","fractionPart","isNeg","intDigits","md","d0","d1","d2","exp","n0","n1","l","min","max","name","zs","SplayTreeNode","SplayTreeSetNode","SplayTree","root","newTreeRight","newTreeLeft","current","comp","currentLeft","currentRight","nextLeft","nextRight","count","_SplayTreeSet","isValidKey","element","elements","nodes","nodeRight","nodeLeft","retainSet","modificationCount","object","u","set","copyChildren","dest","SplayTreeSetEntryIterableIterator","SplayTreeKeyIterableIterator","SplayTreeSet","SplayTreeIterableIterator","next","identity","snap","xTree","yTree","snapCoord","precision","isInBbox","getBboxOverlap","b1","b2","lowerX","upperX","lowerY","upperY","crossProduct","dotProduct","length","sineOfAngle","pShared","pBase","pAngle","vBase","vAngle","cosineOfAngle","horizontalIntersection","verticalIntersection","intersection","pt1","v1","pt2","v2","kross","ve","x1","x2","y1","y2","SweepEvent","isLeft","ptCmp","Segment","aPt","bPt","otherEvents","iMax","evt","numEvents","evt1","evt2","events","baseEvent","cache","fillCache","linkedEvent","nextEvent","asine","acosine","bsine","bcosine","segmentId","leftSE","rightSE","windings","alx","blx","arx","brx","aly","bly","ary","bry","aCmpBLeft","bCmpARight","bCmpALeft","aCmpBRight","by","bx","leftPt","rightPt","winding","cmpPts","newRightSE","tBbox","oBbox","bboxOverlap","tlp","trp","olp","orp","touchesOtherLSE","touchesThisLSE","touchesOtherRSE","touchesThisRSE","newEvents","alreadyLinked","newLeftSE","oldRightSE","newSeg","tmpEvt","consumer","consumee","seg","beforeState","ringsAfter","windingsAfter","mpsAfter","polysAfter","polysExclude","poly","mp","mpsBefore","operation","noBefores","noAfters","least","most","isJustSubject","mps","RingIn","geomRing","isExterior","firstPoint","prevPoint","sweepEvents","segment","PolyIn","geomPoly","multiPoly","ringSweepEvents","jMax","MultiPolyIn","isSubject","polySweepEvents","RingOut","allSegments","ringsOut","prevEvent","event","startingPoint","intersectionLEs","availableLEs","firstPt","lastPt","indexLE","intersectionLE","ringEvents","comparator","prevPt","nextPt","step","iStart","iEnd","orderedPoints","enclosing","leftMostEvt","prevSeg","prevPrevSeg","_b","PolyOut","exteriorRing","geom0","ringGeom","MultiPolyOut","polyGeom","enclosingRing","SweepLine","queue","nextSeg","prevMySplitter","prevInter","newEventsFromSplit","nextMySplitter","nextInter","mySplitter","inter","Operation","moreGeoms","multipolys","geomIn.MultiPolyIn","subject","mpA","sweepLine","geomOut.RingOut","geomOut.MultiPolyOut","operation$1","union","difference","geojsonArea","geometry","ringArea","_","polygonArea","p3","lowerIndex","middleIndex","upperIndex","coordsLength","rad","validateCenter","center","validCenterLengths","lng","lat","validateRadius","radius","validateNumberOfEdges","numberOfEdges","ARGUMENT_TYPE","validateEarthRadius","earthRadius","validateBearing","bearing","require$$2","require$$3","require$$4","validateInput","inputValidation","defaultEarthRadius","toRadians","angleInDegrees","toDegrees","angleInRadians","offset","c1","distance","lat1","lon1","dByR","lon","circleToPolygon","getNumberOfEdges","getEarthRadius","getBearing","direction","getDirection","start","coordinates","isUndefinedOrNull","isObjectNotArray","argument","parse","coordinatePrecision","extrasPrecision","featureCollection","geometryCollection","g","geojsonPrecisionModule","isObject","forEach","cb","val","getTreeDepth","depth","tmpDepth","stringify","indent","get","addMargin","addArrayMargin","addObjectMargin","maxLength","maxNesting","_stringify","currentIndent","reserved","string","treeDepth","prettified","prettify","nextIndent","delimiters","comma","keyPart","stringOrChar","tokens","match","defaultValue","jsonStringifyPrettyCompact","LocationConflation","fc","calcArea","world","_cloneDeep","CountryCoder.feature","location","valid","EDGES","PRECISION","aggregate","CountryCoder.aggregateFeature","_clip","locationSet","validator","include","exclude","_sortLocations","resolver","includes","excludes","includeGeoJSON","excludeGeoJSON","resultGeoJSON","prettyStringify","which","fn","Polyclip.union","Polyclip.difference","whichType","rank","aRank","bRank","_NameSuggestionIndex","all","countries","stats","merged","nsiItem","logos","nsiWD[\"wikidata\"]","country","mappings","frequencies","actualBrands","frequency","hasIcon","icon","TypedTranslation","keys","osmType","osmkey","osmvalue","osmKey","values","osmValue","suggestions","entry","resolvedSet","setFeature","turf.booleanPointInPolygon","nsi","nsiFeatures","NameSuggestionIndex"],"mappings":"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AAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,MAAO,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,MAAO,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,C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U,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAA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Q,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,IAAK,QAAQ,EAAG,CAAC,IAAK,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAA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AAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,EAAG,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,KAAK,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,Q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AAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,Q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AAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,O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,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC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AG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,KAAK,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EA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,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,KAAO,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,OAAQ,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,CAAC,EAAG,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,EAAG,CAAC,CAAC,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,CAAC,CAAC,CAAC,EAAK,EACh1N,CAAE,KAAM,UAAW,WAAY,CAAE,SAAU,YAAa,OAAQ,kBAAmB,QAAS,KAAM,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,IAAI,CAAG,EAAE,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG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Q,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,CAAC,EAAG,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,EAAG,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,CAAC,EAAK,EAC9lE,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,cAAe,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,IAAI,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,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U,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,MAAO,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,CAAC,EAAG,CAAC,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,CAAC,EAAG,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,EAAG,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAI,EACrzG,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,SAAU,OAAQ,CAAC,MAAO,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,KAAK,CAAG,EAAE,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,CAAC,EAAK,EACh0D,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,MAAO,OAAQ,aAAc,MAAO,SAAU,aAAc,CAAC,KAAK,CAAG,EAAE,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,IAAK,GAAG,EAAG,CAAC,KAAM,GAAG,EAAG,CAAC,KAAM,GAAG,EAAG,CAAC,IAAK,GAAG,EAAG,CAAC,IAAK,GAAG,CAAC,CAAC,CAAC,EAAK,EACnR,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,YAAa,QAAS,CAAC,IAAI,EAAG,OAAQ,CAAC,MAAO,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,IAAI,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAarkJ,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,SAAU,OAAQ,iBAAkB,QAAS,CAAC,OAAO,EAAG,QAAS,KAAM,OAAQ,CAAC,WAAY,MAAO,MAAO,IAAI,EAAG,cAAe,MAAO,eAAgB,KAAM,aAAc,CAAC,OAAO,GAAK,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,WAAY,SAAS,EAAG,CAAC,WAAY,QAAQ,EAAG,CAAC,WAAY,SAAS,EAAG,CAAC,WAAY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAI,EACza,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,MAAO,OAAQ,UAAW,OAAQ,CAAC,KAAM,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,IAAI,GAAK,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,KAAK,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,S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AAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,EAAG,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,EAAG,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,EAAG,CAAC,CAAC,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,CAAC,CAAC,EAAG,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,MAAO,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,CAAC,EAAK,EACx3J,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,yBAA0B,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,KAAK,CAAG,EAAE,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,CAAC,EAAK,EACt4I,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,WAAY,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,IAAI,EAAG,UAAW,OAAQ,aAAc,CAAC,OAAO,GAAK,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAI,EAChW,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,aAAc,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,UAAW,OAAQ,aAAc,CAAC,KAAK,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAI,EAClzG,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,MAAO,OAAQ,UAAW,OAAQ,CAAC,KAAM,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,IAAI,CAAG,EAAE,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,CAAC,CAAC,EAAG,CAAC,CAAC,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,CAAC,CAAC,EAAG,CAAC,CAAC,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,MAAO,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,MAAO,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,MAAO,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,MAAO,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,CAAC,CAAC,CAAC,EAAK,EAC9pP,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,eAAgB,OAAQ,CAAC,MAAO,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,KAAK,CAAG,EAAE,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,MAAQ,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,MAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAI,EAC1kF,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,WAAY,OAAQ,CAAC,KAAM,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,KAAK,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,KAAK,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,E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AAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,QAAQ,EAAG,C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C,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,MAAO,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAA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AU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,QAAS,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,QAAS,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,KAAK,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAQ,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,SAAU,OAAQ,EAAG,CAAC,SAAU,OAAQ,EAAG,CAAC,SAAU,OAAQ,EAAG,CAAC,SAAU,OAAQ,EAAG,CAAC,SAAU,OAAQ,EAAG,CAAC,QAAS,MAAO,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,QAAS,MAAO,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,CAAC,CAAC,CAAC,CAAC,CAAI,EAC57K,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,2BAA4B,OAAQ,CAAC,MAAO,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,KAAK,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,KAAK,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CA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AG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAQ,EAAG,CAAC,SAAU,OAAQ,EAAG,CAAC,SAAU,OAAQ,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,CAAC,CAAC,CAAC,CAAC,CAAI,EAChjG,CAAE,KAAM,UAAW,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,CAAC,EAAG,CAAC,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,CAAC,EAAG,CAAC,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAI,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,MAAO,OAAQ,cAAe,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,IAAI,EAAK,EACn0Q,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,QAAS,OAAQ,gBAAoB,OAAQ,CAAC,MAAO,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,KAAK,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,CAAC,CAAC,CAAC,CAAC,CAAI,EACn/F,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,SAAU,OAAQ,eAAgB,QAAS,KAAM,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,UAAW,OAAQ,aAAc,CAAC,KAAK,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,WAAY,SAAS,EAAG,CAAC,WAAY,SAAS,EAAG,CAAC,WAAY,SAAS,EAAG,CAAC,WAAY,OAAO,EAAG,CAAC,WAAY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAI,EACpY,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,QAAS,OAAQ,CAAC,MAAO,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,IAAI,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAal/E,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,QAAS,OAAQ,WAAY,OAAQ,CAAC,MAAO,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,KAAK,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,MAAO,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,MAAO,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,CAAC,EAAK,EACjyH,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,4BAA8B,EAAE,SAAU,IAAM,EACvJ,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,WAAY,OAAQ,CAAC,MAAO,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,IAAI,CAAG,EAAE,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,MAAO,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,UAAW,MAAO,EAAG,CAAC,UAAW,MAAO,EAAG,CAAC,UAAW,MAAO,EAAG,CAAC,UAAW,MAAO,EAAG,CAAC,UAAW,MAAO,EAAG,CAAC,UAAW,MAAO,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,UAAW,MAAO,EAAG,CAAC,UAAW,MAAO,EAAG,CAAC,UAAW,MAAO,EAAG,CAAC,UAAW,OAAQ,EAAG,CAAC,UAAW,MAAO,EAAG,CAAC,UAAW,OAAQ,EAAG,CAAC,UAAW,OAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,OAAQ,EAAG,CAAC,QAAS,OAAQ,EAAG,CAAC,UAAW,OAAQ,EAAG,CAAC,UAAW,MAAO,EAAG,CAAC,UAAW,MAAO,EAAG,CAAC,UAAW,MAAO,EAAG,CAAC,UAAW,MAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,OAAO,EAA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G,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAA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AAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,O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,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO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C,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,KAAO,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,KAAK,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,MAAO,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,MAAO,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAA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AG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EA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CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,KAAK,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,CAAC,EAAK,EAC7+H,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,SAAU,OAAQ,2CAA4C,QAAS,KAAM,OAAQ,CAAC,OAAQ,MAAO,MAAO,MAAO,IAAI,EAAG,UAAW,OAAQ,cAAe,MAAO,eAAgB,KAAM,aAAc,CAAC,KAAK,GAAK,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,CAAC,CAAC,CAAC,CAAC,CAAI,EAChc,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,YAAa,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,KAAK,GAAK,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAI,EACv9C,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,SAAU,OAAQ,OAAQ,QAAS,CAAC,OAAO,EAAG,QAAS,KAAM,OAAQ,CAAC,WAAY,UAAW,MAAO,MAAO,IAAI,EAAG,cAAe,MAAO,eAAgB,KAAM,aAAc,CAAC,OAAO,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAI,EACna,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,QAAS,OAAQ,gBAAiB,OAAQ,CAAC,MAAO,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,KAAK,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAI,EACtyB,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,SAAU,OAAQ,CAAC,MAAO,MAAO,MAAO,IAAI,EAAG,UAAW,OAAQ,aAAc,CAAC,KAAK,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,CAAC,CAAC,CAAC,EAAK,EAC9mD,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,QAAS,OAAQ,YAAa,QAAS,KAAM,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,UAAW,OAAQ,aAAc,CAAC,KAAK,CAAG,EAAE,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAI,EAC96B,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,UAAW,OAAQ,oCAAqC,QAAS,KAAM,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,UAAW,MAAQ,EAAE,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,CAAC,CAAC,CAAC,EAAK,EACpW,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,WAAY,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,KAAK,CAAG,EAAE,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,CAAC,CAAC,CAAC,EAAK,EACt3D,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,UAAW,OAAQ,CAAC,KAAM,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,KAAK,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAA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AU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SA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,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC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,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,CAAC,EAAK,EAC3vI,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,OAAQ,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,IAAI,CAAG,EAAE,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAI,EACxsO,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,UAAW,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,KAAK,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,CAAC,CAAC,CAAC,EAAK,EAC1T,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,MAAO,OAAQ,QAAS,OAAQ,CAAC,KAAM,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,IAAI,CAAG,EAAE,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,CAAC,CAAC,EAAG,CAAC,CAAC,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,CAAC,EAAG,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,EAAG,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,C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G,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAA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,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,MAAO,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,MAAO,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ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AAU,OAAO,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,S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EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,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AG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,MAAO,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EA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Q,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,EAAG,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAA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AO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAI,EAC74G,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,aAAc,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,KAAK,CAAG,EAAE,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,MAAO,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ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,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,CAAC,EAAK,EAC5rE,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,OAAQ,OAAQ,CAAC,MAAO,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,KAAK,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAI,EACtnG,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,UAAW,QAAS,CAAC,QAAS,IAAI,EAAG,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,IAAI,CAAG,EAAE,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,MAAO,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,CAAC,EAAK,EAC3kQ,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,WAAY,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,KAAK,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,KAAK,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,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AAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,QAAS,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,QAAS,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,QAAS,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,OAAQ,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,QAAS,SAAS,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,QAAS,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAI,EACxtG,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,MAAO,OAAQ,SAAU,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,IAAI,GAAK,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,QAAQ,EAAG,CAAC,WAAY,OAAO,EAAG,CAAC,WAAY,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,WAAY,QAAQ,EAAG,CAAC,WAAY,QAA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AG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,KAAK,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EA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QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,MAAO,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,OAAQ,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,CAAC,CAAC,CAAC,EAAK,EAC5pH,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,YAAa,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,KAAK,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,CAAC,CAAC,CAAC,EAAK,EAChrC,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,SAAU,OAAQ,4BAA8B,EAAE,SAAU,IAAM,EACzJ,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,MAAO,OAAQ,QAAU,EAAE,SAAU,IAAM,EAClI,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,QAAS,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,UAAW,OAAQ,aAAc,CAAC,KAAK,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,KAAK,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,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AAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,SAAS,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,SAAS,E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AAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,CAAC,CAAC,CAAC,CAAC,CAAI,EACliN,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,MAAO,OAAQ,SAAU,OAAQ,CAAC,KAAM,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,IAAI,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,MAAO,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAA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,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC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AAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,Q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AU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,MAAO,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,KAAK,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAI,EAC1sG,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,MAAO,OAAQ,SAAU,OAAQ,CAAC,KAAM,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,IAAI,GAAK,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU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EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,KAAK,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,CAAC,EAAK,EAC77J,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,UAAW,OAAQ,yBAA0B,QAAS,IAAM,EAAE,SAAU,IAAM,EACrK,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,WAAY,OAAQ,CAAC,KAAM,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,KAAK,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU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,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU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G,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAI,EACxkG,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,UAAW,OAAQ,8BAA+B,QAAS,KAAM,OAAQ,CAAC,KAAM,IAAI,CAAC,EAAI,SAAU,IAAM,EAChM,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,OAAQ,OAAQ,CAAC,MAAO,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,KAAK,CAAG,EAAE,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,OAAS,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAU,OAAO,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,QAAU,OAAO,EAAG,CAAC,QAAU,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,MAAM,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,MAAM,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,MAAQ,OAAO,EAAG,CAAC,OAAS,KAAK,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,MAAQ,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,MAAQ,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,MAAQ,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,MAAM,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,MAAQ,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,OAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,MAAQ,MAAM,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,MAAQ,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,EAAG,CAAC,OAAS,QAAQ,CAAC,CAAC,CAAC,EAAK,EAC3yE,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,WAAY,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,UAAW,OAAQ,aAAc,CAAC,IAAI,CAAG,EAAE,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,MAAO,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,OAAQ,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,KAAK,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,EAAG,CAAC,UAAW,QAAQ,CAAC,CAAC,CAAC,EAAK,EAChuP,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,aAAc,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,KAAK,CAAG,EAAE,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,KAAK,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,EAAG,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,EAAG,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAI,EAClhN,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,SAAU,OAAQ,UAAW,QAAS,KAAM,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,UAAW,OAAQ,aAAc,CAAC,KAAK,CAAG,EAAE,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,WAAY,QAAQ,EAAG,CAAC,WAAY,SAAS,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAI,EACjW,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,aAAc,QAAS,CAAC,cAAe,IAAI,EAAG,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,UAAW,OAAQ,aAAc,CAAC,KAAK,GAAK,SAAU,CAAE,KAAM,eAAgB,YAAaeAAgB,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,KAAK,CAAG,EAAE,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAI,EACx2G,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,UAAW,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,KAAK,CAAG,EAAE,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,CAAC,CAAC,CAAC,EAAK,EACvzC,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,OAAQ,OAAQ,QAAS,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,UAAW,OAAQ,aAAc,CAAC,KAAK,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,WAAY,SAAS,EAAG,CAAC,KAAM,SAAS,EAAG,CAAC,KAAM,SAAS,EAAG,CAAC,WAAY,SAAS,EAAG,CAAC,WAAY,SAAS,EAAG,CAAC,WAAY,SAAS,EAAG,CAAC,WAAY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAI,EACpZ,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,MAAO,OAAQ,SAAU,OAAQ,CAAC,MAAO,MAAO,IAAI,EAAG,aAAc,CAAC,IAAI,CAAG,EAAE,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,KAAK,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EA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AC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,KAAK,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,OAAQ,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,CAAC,CAAC,CAAC,EAAK,EAClvU,CAAE,KAAM,UAAW,WAAY,CAAE,OAAQ,KAAM,OAAQ,MAAO,OAAQ,MAAO,SAAU,QAAS,OAAQ,SAAU,OAAQ,CAAC,MAAO,MAAO,MAAO,IAAI,EAAG,UAAW,OAAQ,aAAc,CAAC,KAAK,CAAC,EAAI,SAAU,CAAE,KAAM,eAAgB,YAAa,CAAC,CAAC,CAAC,CAAC,SAAU,OAAQ,EAAG,CAAC,QAAS,OAAQ,EAAG,CAAC,SAAU,OAAQ,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,SAAU,MAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,KAAK,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,KAAK,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,KAAK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,UAAW,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,MAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,MAAO,EAAG,CAAC,UAAW,MAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC,UAAW,MAAM,EAAG,CAAC,UAAW,OAAO,EAAG,CAAC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G,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,QAAS,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAA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CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,KAAK,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,QAAS,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,QAAS,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,OAAO,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,QAAS,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,QAAS,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,QAAS,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,QAAS,SAAS,EAAG,CAAC,QAAS,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,QAAS,SAAS,EAAG,CAAC,QAAS,QAAQ,EAAG,CAAC,SAAU,QAAQ,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,QAAS,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,QAAS,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,QAAS,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,SAAS,EAAG,CAAC,SAAU,QAAQ,EAAG,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","x_google_ignoreList":[0,1,2,3,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38]}